

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Sep 26 17:40:19 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75  0000                     
    76                           ; Version 2.20
    77                           ; Generated 12/02/2020 GMT
    78                           ; 
    79                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F4520 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     
   111                           	psect	idataCOMRAM
   112  0056E4                     __pidataCOMRAM:
   113                           	callstack 0
   114                           
   115                           ;initializer for _newMessage
   116  0056E4  01                 	db	1
   117                           
   118                           	psect	idataBANK0
   119  0056DC                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for _tempSetpoint
   123  0056DC  0028               	dw	40
   124                           
   125                           ;initializer for _ki
   126  0056DE  0002               	dw	2
   127                           
   128                           ;initializer for _kp
   129  0056E0  0010               	dw	16
   130                           
   131                           ;initializer for _origemParametrosManual
   132  0056E2  0001               	dw	1
   133                           
   134                           	psect	smallconst
   135  000600                     __psmallconst:
   136                           	callstack 0
   137  000600  00                 	db	0
   138  000601                     __powers_:
   139                           	callstack 0
   140  000601  0000               	dw	0
   141  000603  3F80               	dw	16256
   142  000605  0000               	dw	0
   143  000607  4120               	dw	16672
   144  000609  0000               	dw	0
   145  00060B  42C8               	dw	17096
   146  00060D  0000               	dw	0
   147  00060F  447A               	dw	17530
   148  000611  4000               	dw	16384
   149  000613  461C               	dw	17948
   150  000615  5000               	dw	20480
   151  000617  47C3               	dw	18371
   152  000619  2400               	dw	9216
   153  00061B  4974               	dw	18804
   154  00061D  9680               	dw	38528
   155  00061F  4B18               	dw	19224
   156  000621  BC20               	dw	48160
   157  000623  4CBE               	dw	19646
   158  000625  6B28               	dw	27432
   159  000627  4E6E               	dw	20078
   160  000629  02F9               	dw	761
   161  00062B  5015               	dw	20501
   162  00062D  78EC               	dw	30956
   163  00062F  60AD               	dw	24749
   164  000631  F2CA               	dw	62154
   165  000633  7149               	dw	29001
   166  000635                     __end_of__powers_:
   167                           	callstack 0
   168  000635                     __npowers_:
   169                           	callstack 0
   170  000635  0000               	dw	0
   171  000637  3F80               	dw	16256
   172  000639  CCCD               	dw	52429
   173  00063B  3DCC               	dw	15820
   174  00063D  D70A               	dw	55050
   175  00063F  3C23               	dw	15395
   176  000641  126F               	dw	4719
   177  000643  3A83               	dw	14979
   178  000645  B717               	dw	46871
   179  000647  38D1               	dw	14545
   180  000649  C5AC               	dw	50604
   181  00064B  3727               	dw	14119
   182  00064D  37BD               	dw	14269
   183  00064F  3586               	dw	13702
   184  000651  BF95               	dw	49045
   185  000653  33D6               	dw	13270
   186  000655  CC77               	dw	52343
   187  000657  322B               	dw	12843
   188  000659  705F               	dw	28767
   189  00065B  3089               	dw	12425
   190  00065D  E6FF               	dw	59135
   191  00065F  2EDB               	dw	11995
   192  000661  E508               	dw	58632
   193  000663  1E3C               	dw	7740
   194  000665  4260               	dw	16992
   195  000667  0DA2               	dw	3490
   196  000669                     __end_of__npowers_:
   197                           	callstack 0
   198  000669                     _dpowers:
   199                           	callstack 0
   200  000669  0001               	dw	1
   201  00066B  0000               	dw	0
   202  00066D  000A               	dw	10
   203  00066F  0000               	dw	0
   204  000671  0064               	dw	100
   205  000673  0000               	dw	0
   206  000675  03E8               	dw	1000
   207  000677  0000               	dw	0
   208  000679  2710               	dw	10000
   209  00067B  0000               	dw	0
   210  00067D  86A0               	dw	34464
   211  00067F  0001               	dw	1
   212  000681  4240               	dw	16960
   213  000683  000F               	dw	15
   214  000685  9680               	dw	38528
   215  000687  0098               	dw	152
   216  000689  E100               	dw	57600
   217  00068B  05F5               	dw	1525
   218  00068D  CA00               	dw	51712
   219  00068F  3B9A               	dw	15258
   220  000691                     __end_of_dpowers:
   221                           	callstack 0
   222  0000                     _RCONbits	set	4048
   223  0000                     _PIE1	set	3997
   224  0000                     _SPBRG	set	4015
   225  0000                     _BAUDCONbits	set	4024
   226  0000                     _PIE1bits	set	3997
   227  0000                     _RCSTAbits	set	4011
   228  0000                     _RCSTA	set	4011
   229  0000                     _TXSTA	set	4012
   230  0000                     _TRISBbits	set	3987
   231  0000                     _TXREG	set	4013
   232  0000                     _TXSTAbits	set	4012
   233  0000                     _LATBbits	set	3978
   234  0000                     _TMR0L	set	4054
   235  0000                     _TMR0H	set	4055
   236  0000                     _PR2	set	4043
   237  0000                     _T2CONbits	set	4042
   238  0000                     _CCPR1L	set	4030
   239  0000                     _TRISCbits	set	3988
   240  0000                     _CCP1CON	set	4029
   241  0000                     _T0CONbits	set	4053
   242  0000                     _RCREG	set	4014
   243  0000                     _PIR1bits	set	3998
   244  0000                     _PORTCbits	set	3970
   245  0000                     _PORTBbits	set	3969
   246  0000                     _INTCON3bits	set	4080
   247  0000                     _INTCONbits	set	4082
   248  0000                     _LATE	set	3981
   249  0000                     _PORTE	set	3972
   250  0000                     _LATD	set	3980
   251  0000                     _PORTD	set	3971
   252  0000                     _LATC	set	3979
   253  0000                     _PORTC	set	3970
   254  0000                     _LATB	set	3978
   255  0000                     _PORTB	set	3969
   256  0000                     _LATA	set	3977
   257  0000                     _PORTA	set	3968
   258  0000                     _TRISE	set	3990
   259  0000                     _TRISD	set	3989
   260  0000                     _TRISC	set	3988
   261  0000                     _TRISB	set	3987
   262  0000                     _TRISA	set	3986
   263  0000                     _INTCON2bits	set	4081
   264  0000                     _INTCON2	set	4081
   265  0000                     _INTCON	set	4082
   266  0000                     _PORTEbits	set	3972
   267  0000                     _PORTDbits	set	3971
   268  0000                     _TRISEbits	set	3990
   269  0000                     _TRISDbits	set	3989
   270  0000                     _ADRESL	set	4035
   271  0000                     _ADRESH	set	4036
   272  0000                     _ADCON0bits	set	4034
   273  0000                     _ADCON0	set	4034
   274  0000                     _ADCON1	set	4033
   275  000691                     STR_5:
   276  000691  56                 	db	86	;'V'
   277  000692  63                 	db	99	;'c'
   278  000693  3A                 	db	58	;':'
   279  000694  20                 	db	32
   280  000695  25                 	db	37
   281  000696  30                 	db	48	;'0'
   282  000697  2E                 	db	46
   283  000698  31                 	db	49	;'1'
   284  000699  66                 	db	102	;'f'
   285  00069A  20                 	db	32
   286  00069B  56                 	db	86	;'V'
   287  00069C  61                 	db	97	;'a'
   288  00069D  3A                 	db	58	;':'
   289  00069E  20                 	db	32
   290  00069F  25                 	db	37
   291  0006A0  30                 	db	48	;'0'
   292  0006A1  2E                 	db	46
   293  0006A2  31                 	db	49	;'1'
   294  0006A3  66                 	db	102	;'f'
   295  0006A4  00                 	db	0
   296  0006A5                     STR_8:
   297  0006A5  53                 	db	83	;'S'
   298  0006A6  65                 	db	101	;'e'
   299  0006A7  74                 	db	116	;'t'
   300  0006A8  70                 	db	112	;'p'
   301  0006A9  6F                 	db	111	;'o'
   302  0006AA  69                 	db	105	;'i'
   303  0006AB  6E                 	db	110	;'n'
   304  0006AC  74                 	db	116	;'t'
   305  0006AD  3A                 	db	58	;':'
   306  0006AE  20                 	db	32
   307  0006AF  25                 	db	37
   308  0006B0  64                 	db	100	;'d'
   309  0006B1  43                 	db	67	;'C'
   310  0006B2  00                 	db	0
   311  0006B3                     STR_2:
   312  0006B3  54                 	db	84	;'T'
   313  0006B4  6D                 	db	109	;'m'
   314  0006B5  70                 	db	112	;'p'
   315  0006B6  3A                 	db	58	;':'
   316  0006B7  20                 	db	32
   317  0006B8  25                 	db	37
   318  0006B9  30                 	db	48	;'0'
   319  0006BA  2E                 	db	46
   320  0006BB  32                 	db	50	;'2'
   321  0006BC  66                 	db	102	;'f'
   322  0006BD  43                 	db	67	;'C'
   323  0006BE  00                 	db	0
   324  0006BF                     STR_6:
   325  0006BF  41                 	db	65	;'A'
   326  0006C0  75                 	db	117	;'u'
   327  0006C1  74                 	db	116	;'t'
   328  0006C2  2E                 	db	46
   329  0006C3  20                 	db	32
   330  0006C4  41                 	db	65	;'A'
   331  0006C5  71                 	db	113	;'q'
   332  0006C6  3A                 	db	58	;':'
   333  0006C7  4F                 	db	79	;'O'
   334  0006C8  4E                 	db	78	;'N'
   335  0006C9  00                 	db	0
   336  0006CA                     STR_3:
   337  0006CA  4D                 	db	77	;'M'
   338  0006CB  61                 	db	97	;'a'
   339  0006CC  6E                 	db	110	;'n'
   340  0006CD  2E                 	db	46
   341  0006CE  20                 	db	32
   342  0006CF  50                 	db	80	;'P'
   343  0006D0  20                 	db	32
   344  0006D1  20                 	db	32
   345  0006D2  00                 	db	0
   346  0006D3                     STR_4:
   347  0006D3  4D                 	db	77	;'M'
   348  0006D4  61                 	db	97	;'a'
   349  0006D5  6E                 	db	110	;'n'
   350  0006D6  2E                 	db	46
   351  0006D7  20                 	db	32
   352  0006D8  53                 	db	83	;'S'
   353  0006D9  20                 	db	32
   354  0006DA  20                 	db	32
   355  0006DB  00                 	db	0
   356  0006DC                     STR_1:
   357  0006DC  50                 	db	80	;'P'
   358  0006DD  49                 	db	73	;'I'
   359  0006DE  3A                 	db	58	;':'
   360  0006DF  20                 	db	32
   361  0006E0  25                 	db	37
   362  0006E1  66                 	db	102	;'f'
   363  0006E2  20                 	db	32
   364  0006E3  00                 	db	0
   365  0006E4                     STR_7:
   366  0006E4  25                 	db	37
   367  0006E5  30                 	db	48	;'0'
   368  0006E6  2E                 	db	46
   369  0006E7  32                 	db	50	;'2'
   370  0006E8  66                 	db	102	;'f'
   371  0006E9  00                 	db	0
   372  0006EA  00                 	db	0	; dummy byte at the end
   373  0000                     
   374                           ; #config settings
   375                           
   376                           	psect	cinit
   377  00533C                     __pcinit:
   378                           	callstack 0
   379  00533C                     start_initialization:
   380                           	callstack 0
   381  00533C                     __initialization:
   382                           	callstack 0
   383                           
   384                           ; Initialize objects allocated to BANK0 (8 bytes)
   385                           ; load TBLPTR registers with __pidataBANK0
   386  00533C  0EDC               	movlw	low __pidataBANK0
   387  00533E  6EF6               	movwf	tblptrl,c
   388  005340  0E56               	movlw	high __pidataBANK0
   389  005342  6EF7               	movwf	tblptrh,c
   390  005344  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   391  005346  6EF8               	movwf	tblptru,c
   392  005348  EE00  F0D5         	lfsr	0,__pdataBANK0
   393  00534C  EE10 F008          	lfsr	1,8
   394  005350                     copy_data0:
   395  005350  0009               	tblrd		*+
   396  005352  CFF5 FFEE          	movff	tablat,postinc0
   397  005356  50E5               	movf	postdec1,w,c
   398  005358  50E1               	movf	fsr1l,w,c
   399  00535A  E1FA               	bnz	copy_data0
   400                           
   401                           ; Initialize objects allocated to COMRAM (1 bytes)
   402                           ; load TBLPTR registers with __pidataCOMRAM
   403  00535C  0EE4               	movlw	low __pidataCOMRAM
   404  00535E  6EF6               	movwf	tblptrl,c
   405  005360  0E56               	movlw	high __pidataCOMRAM
   406  005362  6EF7               	movwf	tblptrh,c
   407  005364  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   408  005366  6EF8               	movwf	tblptru,c
   409  005368  0009               	tblrd		*+	;fetch initializer
   410  00536A  CFF5 F076          	movff	tablat,__pdataCOMRAM
   411                           
   412                           ; Clear objects allocated to BANK3 (50 bytes)
   413  00536E  EE03  F000         	lfsr	0,__pbssBANK3
   414  005372  0E32               	movlw	50
   415  005374                     clear_0:
   416  005374  6AEE               	clrf	postinc0,c
   417  005376  06E8               	decf	wreg,f,c
   418  005378  E1FD               	bnz	clear_0
   419                           
   420                           ; Clear objects allocated to BANK2 (225 bytes)
   421  00537A  EE02  F000         	lfsr	0,__pbssBANK2
   422  00537E  0EE1               	movlw	225
   423  005380                     clear_1:
   424  005380  6AEE               	clrf	postinc0,c
   425  005382  06E8               	decf	wreg,f,c
   426  005384  E1FD               	bnz	clear_1
   427                           
   428                           ; Clear objects allocated to BANK1 (225 bytes)
   429  005386  EE01  F000         	lfsr	0,__pbssBANK1
   430  00538A  0EE1               	movlw	225
   431  00538C                     clear_2:
   432  00538C  6AEE               	clrf	postinc0,c
   433  00538E  06E8               	decf	wreg,f,c
   434  005390  E1FD               	bnz	clear_2
   435                           
   436                           ; Clear objects allocated to BANK0 (50 bytes)
   437  005392  EE00  F080         	lfsr	0,__pbssBANK0
   438  005396  0E32               	movlw	50
   439  005398                     clear_3:
   440  005398  6AEE               	clrf	postinc0,c
   441  00539A  06E8               	decf	wreg,f,c
   442  00539C  E1FD               	bnz	clear_3
   443                           
   444                           ; Clear objects allocated to COMRAM (5 bytes)
   445  00539E  6A75               	clrf	(__pbssCOMRAM+4)& (0+255),c
   446  0053A0  6A74               	clrf	(__pbssCOMRAM+3)& (0+255),c
   447  0053A2  6A73               	clrf	(__pbssCOMRAM+2)& (0+255),c
   448  0053A4  6A72               	clrf	(__pbssCOMRAM+1)& (0+255),c
   449  0053A6  6A71               	clrf	__pbssCOMRAM& (0+255),c
   450  0053A8                     end_of_initialization:
   451                           	callstack 0
   452  0053A8                     __end_of__initialization:
   453                           	callstack 0
   454  0053A8  9077               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   455  0053AA  9277               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   456  0053AC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   457  0053AE  6EF8               	movwf	tblptru,c
   458  0053B0  0100               	movlb	0
   459  0053B2  EF37  F00A         	goto	_main	;jump to C main() function
   460                           
   461                           	psect	bssCOMRAM
   462  000071                     __pbssCOMRAM:
   463                           	callstack 0
   464  000071                     _z:
   465                           	callstack 0
   466  000071                     	ds	1
   467  000072                     _modbusMessage:
   468                           	callstack 0
   469  000072                     	ds	1
   470  000073                     _messageLength:
   471                           	callstack 0
   472  000073                     	ds	1
   473  000074                     _timerCount:
   474                           	callstack 0
   475  000074                     	ds	1
   476  000075                     _endOfMessage:
   477                           	callstack 0
   478  000075                     	ds	1
   479                           
   480                           	psect	dataCOMRAM
   481  000076                     __pdataCOMRAM:
   482                           	callstack 0
   483  000076                     _newMessage:
   484                           	callstack 0
   485  000076                     	ds	1
   486                           
   487                           	psect	bssBANK0
   488  000080                     __pbssBANK0:
   489                           	callstack 0
   490  000080                     _err:
   491                           	callstack 0
   492  000080                     	ds	4
   493  000084                     _pidVentVal:
   494                           	callstack 0
   495  000084                     	ds	4
   496  000088                     _lastErr:
   497                           	callstack 0
   498  000088                     	ds	4
   499  00008C                     _pidSum:
   500                           	callstack 0
   501  00008C                     	ds	4
   502  000090                     _valPotenciometroVent:
   503                           	callstack 0
   504  000090                     	ds	4
   505  000094                     _valPotenciometroHeat:
   506                           	callstack 0
   507  000094                     	ds	4
   508  000098                     _valPotenciometroHeatToDuty:
   509                           	callstack 0
   510  000098                     	ds	4
   511  00009C                     _valPotenciometroVentToDuty:
   512                           	callstack 0
   513  00009C                     	ds	4
   514  0000A0                     _temperatura:
   515                           	callstack 0
   516  0000A0                     	ds	4
   517  0000A4                     _ligarAquecedor:
   518                           	callstack 0
   519  0000A4                     	ds	2
   520  0000A6                     _timerHeatCount:
   521                           	callstack 0
   522  0000A6                     	ds	2
   523  0000A8                     _kd:
   524                           	callstack 0
   525  0000A8                     	ds	2
   526  0000AA                     _modoOperacao:
   527                           	callstack 0
   528  0000AA                     	ds	2
   529  0000AC                     _adcResult:
   530                           	callstack 0
   531  0000AC                     	ds	2
   532  0000AE                     _voltPotenciometro:
   533                           	callstack 0
   534  0000AE                     	ds	4
   535                           
   536                           	psect	dataBANK0
   537  0000D5                     __pdataBANK0:
   538                           	callstack 0
   539  0000D5                     _tempSetpoint:
   540                           	callstack 0
   541  0000D5                     	ds	2
   542  0000D7                     _ki:
   543                           	callstack 0
   544  0000D7                     	ds	2
   545  0000D9                     _kp:
   546                           	callstack 0
   547  0000D9                     	ds	2
   548  0000DB                     _origemParametrosManual:
   549                           	callstack 0
   550  0000DB                     	ds	2
   551                           
   552                           	psect	bssBANK1
   553  000100                     __pbssBANK1:
   554                           	callstack 0
   555  000100                     _response:
   556                           	callstack 0
   557  000100                     	ds	125
   558  00017D                     _holdingReg:
   559                           	callstack 0
   560  00017D                     	ds	100
   561                           
   562                           	psect	bssBANK2
   563  000200                     __pbssBANK2:
   564                           	callstack 0
   565  000200                     _received:
   566                           	callstack 0
   567  000200                     	ds	125
   568  00027D                     _coils:
   569                           	callstack 0
   570  00027D                     	ds	50
   571  0002AF                     _strLcd2:
   572                           	callstack 0
   573  0002AF                     	ds	50
   574                           
   575                           	psect	bssBANK3
   576  000300                     __pbssBANK3:
   577                           	callstack 0
   578  000300                     _strLcd1:
   579                           	callstack 0
   580  000300                     	ds	50
   581                           
   582                           	psect	cstackBANK0
   583  0000B2                     __pcstackBANK0:
   584                           	callstack 0
   585  0000B2                     _sprintf$2478:
   586                           	callstack 0
   587                           
   588                           ; 4 bytes @ 0x0
   589  0000B2                     	ds	4
   590  0000B6                     sprintf@ap:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x4
   594  0000B6                     	ds	2
   595  0000B8                     sprintf@tmpval:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0x6
   599  0000B8                     	ds	4
   600  0000BC                     sprintf@val:
   601                           	callstack 0
   602                           
   603                           ; 4 bytes @ 0xA
   604  0000BC                     	ds	4
   605  0000C0                     sprintf@eexp:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0xE
   609  0000C0                     	ds	2
   610  0000C2                     sprintf@flag:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x10
   614  0000C2                     	ds	2
   615  0000C4                     sprintf@width:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x12
   619  0000C4                     	ds	2
   620  0000C6                     sprintf@fval:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0x14
   624  0000C6                     	ds	4
   625  0000CA                     sprintf@prec:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x18
   629  0000CA                     	ds	2
   630  0000CC                     sprintf@c:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x1A
   634  0000CC                     	ds	1
   635  0000CD                     _main$2473:
   636                           	callstack 0
   637                           
   638                           ; 4 bytes @ 0x1B
   639  0000CD                     	ds	4
   640  0000D1                     _main$2474:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x1F
   644  0000D1                     	ds	4
   645                           
   646                           	psect	cstackCOMRAM
   647  000001                     __pcstackCOMRAM:
   648                           	callstack 0
   649  000001                     ??i2_Lcd_Cmd:
   650                           
   651                           ; 1 bytes @ 0x0
   652  000001                     	ds	2
   653  000003                     i2Lcd_Cmd@data:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x2
   657  000003                     	ds	1
   658  000004                     ??_isr:
   659                           
   660                           ; 1 bytes @ 0x3
   661  000004                     	ds	2
   662  000006                     ??_Lcd_Cmd:
   663  000006                     ??_Lcd_Chr_CP:
   664  000006                     ??_OpnUSART:
   665  000006                     ??_checkCRC:
   666  000006                     ??_isdigit:
   667  000006                     ?_generateCRC:
   668                           	callstack 0
   669  000006                     ?_adc_amostra:
   670                           	callstack 0
   671  000006                     ?___wmul:
   672                           	callstack 0
   673  000006                     ?___awmod:
   674                           	callstack 0
   675  000006                     ?___lwmod:
   676                           	callstack 0
   677  000006                     ?__tdiv_to_l_:
   678                           	callstack 0
   679  000006                     ?__div_to_l_:
   680                           	callstack 0
   681  000006                     ?___lmul:
   682                           	callstack 0
   683  000006                     ?___aldiv:
   684                           	callstack 0
   685  000006                     ?___flneg:
   686                           	callstack 0
   687  000006                     ___wmul@multiplier:
   688                           	callstack 0
   689  000006                     ___awmod@dividend:
   690                           	callstack 0
   691  000006                     ___lwmod@dividend:
   692                           	callstack 0
   693  000006                     ___lmul@multiplier:
   694                           	callstack 0
   695  000006                     ___aldiv@dividend:
   696                           	callstack 0
   697  000006                     __div_to_l_@f1:
   698                           	callstack 0
   699  000006                     ___fleq@ff1:
   700                           	callstack 0
   701  000006                     ___flneg@f1:
   702                           	callstack 0
   703  000006                     __tdiv_to_l_@f1:
   704                           	callstack 0
   705                           
   706                           ; 4 bytes @ 0x5
   707  000006                     	ds	1
   708  000007                     _isdigit$2278:
   709                           	callstack 0
   710  000007                     OpnUSART@spbrg:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0x6
   714  000007                     	ds	1
   715  000008                     ??_generateCRC:
   716  000008                     ??_adc_amostra:
   717  000008                     Lcd_Chr_CP@data:
   718                           	callstack 0
   719  000008                     Lcd_Cmd@data:
   720                           	callstack 0
   721  000008                     isdigit@c:
   722                           	callstack 0
   723  000008                     ___wmul@multiplicand:
   724                           	callstack 0
   725  000008                     ___awmod@divisor:
   726                           	callstack 0
   727  000008                     ___lwmod@divisor:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x7
   731  000008                     	ds	1
   732  000009                     ??_Lcd_Init:
   733  000009                     Lcd_Out@x:
   734                           	callstack 0
   735                           
   736                           ; 1 bytes @ 0x8
   737  000009                     	ds	1
   738  00000A                     Lcd_Init@data:
   739                           	callstack 0
   740  00000A                     ___awmod@counter:
   741                           	callstack 0
   742  00000A                     ___lwmod@counter:
   743                           	callstack 0
   744  00000A                     Lcd_Out@buffer:
   745                           	callstack 0
   746  00000A                     ___wmul@product:
   747                           	callstack 0
   748  00000A                     ___lmul@multiplicand:
   749                           	callstack 0
   750  00000A                     ___aldiv@divisor:
   751                           	callstack 0
   752  00000A                     __div_to_l_@f2:
   753                           	callstack 0
   754  00000A                     ___fleq@ff2:
   755                           	callstack 0
   756  00000A                     __tdiv_to_l_@f2:
   757                           	callstack 0
   758                           
   759                           ; 4 bytes @ 0x9
   760  00000A                     	ds	1
   761  00000B                     clearResponse@i:
   762                           	callstack 0
   763  00000B                     ___awmod@sign:
   764                           	callstack 0
   765  00000B                     checkCRC@crcHigh:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0xA
   769  00000B                     	ds	1
   770  00000C                     ?___awdiv:
   771                           	callstack 0
   772  00000C                     ?___lwdiv:
   773                           	callstack 0
   774  00000C                     adc_amostra@canal:
   775                           	callstack 0
   776  00000C                     Lcd_Out@y:
   777                           	callstack 0
   778  00000C                     ___awdiv@dividend:
   779                           	callstack 0
   780  00000C                     ___lwdiv@dividend:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0xB
   784  00000C                     	ds	1
   785  00000D                     Lcd_Out@data:
   786                           	callstack 0
   787  00000D                     generateCRC@messageLength:
   788                           	callstack 0
   789  00000D                     checkCRC@crcLow:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0xC
   793  00000D                     	ds	1
   794  00000E                     ??__tdiv_to_l_:
   795  00000E                     ??___fleq:
   796  00000E                     ___aldiv@counter:
   797                           	callstack 0
   798  00000E                     generateCRC@crcLow:
   799                           	callstack 0
   800  00000E                     ___awdiv@divisor:
   801                           	callstack 0
   802  00000E                     ___lwdiv@divisor:
   803                           	callstack 0
   804  00000E                     ___lmul@product:
   805                           	callstack 0
   806  00000E                     __div_to_l_@quot:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0xD
   810  00000E                     	ds	1
   811  00000F                     ___aldiv@sign:
   812                           	callstack 0
   813  00000F                     checkCRC@j:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0xE
   817  00000F                     	ds	1
   818  000010                     ___awdiv@counter:
   819                           	callstack 0
   820  000010                     ___lwdiv@counter:
   821                           	callstack 0
   822  000010                     generateCRC@crcHigh:
   823                           	callstack 0
   824  000010                     ___aldiv@quotient:
   825                           	callstack 0
   826                           
   827                           ; 4 bytes @ 0xF
   828  000010                     	ds	1
   829  000011                     ___awdiv@sign:
   830                           	callstack 0
   831  000011                     checkCRC@crc:
   832                           	callstack 0
   833  000011                     ___lwdiv@quotient:
   834                           	callstack 0
   835  000011                     __tdiv_to_l_@quot:
   836                           	callstack 0
   837                           
   838                           ; 4 bytes @ 0x10
   839  000011                     	ds	1
   840  000012                     ?___lldiv:
   841                           	callstack 0
   842  000012                     __div_to_l_@cntr:
   843                           	callstack 0
   844  000012                     generateCRC@i:
   845                           	callstack 0
   846  000012                     ___awdiv@quotient:
   847                           	callstack 0
   848  000012                     ___lldiv@dividend:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0x11
   852  000012                     	ds	1
   853  000013                     ?___xxtofl:
   854                           	callstack 0
   855  000013                     __div_to_l_@exp1:
   856                           	callstack 0
   857  000013                     checkCRC@i:
   858                           	callstack 0
   859  000013                     ___xxtofl@val:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x12
   863  000013                     	ds	1
   864  000014                     PWM1_Init@f:
   865                           	callstack 0
   866  000014                     generateCRC@j:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x13
   870  000014                     	ds	1
   871  000015                     __tdiv_to_l_@cntr:
   872                           	callstack 0
   873                           
   874                           ; 1 bytes @ 0x14
   875  000015                     	ds	1
   876  000016                     ??_PWM1_Init:
   877  000016                     __tdiv_to_l_@exp1:
   878                           	callstack 0
   879  000016                     generateCRC@crc:
   880                           	callstack 0
   881  000016                     ___lldiv@divisor:
   882                           	callstack 0
   883                           
   884                           ; 4 bytes @ 0x15
   885  000016                     	ds	1
   886  000017                     ??___xxtofl:
   887                           
   888                           ; 1 bytes @ 0x16
   889  000017                     	ds	1
   890  000018                     ??_readCoil:
   891  000018                     ??_readInputCoil:
   892  000018                     ??_readReg:
   893  000018                     ??_readInputReg:
   894  000018                     writeReg@wr_AddressLow:
   895                           	callstack 0
   896  000018                     writeCoil@wc_AddressLow:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x17
   900  000018                     	ds	2
   901  00001A                     PWM1_Init@temp:
   902                           	callstack 0
   903  00001A                     readReg@crc:
   904                           	callstack 0
   905  00001A                     readInputReg@crc:
   906                           	callstack 0
   907  00001A                     writeReg@wr_AddressHigh:
   908                           	callstack 0
   909  00001A                     writeCoil@wc_AddressHigh:
   910                           	callstack 0
   911  00001A                     ___lldiv@quotient:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x19
   915  00001A                     	ds	1
   916  00001B                     ___xxtofl@sign:
   917                           	callstack 0
   918                           
   919                           ; 1 bytes @ 0x1A
   920  00001B                     	ds	1
   921  00001C                     ___xxtofl@exp:
   922                           	callstack 0
   923  00001C                     readReg@rr_Address:
   924                           	callstack 0
   925  00001C                     readInputReg@rr_Address:
   926                           	callstack 0
   927  00001C                     writeReg@wr_valToWriteLow:
   928                           	callstack 0
   929  00001C                     readCoil@rc_Address:
   930                           	callstack 0
   931  00001C                     readInputCoil@rc_Address:
   932                           	callstack 0
   933  00001C                     writeCoil@wc_valToWriteLow:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x1B
   937  00001C                     	ds	1
   938  00001D                     ___xxtofl@arg:
   939                           	callstack 0
   940                           
   941                           ; 4 bytes @ 0x1C
   942  00001D                     	ds	1
   943  00001E                     ___lldiv@counter:
   944                           	callstack 0
   945  00001E                     readReg@rr_numRegs:
   946                           	callstack 0
   947  00001E                     readInputReg@rr_numRegs:
   948                           	callstack 0
   949  00001E                     writeReg@wr_valToWriteHigh:
   950                           	callstack 0
   951  00001E                     readCoil@crc:
   952                           	callstack 0
   953  00001E                     readInputCoil@crc:
   954                           	callstack 0
   955  00001E                     writeCoil@wc_valToWriteHigh:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x1D
   959  00001E                     	ds	1
   960  00001F                     ??_PWM1_Set_Duty:
   961  00001F                     ?___llmod:
   962                           	callstack 0
   963  00001F                     ___llmod@dividend:
   964                           	callstack 0
   965                           
   966                           ; 4 bytes @ 0x1E
   967  00001F                     	ds	1
   968  000020                     readCoil@remainder:
   969                           	callstack 0
   970  000020                     readInputCoil@remainder:
   971                           	callstack 0
   972  000020                     readReg@i:
   973                           	callstack 0
   974  000020                     readInputReg@i:
   975                           	callstack 0
   976  000020                     writeReg@wr_Address:
   977                           	callstack 0
   978  000020                     writeCoil@wc_valToWrite:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x1F
   982  000020                     	ds	1
   983  000021                     ?___flmul:
   984                           	callstack 0
   985  000021                     PWM1_Set_Duty@d:
   986                           	callstack 0
   987  000021                     readCoil@howManyBytes:
   988                           	callstack 0
   989  000021                     readInputCoil@howManyBytes:
   990                           	callstack 0
   991  000021                     ___flge@ff1:
   992                           	callstack 0
   993  000021                     ___flmul@b:
   994                           	callstack 0
   995                           
   996                           ; 4 bytes @ 0x20
   997  000021                     	ds	1
   998  000022                     readReg@j:
   999                           	callstack 0
  1000  000022                     readInputReg@j:
  1001                           	callstack 0
  1002  000022                     PWM1_Set_Duty@temp:
  1003                           	callstack 0
  1004  000022                     writeReg@wr_valToWrite:
  1005                           	callstack 0
  1006  000022                     readCoil@rc_numCoils:
  1007                           	callstack 0
  1008  000022                     readInputCoil@rc_numCoils:
  1009                           	callstack 0
  1010  000022                     writeCoil@crc:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x21
  1014  000022                     	ds	1
  1015  000023                     ___llmod@divisor:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x22
  1019  000023                     	ds	1
  1020  000024                     readCoil@l:
  1021                           	callstack 0
  1022  000024                     readInputCoil@l:
  1023                           	callstack 0
  1024  000024                     writeReg@crc:
  1025                           	callstack 0
  1026  000024                     writeCoil@wc_Address:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x23
  1030  000024                     	ds	1
  1031  000025                     readCoil@lsb:
  1032                           	callstack 0
  1033  000025                     readInputCoil@lsb:
  1034                           	callstack 0
  1035  000025                     ___flge@ff2:
  1036                           	callstack 0
  1037  000025                     ___flmul@a:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x24
  1041  000025                     	ds	1
  1042  000026                     readCoil@i:
  1043                           	callstack 0
  1044  000026                     readInputCoil@i:
  1045                           	callstack 0
  1046  000026                     writeReg@i:
  1047                           	callstack 0
  1048  000026                     writeCoil@i:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x25
  1052  000026                     	ds	1
  1053  000027                     readCoil@j:
  1054                           	callstack 0
  1055  000027                     readInputCoil@j:
  1056                           	callstack 0
  1057  000027                     ___llmod@counter:
  1058                           	callstack 0
  1059                           
  1060                           ; 1 bytes @ 0x26
  1061  000027                     	ds	1
  1062  000028                     readCoil@k:
  1063                           	callstack 0
  1064  000028                     readInputCoil@k:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x27
  1068  000028                     	ds	1
  1069  000029                     ??___flmul:
  1070  000029                     ??___flge:
  1071                           
  1072                           ; 1 bytes @ 0x28
  1073  000029                     	ds	4
  1074  00002D                     ___flmul@sign:
  1075                           	callstack 0
  1076                           
  1077                           ; 1 bytes @ 0x2C
  1078  00002D                     	ds	1
  1079  00002E                     ___flmul@aexp:
  1080                           	callstack 0
  1081                           
  1082                           ; 1 bytes @ 0x2D
  1083  00002E                     	ds	1
  1084  00002F                     ___flmul@grs:
  1085                           	callstack 0
  1086                           
  1087                           ; 4 bytes @ 0x2E
  1088  00002F                     	ds	4
  1089  000033                     ___flmul@bexp:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0x32
  1093  000033                     	ds	1
  1094  000034                     ___flmul@prod:
  1095                           	callstack 0
  1096                           
  1097                           ; 4 bytes @ 0x33
  1098  000034                     	ds	4
  1099  000038                     ___flmul@temp:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x37
  1103  000038                     	ds	2
  1104  00003A                     ?___fldiv:
  1105                           	callstack 0
  1106  00003A                     ?_fround:
  1107                           	callstack 0
  1108  00003A                     ?_scale:
  1109                           	callstack 0
  1110  00003A                     ___fldiv@b:
  1111                           	callstack 0
  1112                           
  1113                           ; 4 bytes @ 0x39
  1114  00003A                     	ds	4
  1115  00003E                     ___fldiv@a:
  1116                           	callstack 0
  1117  00003E                     _fround$2476:
  1118                           	callstack 0
  1119  00003E                     _scale$2477:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x3D
  1123  00003E                     	ds	4
  1124  000042                     ??___fldiv:
  1125  000042                     scale@scl:
  1126                           	callstack 0
  1127  000042                     _fround$2475:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x41
  1131  000042                     	ds	4
  1132  000046                     fround@prec:
  1133                           	callstack 0
  1134  000046                     ___fldiv@rem:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0x45
  1138  000046                     	ds	1
  1139  000047                     ?___fladd:
  1140                           	callstack 0
  1141  000047                     ___fladd@b:
  1142                           	callstack 0
  1143                           
  1144                           ; 4 bytes @ 0x46
  1145  000047                     	ds	3
  1146  00004A                     ___fldiv@sign:
  1147                           	callstack 0
  1148                           
  1149                           ; 1 bytes @ 0x49
  1150  00004A                     	ds	1
  1151  00004B                     ___fldiv@new_exp:
  1152                           	callstack 0
  1153  00004B                     ___fladd@a:
  1154                           	callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x4A
  1157  00004B                     	ds	2
  1158  00004D                     ___fldiv@grs:
  1159                           	callstack 0
  1160                           
  1161                           ; 4 bytes @ 0x4C
  1162  00004D                     	ds	2
  1163  00004F                     ??___fladd:
  1164                           
  1165                           ; 1 bytes @ 0x4E
  1166  00004F                     	ds	2
  1167  000051                     ___fldiv@bexp:
  1168                           	callstack 0
  1169                           
  1170                           ; 1 bytes @ 0x50
  1171  000051                     	ds	1
  1172  000052                     ___fldiv@aexp:
  1173                           	callstack 0
  1174                           
  1175                           ; 1 bytes @ 0x51
  1176  000052                     	ds	1
  1177  000053                     ?___fltol:
  1178                           	callstack 0
  1179  000053                     ___fladd@signs:
  1180                           	callstack 0
  1181  000053                     ___fltol@f1:
  1182                           	callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x52
  1185  000053                     	ds	1
  1186  000054                     ___fladd@aexp:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x53
  1190  000054                     	ds	1
  1191  000055                     ___fladd@bexp:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x54
  1195  000055                     	ds	1
  1196  000056                     ___fladd@grs:
  1197                           	callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x55
  1200  000056                     	ds	1
  1201  000057                     ??___fltol:
  1202  000057                     ?___flsub:
  1203                           	callstack 0
  1204  000057                     ___flsub@b:
  1205                           	callstack 0
  1206                           
  1207                           ; 4 bytes @ 0x56
  1208  000057                     	ds	4
  1209  00005B                     ___fltol@sign1:
  1210                           	callstack 0
  1211  00005B                     ___flsub@a:
  1212                           	callstack 0
  1213                           
  1214                           ; 4 bytes @ 0x5A
  1215  00005B                     	ds	1
  1216  00005C                     ___fltol@exp1:
  1217                           	callstack 0
  1218                           
  1219                           ; 1 bytes @ 0x5B
  1220  00005C                     	ds	3
  1221  00005F                     ?_sprintf:
  1222                           	callstack 0
  1223  00005F                     sprintf@sp:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x5E
  1227  00005F                     	ds	2
  1228  000061                     sprintf@f:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x60
  1232  000061                     	ds	10
  1233  00006B                     ??_sprintf:
  1234                           
  1235                           ; 1 bytes @ 0x6A
  1236  00006B                     	ds	4
  1237  00006F                     ??_main:
  1238                           
  1239                           ; 1 bytes @ 0x6E
  1240  00006F                     	ds	2
  1241                           
  1242 ;;
  1243 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1244 ;;
  1245 ;; *************** function _main *****************
  1246 ;; Defined at:
  1247 ;;		line 51 in file "mainTP.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1261 ;;      Params:         0       0       0       0       0       0       0
  1262 ;;      Locals:         0       8       0       0       0       0       0
  1263 ;;      Temps:          2       0       0       0       0       0       0
  1264 ;;      Totals:         2       8       0       0       0       0       0
  1265 ;;Total ram usage:       10 bytes
  1266 ;; Hardware stack levels required when called:    7
  1267 ;; This function calls:
  1268 ;;		_ConfigInterrupts
  1269 ;;		_Lcd_Cmd
  1270 ;;		_Lcd_Init
  1271 ;;		_Lcd_Out
  1272 ;;		_OpnUSART
  1273 ;;		_PWM1_Init
  1274 ;;		_PWM1_Set_Duty
  1275 ;;		_PWM1_Start
  1276 ;;		___fladd
  1277 ;;		___fldiv
  1278 ;;		___fleq
  1279 ;;		___flge
  1280 ;;		___flmul
  1281 ;;		___flsub
  1282 ;;		___fltol
  1283 ;;		___lwdiv
  1284 ;;		___wmul
  1285 ;;		___xxtofl
  1286 ;;		_adc_amostra
  1287 ;;		_adc_init
  1288 ;;		_decodeIt
  1289 ;;		_sprintf
  1290 ;; This function is called by:
  1291 ;;		Startup code after reset
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text0
  1296  00146E                     __ptext0:
  1297                           	callstack 0
  1298  00146E                     _main:
  1299                           	callstack 24
  1300  00146E                     
  1301                           ;mainTP.c: 57: INTCON = 0b00000000;
  1302  00146E  0E00               	movlw	0
  1303  001470  6EF2               	movwf	242,c	;volatile
  1304                           
  1305                           ;mainTP.c: 58: INTCON2 = 0b00000000;
  1306  001472  0E00               	movlw	0
  1307  001474  6EF1               	movwf	241,c	;volatile
  1308  001476                     
  1309                           ;mainTP.c: 59: INTCON2bits.RBPU = 0;
  1310  001476  9EF1               	bcf	241,7,c	;volatile
  1311  001478                     
  1312                           ;mainTP.c: 62: TRISA = 0xFF;
  1313  001478  6892               	setf	146,c	;volatile
  1314                           
  1315                           ;mainTP.c: 63: TRISB = 0b00001111;
  1316  00147A  0E0F               	movlw	15
  1317  00147C  6E93               	movwf	147,c	;volatile
  1318                           
  1319                           ;mainTP.c: 64: TRISC = 0b00000000;
  1320  00147E  0E00               	movlw	0
  1321  001480  6E94               	movwf	148,c	;volatile
  1322                           
  1323                           ;mainTP.c: 65: TRISD = 0b00001111;
  1324  001482  0E0F               	movlw	15
  1325  001484  6E95               	movwf	149,c	;volatile
  1326                           
  1327                           ;mainTP.c: 66: TRISE = 0b00000000;
  1328  001486  0E00               	movlw	0
  1329  001488  6E96               	movwf	150,c	;volatile
  1330                           
  1331                           ;mainTP.c: 69: PORTA = 0;
  1332  00148A  0E00               	movlw	0
  1333  00148C  6E80               	movwf	128,c	;volatile
  1334                           
  1335                           ;mainTP.c: 70: LATA = 0;
  1336  00148E  0E00               	movlw	0
  1337  001490  6E89               	movwf	137,c	;volatile
  1338                           
  1339                           ;mainTP.c: 71: PORTB = 0;
  1340  001492  0E00               	movlw	0
  1341  001494  6E81               	movwf	129,c	;volatile
  1342                           
  1343                           ;mainTP.c: 72: LATB = 0;
  1344  001496  0E00               	movlw	0
  1345  001498  6E8A               	movwf	138,c	;volatile
  1346                           
  1347                           ;mainTP.c: 73: PORTC = 0;
  1348  00149A  0E00               	movlw	0
  1349  00149C  6E82               	movwf	130,c	;volatile
  1350                           
  1351                           ;mainTP.c: 74: LATC = 0;
  1352  00149E  0E00               	movlw	0
  1353  0014A0  6E8B               	movwf	139,c	;volatile
  1354                           
  1355                           ;mainTP.c: 75: PORTD = 0;
  1356  0014A2  0E00               	movlw	0
  1357  0014A4  6E83               	movwf	131,c	;volatile
  1358                           
  1359                           ;mainTP.c: 76: LATD = 0;
  1360  0014A6  0E00               	movlw	0
  1361  0014A8  6E8C               	movwf	140,c	;volatile
  1362                           
  1363                           ;mainTP.c: 77: PORTE = 0;
  1364  0014AA  0E00               	movlw	0
  1365  0014AC  6E84               	movwf	132,c	;volatile
  1366                           
  1367                           ;mainTP.c: 78: LATE = 0;
  1368  0014AE  0E00               	movlw	0
  1369  0014B0  6E8D               	movwf	141,c	;volatile
  1370  0014B2                     
  1371                           ;mainTP.c: 82: INTCON2bits.INTEDG0 = 0;
  1372  0014B2  9CF1               	bcf	241,6,c	;volatile
  1373  0014B4                     
  1374                           ;mainTP.c: 83: INTCONbits.INT0IF = 0;
  1375  0014B4  92F2               	bcf	242,1,c	;volatile
  1376  0014B6                     
  1377                           ;mainTP.c: 84: INTCONbits.INT0IE = 1;
  1378  0014B6  88F2               	bsf	242,4,c	;volatile
  1379  0014B8                     
  1380                           ;mainTP.c: 85: INTCON3bits.INT1E = 1;
  1381  0014B8  86F0               	bsf	240,3,c	;volatile
  1382  0014BA                     
  1383                           ;mainTP.c: 86: INTCON3bits.INT1F = 0;
  1384  0014BA  90F0               	bcf	240,0,c	;volatile
  1385  0014BC                     
  1386                           ;mainTP.c: 87: INTCON3bits.INT2E = 1;
  1387  0014BC  88F0               	bsf	240,4,c	;volatile
  1388  0014BE                     
  1389                           ;mainTP.c: 88: INTCON3bits.INT2F = 0;
  1390  0014BE  92F0               	bcf	240,1,c	;volatile
  1391  0014C0                     
  1392                           ;mainTP.c: 91: adc_init();
  1393  0014C0  EC64  F02B         	call	_adc_init	;wreg free
  1394  0014C4                     
  1395                           ;mainTP.c: 92: Lcd_Init();
  1396  0014C4  EC28  F023         	call	_Lcd_Init	;wreg free
  1397  0014C8                     
  1398                           ;mainTP.c: 93: Lcd_Cmd(12);
  1399  0014C8  0E0C               	movlw	12
  1400  0014CA  ECD6  F020         	call	_Lcd_Cmd
  1401  0014CE                     
  1402                           ;mainTP.c: 94: PWM1_Init(1000);
  1403  0014CE  0E03               	movlw	3
  1404  0014D0  6E15               	movwf	(PWM1_Init@f+1)^0,c
  1405  0014D2  0EE8               	movlw	232
  1406  0014D4  6E14               	movwf	PWM1_Init@f^0,c
  1407  0014D6  ECBE  F025         	call	_PWM1_Init	;wreg free
  1408  0014DA                     
  1409                           ;mainTP.c: 95: PWM1_Start();
  1410  0014DA  EC23  F02B         	call	_PWM1_Start	;wreg free
  1411  0014DE                     
  1412                           ;mainTP.c: 98: OpnUSART();
  1413  0014DE  EC15  F02A         	call	_OpnUSART	;wreg free
  1414  0014E2                     
  1415                           ;mainTP.c: 99: ConfigInterrupts();
  1416  0014E2  EC5E  F02B         	call	_ConfigInterrupts	;wreg free
  1417  0014E6                     l217:
  1418  0014E6  0004               	clrwdt		;# 
  1419  0014E8                     
  1420                           ;mainTP.c: 106: if (modbusMessage) {
  1421  0014E8  5072               	movf	_modbusMessage^0,w,c	;volatile
  1422  0014EA  B4D8               	btfsc	status,2,c
  1423  0014EC  EF7A  F00A         	goto	u9371
  1424  0014F0  EF7C  F00A         	goto	u9370
  1425  0014F4                     u9371:
  1426  0014F4  EF43  F00B         	goto	l8489
  1427  0014F8                     u9370:
  1428  0014F8                     
  1429                           ;mainTP.c: 107: decodeIt();
  1430  0014F8  ECAF  F026         	call	_decodeIt	;wreg free
  1431  0014FC                     
  1432                           ;mainTP.c: 108: if (coils[0] == 0) {
  1433  0014FC  0102               	movlb	2	; () banked
  1434  0014FE  517D               	movf	_coils& (0+255),w,b	;volatile
  1435  001500  A4D8               	btfss	status,2,c
  1436  001502  EF85  F00A         	goto	u9381
  1437  001506  EF87  F00A         	goto	u9380
  1438  00150A                     u9381:
  1439  00150A  EF8E  F00A         	goto	l8483
  1440  00150E                     u9380:
  1441  00150E                     
  1442                           ; BSR set to: 2
  1443                           ;mainTP.c: 109: modoOperacao = 1;
  1444  00150E  0E00               	movlw	0
  1445  001510  0100               	movlb	0	; () banked
  1446  001512  6FAB               	movwf	(_modoOperacao+1)& (0+255),b
  1447  001514  0E01               	movlw	1
  1448  001516  6FAA               	movwf	_modoOperacao& (0+255),b
  1449                           
  1450                           ;mainTP.c: 110: } else {
  1451  001518  EF93  F00A         	goto	l220
  1452  00151C                     l8483:
  1453                           
  1454                           ; BSR set to: 2
  1455                           ;mainTP.c: 111: modoOperacao = 0;
  1456  00151C  0E00               	movlw	0
  1457  00151E  0100               	movlb	0	; () banked
  1458  001520  6FAB               	movwf	(_modoOperacao+1)& (0+255),b
  1459  001522  0E00               	movlw	0
  1460  001524  6FAA               	movwf	_modoOperacao& (0+255),b
  1461  001526                     l220:
  1462                           
  1463                           ; BSR set to: 0
  1464                           ;mainTP.c: 112: };mainTP.c: 114: if (coils[1] != 0) {
  1465  001526  0102               	movlb	2	; () banked
  1466  001528  517E               	movf	(_coils+1)& (0+255),w,b	;volatile
  1467  00152A  B4D8               	btfsc	status,2,c
  1468  00152C  EF9A  F00A         	goto	u9391
  1469  001530  EF9C  F00A         	goto	u9390
  1470  001534                     u9391:
  1471  001534  EF43  F00B         	goto	l8489
  1472  001538                     u9390:
  1473  001538                     
  1474                           ; BSR set to: 2
  1475                           ;mainTP.c: 115: kp = holdingReg[7] / 100.0;
  1476  001538  0E00               	movlw	0
  1477  00153A  6E3E               	movwf	___fldiv@a^0,c
  1478  00153C  0E00               	movlw	0
  1479  00153E  6E3F               	movwf	(___fldiv@a+1)^0,c
  1480  001540  0EC8               	movlw	200
  1481  001542  6E40               	movwf	(___fldiv@a+2)^0,c
  1482  001544  0E42               	movlw	66
  1483  001546  6E41               	movwf	(___fldiv@a+3)^0,c
  1484  001548  C18B  F013         	movff	_holdingReg+14,___xxtofl@val	;volatile
  1485  00154C  C18C  F014         	movff	_holdingReg+15,___xxtofl@val+1	;volatile
  1486  001550  6A15               	clrf	(___xxtofl@val+2)^0,c
  1487  001552  6A16               	clrf	(___xxtofl@val+3)^0,c
  1488  001554  0E00               	movlw	0
  1489  001556  EC42  F01D         	call	___xxtofl
  1490  00155A  C013  F03A         	movff	?___xxtofl,___fldiv@b
  1491  00155E  C014  F03B         	movff	?___xxtofl+1,___fldiv@b+1
  1492  001562  C015  F03C         	movff	?___xxtofl+2,___fldiv@b+2
  1493  001566  C016  F03D         	movff	?___xxtofl+3,___fldiv@b+3
  1494  00156A  EC34  F016         	call	___fldiv	;wreg free
  1495  00156E  C03A  F053         	movff	?___fldiv,___fltol@f1
  1496  001572  C03B  F054         	movff	?___fldiv+1,___fltol@f1+1
  1497  001576  C03C  F055         	movff	?___fldiv+2,___fltol@f1+2
  1498  00157A  C03D  F056         	movff	?___fldiv+3,___fltol@f1+3
  1499  00157E  EC36  F024         	call	___fltol	;wreg free
  1500  001582  C053  F0D9         	movff	?___fltol,_kp
  1501  001586  C054  F0DA         	movff	?___fltol+1,_kp+1
  1502                           
  1503                           ;mainTP.c: 116: kd = holdingReg[8] / 100.0;
  1504  00158A  0E00               	movlw	0
  1505  00158C  6E3E               	movwf	___fldiv@a^0,c
  1506  00158E  0E00               	movlw	0
  1507  001590  6E3F               	movwf	(___fldiv@a+1)^0,c
  1508  001592  0EC8               	movlw	200
  1509  001594  6E40               	movwf	(___fldiv@a+2)^0,c
  1510  001596  0E42               	movlw	66
  1511  001598  6E41               	movwf	(___fldiv@a+3)^0,c
  1512  00159A  C18D  F013         	movff	_holdingReg+16,___xxtofl@val	;volatile
  1513  00159E  C18E  F014         	movff	_holdingReg+17,___xxtofl@val+1	;volatile
  1514  0015A2  6A15               	clrf	(___xxtofl@val+2)^0,c
  1515  0015A4  6A16               	clrf	(___xxtofl@val+3)^0,c
  1516  0015A6  0E00               	movlw	0
  1517  0015A8  EC42  F01D         	call	___xxtofl
  1518  0015AC  C013  F03A         	movff	?___xxtofl,___fldiv@b
  1519  0015B0  C014  F03B         	movff	?___xxtofl+1,___fldiv@b+1
  1520  0015B4  C015  F03C         	movff	?___xxtofl+2,___fldiv@b+2
  1521  0015B8  C016  F03D         	movff	?___xxtofl+3,___fldiv@b+3
  1522  0015BC  EC34  F016         	call	___fldiv	;wreg free
  1523  0015C0  C03A  F053         	movff	?___fldiv,___fltol@f1
  1524  0015C4  C03B  F054         	movff	?___fldiv+1,___fltol@f1+1
  1525  0015C8  C03C  F055         	movff	?___fldiv+2,___fltol@f1+2
  1526  0015CC  C03D  F056         	movff	?___fldiv+3,___fltol@f1+3
  1527  0015D0  EC36  F024         	call	___fltol	;wreg free
  1528  0015D4  C053  F0A8         	movff	?___fltol,_kd
  1529  0015D8  C054  F0A9         	movff	?___fltol+1,_kd+1
  1530                           
  1531                           ;mainTP.c: 117: ki = holdingReg[9] / 100.0;
  1532  0015DC  0E00               	movlw	0
  1533  0015DE  6E3E               	movwf	___fldiv@a^0,c
  1534  0015E0  0E00               	movlw	0
  1535  0015E2  6E3F               	movwf	(___fldiv@a+1)^0,c
  1536  0015E4  0EC8               	movlw	200
  1537  0015E6  6E40               	movwf	(___fldiv@a+2)^0,c
  1538  0015E8  0E42               	movlw	66
  1539  0015EA  6E41               	movwf	(___fldiv@a+3)^0,c
  1540  0015EC  C18F  F013         	movff	_holdingReg+18,___xxtofl@val	;volatile
  1541  0015F0  C190  F014         	movff	_holdingReg+19,___xxtofl@val+1	;volatile
  1542  0015F4  6A15               	clrf	(___xxtofl@val+2)^0,c
  1543  0015F6  6A16               	clrf	(___xxtofl@val+3)^0,c
  1544  0015F8  0E00               	movlw	0
  1545  0015FA  EC42  F01D         	call	___xxtofl
  1546  0015FE  C013  F03A         	movff	?___xxtofl,___fldiv@b
  1547  001602  C014  F03B         	movff	?___xxtofl+1,___fldiv@b+1
  1548  001606  C015  F03C         	movff	?___xxtofl+2,___fldiv@b+2
  1549  00160A  C016  F03D         	movff	?___xxtofl+3,___fldiv@b+3
  1550  00160E  EC34  F016         	call	___fldiv	;wreg free
  1551  001612  C03A  F053         	movff	?___fldiv,___fltol@f1
  1552  001616  C03B  F054         	movff	?___fldiv+1,___fltol@f1+1
  1553  00161A  C03C  F055         	movff	?___fldiv+2,___fltol@f1+2
  1554  00161E  C03D  F056         	movff	?___fldiv+3,___fltol@f1+3
  1555  001622  EC36  F024         	call	___fltol	;wreg free
  1556  001626  C053  F0D7         	movff	?___fltol,_ki
  1557  00162A  C054  F0D8         	movff	?___fltol+1,_ki+1
  1558                           
  1559                           ;mainTP.c: 118: tempSetpoint = holdingReg[10] / 10.0;
  1560  00162E  0E00               	movlw	0
  1561  001630  6E3E               	movwf	___fldiv@a^0,c
  1562  001632  0E00               	movlw	0
  1563  001634  6E3F               	movwf	(___fldiv@a+1)^0,c
  1564  001636  0E20               	movlw	32
  1565  001638  6E40               	movwf	(___fldiv@a+2)^0,c
  1566  00163A  0E41               	movlw	65
  1567  00163C  6E41               	movwf	(___fldiv@a+3)^0,c
  1568  00163E  C191  F013         	movff	_holdingReg+20,___xxtofl@val	;volatile
  1569  001642  C192  F014         	movff	_holdingReg+21,___xxtofl@val+1	;volatile
  1570  001646  6A15               	clrf	(___xxtofl@val+2)^0,c
  1571  001648  6A16               	clrf	(___xxtofl@val+3)^0,c
  1572  00164A  0E00               	movlw	0
  1573  00164C  EC42  F01D         	call	___xxtofl
  1574  001650  C013  F03A         	movff	?___xxtofl,___fldiv@b
  1575  001654  C014  F03B         	movff	?___xxtofl+1,___fldiv@b+1
  1576  001658  C015  F03C         	movff	?___xxtofl+2,___fldiv@b+2
  1577  00165C  C016  F03D         	movff	?___xxtofl+3,___fldiv@b+3
  1578  001660  EC34  F016         	call	___fldiv	;wreg free
  1579  001664  C03A  F053         	movff	?___fldiv,___fltol@f1
  1580  001668  C03B  F054         	movff	?___fldiv+1,___fltol@f1+1
  1581  00166C  C03C  F055         	movff	?___fldiv+2,___fltol@f1+2
  1582  001670  C03D  F056         	movff	?___fldiv+3,___fltol@f1+3
  1583  001674  EC36  F024         	call	___fltol	;wreg free
  1584  001678  C053  F0D5         	movff	?___fltol,_tempSetpoint
  1585  00167C  C054  F0D6         	movff	?___fltol+1,_tempSetpoint+1
  1586  001680                     
  1587                           ;mainTP.c: 119: coils[1] = 0;
  1588  001680  0E00               	movlw	0
  1589  001682  0102               	movlb	2	; () banked
  1590  001684  6F7E               	movwf	(_coils+1)& (0+255),b	;volatile
  1591  001686                     l8489:
  1592                           
  1593                           ;mainTP.c: 120: };mainTP.c: 121: };mainTP.c: 124: if (PORTBbits.RB3 == 0) {
  1594  001686  B681               	btfsc	129,3,c	;volatile
  1595  001688  EF48  F00B         	goto	u9401
  1596  00168C  EF4A  F00B         	goto	u9400
  1597  001690                     u9401:
  1598  001690  EF58  F00B         	goto	l8493
  1599  001694                     u9400:
  1600  001694                     
  1601                           ;mainTP.c: 125: origemParametrosManual = !origemParametrosManual;
  1602  001694  0100               	movlb	0	; () banked
  1603  001696  51DB               	movf	_origemParametrosManual& (0+255),w,b
  1604  001698  11DC               	iorwf	(_origemParametrosManual+1)& (0+255),w,b
  1605  00169A  B4D8               	btfsc	status,2,c
  1606  00169C  EF52  F00B         	goto	u9411
  1607  0016A0  EF55  F00B         	goto	u9410
  1608  0016A4                     u9411:
  1609  0016A4  0E01               	movlw	1
  1610  0016A6  EF56  F00B         	goto	u9420
  1611  0016AA                     u9410:
  1612  0016AA  0E00               	movlw	0
  1613  0016AC                     u9420:
  1614  0016AC  6FDB               	movwf	_origemParametrosManual& (0+255),b
  1615  0016AE  6BDC               	clrf	(_origemParametrosManual+1)& (0+255),b
  1616  0016B0                     l8493:
  1617                           
  1618                           ;mainTP.c: 126: };mainTP.c: 129: temperatura = (adc_amostra(2)) / 2;
  1619  0016B0  0E02               	movlw	2
  1620  0016B2  EC60  F029         	call	_adc_amostra
  1621  0016B6  90D8               	bcf	status,0,c
  1622  0016B8  3007               	rrcf	(?_adc_amostra+1)^0,w,c
  1623  0016BA  6E70               	movwf	(??_main+1)^0,c
  1624  0016BC  3006               	rrcf	?_adc_amostra^0,w,c
  1625  0016BE  6E6F               	movwf	??_main^0,c
  1626  0016C0  C06F  F013         	movff	??_main,___xxtofl@val
  1627  0016C4  C070  F014         	movff	??_main+1,___xxtofl@val+1
  1628  0016C8  6A15               	clrf	(___xxtofl@val+2)^0,c
  1629  0016CA  6A16               	clrf	(___xxtofl@val+3)^0,c
  1630  0016CC  0E00               	movlw	0
  1631  0016CE  EC42  F01D         	call	___xxtofl
  1632  0016D2  C013  F0A0         	movff	?___xxtofl,_temperatura
  1633  0016D6  C014  F0A1         	movff	?___xxtofl+1,_temperatura+1
  1634  0016DA  C015  F0A2         	movff	?___xxtofl+2,_temperatura+2
  1635  0016DE  C016  F0A3         	movff	?___xxtofl+3,_temperatura+3
  1636  0016E2                     
  1637                           ;mainTP.c: 132: if (modoOperacao == 0) {
  1638  0016E2  0100               	movlb	0	; () banked
  1639  0016E4  51AA               	movf	_modoOperacao& (0+255),w,b
  1640  0016E6  11AB               	iorwf	(_modoOperacao+1)& (0+255),w,b
  1641  0016E8  A4D8               	btfss	status,2,c
  1642  0016EA  EF79  F00B         	goto	u9431
  1643  0016EE  EF7B  F00B         	goto	u9430
  1644  0016F2                     u9431:
  1645  0016F2  EF31  F00D         	goto	l223
  1646  0016F6                     u9430:
  1647  0016F6                     
  1648                           ; BSR set to: 0
  1649                           ;mainTP.c: 134: if (origemParametrosManual == 0) {
  1650  0016F6  51DB               	movf	_origemParametrosManual& (0+255),w,b
  1651  0016F8  11DC               	iorwf	(_origemParametrosManual+1)& (0+255),w,b
  1652  0016FA  A4D8               	btfss	status,2,c
  1653  0016FC  EF82  F00B         	goto	u9441
  1654  001700  EF84  F00B         	goto	u9440
  1655  001704                     u9441:
  1656  001704  EF55  F00C         	goto	l8513
  1657  001708                     u9440:
  1658  001708                     
  1659                           ; BSR set to: 0
  1660                           ;mainTP.c: 136: adcResult = (adc_amostra(0));
  1661  001708  0E00               	movlw	0
  1662  00170A  EC60  F029         	call	_adc_amostra
  1663  00170E  C006  F0AC         	movff	?_adc_amostra,_adcResult
  1664  001712  C007  F0AD         	movff	?_adc_amostra+1,_adcResult+1
  1665  001716                     
  1666                           ;mainTP.c: 137: voltPotenciometro = (adcResult * 5) / 1023;
  1667  001716  0E03               	movlw	3
  1668  001718  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  1669  00171A  680E               	setf	___lwdiv@divisor^0,c
  1670  00171C  C0AC  F006         	movff	_adcResult,___wmul@multiplier
  1671  001720  C0AD  F007         	movff	_adcResult+1,___wmul@multiplier+1
  1672  001724  0E00               	movlw	0
  1673  001726  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  1674  001728  0E05               	movlw	5
  1675  00172A  6E08               	movwf	___wmul@multiplicand^0,c
  1676  00172C  EC39  F02B         	call	___wmul	;wreg free
  1677  001730  C006  F00C         	movff	?___wmul,___lwdiv@dividend
  1678  001734  C007  F00D         	movff	?___wmul+1,___lwdiv@dividend+1
  1679  001738  ECDB  F029         	call	___lwdiv	;wreg free
  1680  00173C  C00C  F013         	movff	?___lwdiv,___xxtofl@val
  1681  001740  C00D  F014         	movff	?___lwdiv+1,___xxtofl@val+1
  1682  001744  6A15               	clrf	(___xxtofl@val+2)^0,c
  1683  001746  6A16               	clrf	(___xxtofl@val+3)^0,c
  1684  001748  0E00               	movlw	0
  1685  00174A  EC42  F01D         	call	___xxtofl
  1686  00174E  C013  F0AE         	movff	?___xxtofl,_voltPotenciometro
  1687  001752  C014  F0AF         	movff	?___xxtofl+1,_voltPotenciometro+1
  1688  001756  C015  F0B0         	movff	?___xxtofl+2,_voltPotenciometro+2
  1689  00175A  C016  F0B1         	movff	?___xxtofl+3,_voltPotenciometro+3
  1690  00175E                     
  1691                           ;mainTP.c: 138: valPotenciometroVent = voltPotenciometro;
  1692  00175E  C0AE  F090         	movff	_voltPotenciometro,_valPotenciometroVent
  1693  001762  C0AF  F091         	movff	_voltPotenciometro+1,_valPotenciometroVent+1
  1694  001766  C0B0  F092         	movff	_voltPotenciometro+2,_valPotenciometroVent+2
  1695  00176A  C0B1  F093         	movff	_voltPotenciometro+3,_valPotenciometroVent+3
  1696  00176E                     
  1697                           ;mainTP.c: 139: valPotenciometroVentToDuty = (255 * voltPotenciometro) / 5;
  1698  00176E  0E00               	movlw	0
  1699  001770  6E25               	movwf	___flmul@a^0,c
  1700  001772  0E00               	movlw	0
  1701  001774  6E26               	movwf	(___flmul@a+1)^0,c
  1702  001776  0E7F               	movlw	127
  1703  001778  6E27               	movwf	(___flmul@a+2)^0,c
  1704  00177A  0E43               	movlw	67
  1705  00177C  6E28               	movwf	(___flmul@a+3)^0,c
  1706  00177E  C0AE  F021         	movff	_voltPotenciometro,___flmul@b
  1707  001782  C0AF  F022         	movff	_voltPotenciometro+1,___flmul@b+1
  1708  001786  C0B0  F023         	movff	_voltPotenciometro+2,___flmul@b+2
  1709  00178A  C0B1  F024         	movff	_voltPotenciometro+3,___flmul@b+3
  1710  00178E  EC19  F012         	call	___flmul	;wreg free
  1711  001792  C021  F03A         	movff	?___flmul,___fldiv@b
  1712  001796  C022  F03B         	movff	?___flmul+1,___fldiv@b+1
  1713  00179A  C023  F03C         	movff	?___flmul+2,___fldiv@b+2
  1714  00179E  C024  F03D         	movff	?___flmul+3,___fldiv@b+3
  1715  0017A2  0E00               	movlw	0
  1716  0017A4  6E3E               	movwf	___fldiv@a^0,c
  1717  0017A6  0E00               	movlw	0
  1718  0017A8  6E3F               	movwf	(___fldiv@a+1)^0,c
  1719  0017AA  0EA0               	movlw	160
  1720  0017AC  6E40               	movwf	(___fldiv@a+2)^0,c
  1721  0017AE  0E40               	movlw	64
  1722  0017B0  6E41               	movwf	(___fldiv@a+3)^0,c
  1723  0017B2  EC34  F016         	call	___fldiv	;wreg free
  1724  0017B6  C03A  F09C         	movff	?___fldiv,_valPotenciometroVentToDuty
  1725  0017BA  C03B  F09D         	movff	?___fldiv+1,_valPotenciometroVentToDuty+1
  1726  0017BE  C03C  F09E         	movff	?___fldiv+2,_valPotenciometroVentToDuty+2
  1727  0017C2  C03D  F09F         	movff	?___fldiv+3,_valPotenciometroVentToDuty+3
  1728                           
  1729                           ;mainTP.c: 142: adcResult = (adc_amostra(1));
  1730  0017C6  0E01               	movlw	1
  1731  0017C8  EC60  F029         	call	_adc_amostra
  1732  0017CC  C006  F0AC         	movff	?_adc_amostra,_adcResult
  1733  0017D0  C007  F0AD         	movff	?_adc_amostra+1,_adcResult+1
  1734  0017D4                     
  1735                           ;mainTP.c: 143: voltPotenciometro = ((float) adcResult * 5.0) / 1023.0;
  1736  0017D4  0E00               	movlw	0
  1737  0017D6  6E25               	movwf	___flmul@a^0,c
  1738  0017D8  0E00               	movlw	0
  1739  0017DA  6E26               	movwf	(___flmul@a+1)^0,c
  1740  0017DC  0EA0               	movlw	160
  1741  0017DE  6E27               	movwf	(___flmul@a+2)^0,c
  1742  0017E0  0E40               	movlw	64
  1743  0017E2  6E28               	movwf	(___flmul@a+3)^0,c
  1744  0017E4  C0AC  F013         	movff	_adcResult,___xxtofl@val
  1745  0017E8  C0AD  F014         	movff	_adcResult+1,___xxtofl@val+1
  1746  0017EC  6A15               	clrf	(___xxtofl@val+2)^0,c
  1747  0017EE  6A16               	clrf	(___xxtofl@val+3)^0,c
  1748  0017F0  0E00               	movlw	0
  1749  0017F2  EC42  F01D         	call	___xxtofl
  1750  0017F6  C013  F021         	movff	?___xxtofl,___flmul@b
  1751  0017FA  C014  F022         	movff	?___xxtofl+1,___flmul@b+1
  1752  0017FE  C015  F023         	movff	?___xxtofl+2,___flmul@b+2
  1753  001802  C016  F024         	movff	?___xxtofl+3,___flmul@b+3
  1754  001806  EC19  F012         	call	___flmul	;wreg free
  1755  00180A  C021  F03A         	movff	?___flmul,___fldiv@b
  1756  00180E  C022  F03B         	movff	?___flmul+1,___fldiv@b+1
  1757  001812  C023  F03C         	movff	?___flmul+2,___fldiv@b+2
  1758  001816  C024  F03D         	movff	?___flmul+3,___fldiv@b+3
  1759  00181A  0E00               	movlw	0
  1760  00181C  6E3E               	movwf	___fldiv@a^0,c
  1761  00181E  0EC0               	movlw	192
  1762  001820  6E3F               	movwf	(___fldiv@a+1)^0,c
  1763  001822  0E7F               	movlw	127
  1764  001824  6E40               	movwf	(___fldiv@a+2)^0,c
  1765  001826  0E44               	movlw	68
  1766  001828  6E41               	movwf	(___fldiv@a+3)^0,c
  1767  00182A  EC34  F016         	call	___fldiv	;wreg free
  1768  00182E  C03A  F0AE         	movff	?___fldiv,_voltPotenciometro
  1769  001832  C03B  F0AF         	movff	?___fldiv+1,_voltPotenciometro+1
  1770  001836  C03C  F0B0         	movff	?___fldiv+2,_voltPotenciometro+2
  1771  00183A  C03D  F0B1         	movff	?___fldiv+3,_voltPotenciometro+3
  1772  00183E                     
  1773                           ;mainTP.c: 144: valPotenciometroHeat = voltPotenciometro;
  1774  00183E  C0AE  F094         	movff	_voltPotenciometro,_valPotenciometroHeat
  1775  001842  C0AF  F095         	movff	_voltPotenciometro+1,_valPotenciometroHeat+1
  1776  001846  C0B0  F096         	movff	_voltPotenciometro+2,_valPotenciometroHeat+2
  1777  00184A  C0B1  F097         	movff	_voltPotenciometro+3,_valPotenciometroHeat+3
  1778  00184E                     
  1779                           ;mainTP.c: 145: valPotenciometroHeatToDuty = (10.0 * voltPotenciometro) / 5.0;
  1780  00184E  0E00               	movlw	0
  1781  001850  6E25               	movwf	___flmul@a^0,c
  1782  001852  0E00               	movlw	0
  1783  001854  6E26               	movwf	(___flmul@a+1)^0,c
  1784  001856  0E20               	movlw	32
  1785  001858  6E27               	movwf	(___flmul@a+2)^0,c
  1786  00185A  0E41               	movlw	65
  1787  00185C  6E28               	movwf	(___flmul@a+3)^0,c
  1788  00185E  C0AE  F021         	movff	_voltPotenciometro,___flmul@b
  1789  001862  C0AF  F022         	movff	_voltPotenciometro+1,___flmul@b+1
  1790  001866  C0B0  F023         	movff	_voltPotenciometro+2,___flmul@b+2
  1791  00186A  C0B1  F024         	movff	_voltPotenciometro+3,___flmul@b+3
  1792  00186E  EC19  F012         	call	___flmul	;wreg free
  1793  001872  C021  F03A         	movff	?___flmul,___fldiv@b
  1794  001876  C022  F03B         	movff	?___flmul+1,___fldiv@b+1
  1795  00187A  C023  F03C         	movff	?___flmul+2,___fldiv@b+2
  1796  00187E  C024  F03D         	movff	?___flmul+3,___fldiv@b+3
  1797  001882  0E00               	movlw	0
  1798  001884  6E3E               	movwf	___fldiv@a^0,c
  1799  001886  0E00               	movlw	0
  1800  001888  6E3F               	movwf	(___fldiv@a+1)^0,c
  1801  00188A  0EA0               	movlw	160
  1802  00188C  6E40               	movwf	(___fldiv@a+2)^0,c
  1803  00188E  0E40               	movlw	64
  1804  001890  6E41               	movwf	(___fldiv@a+3)^0,c
  1805  001892  EC34  F016         	call	___fldiv	;wreg free
  1806  001896  C03A  F098         	movff	?___fldiv,_valPotenciometroHeatToDuty
  1807  00189A  C03B  F099         	movff	?___fldiv+1,_valPotenciometroHeatToDuty+1
  1808  00189E  C03C  F09A         	movff	?___fldiv+2,_valPotenciometroHeatToDuty+2
  1809  0018A2  C03D  F09B         	movff	?___fldiv+3,_valPotenciometroHeatToDuty+3
  1810                           
  1811                           ;mainTP.c: 146: } else {
  1812  0018A6  EFCF  F00C         	goto	l8519
  1813  0018AA                     l8513:
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;mainTP.c: 147: valPotenciometroVentToDuty = holdingReg[5];
  1817  0018AA  C187  F013         	movff	_holdingReg+10,___xxtofl@val	;volatile
  1818  0018AE  C188  F014         	movff	_holdingReg+11,___xxtofl@val+1	;volatile
  1819  0018B2  6A15               	clrf	(___xxtofl@val+2)^0,c
  1820  0018B4  6A16               	clrf	(___xxtofl@val+3)^0,c
  1821  0018B6  0E00               	movlw	0
  1822  0018B8  EC42  F01D         	call	___xxtofl
  1823  0018BC  C013  F09C         	movff	?___xxtofl,_valPotenciometroVentToDuty
  1824  0018C0  C014  F09D         	movff	?___xxtofl+1,_valPotenciometroVentToDuty+1
  1825  0018C4  C015  F09E         	movff	?___xxtofl+2,_valPotenciometroVentToDuty+2
  1826  0018C8  C016  F09F         	movff	?___xxtofl+3,_valPotenciometroVentToDuty+3
  1827  0018CC                     
  1828                           ;mainTP.c: 148: valPotenciometroVent = (valPotenciometroVentToDuty * 5) / 255;
  1829  0018CC  0E00               	movlw	0
  1830  0018CE  6E25               	movwf	___flmul@a^0,c
  1831  0018D0  0E00               	movlw	0
  1832  0018D2  6E26               	movwf	(___flmul@a+1)^0,c
  1833  0018D4  0EA0               	movlw	160
  1834  0018D6  6E27               	movwf	(___flmul@a+2)^0,c
  1835  0018D8  0E40               	movlw	64
  1836  0018DA  6E28               	movwf	(___flmul@a+3)^0,c
  1837  0018DC  C09C  F021         	movff	_valPotenciometroVentToDuty,___flmul@b
  1838  0018E0  C09D  F022         	movff	_valPotenciometroVentToDuty+1,___flmul@b+1
  1839  0018E4  C09E  F023         	movff	_valPotenciometroVentToDuty+2,___flmul@b+2
  1840  0018E8  C09F  F024         	movff	_valPotenciometroVentToDuty+3,___flmul@b+3
  1841  0018EC  EC19  F012         	call	___flmul	;wreg free
  1842  0018F0  C021  F03A         	movff	?___flmul,___fldiv@b
  1843  0018F4  C022  F03B         	movff	?___flmul+1,___fldiv@b+1
  1844  0018F8  C023  F03C         	movff	?___flmul+2,___fldiv@b+2
  1845  0018FC  C024  F03D         	movff	?___flmul+3,___fldiv@b+3
  1846  001900  0E00               	movlw	0
  1847  001902  6E3E               	movwf	___fldiv@a^0,c
  1848  001904  0E00               	movlw	0
  1849  001906  6E3F               	movwf	(___fldiv@a+1)^0,c
  1850  001908  0E7F               	movlw	127
  1851  00190A  6E40               	movwf	(___fldiv@a+2)^0,c
  1852  00190C  0E43               	movlw	67
  1853  00190E  6E41               	movwf	(___fldiv@a+3)^0,c
  1854  001910  EC34  F016         	call	___fldiv	;wreg free
  1855  001914  C03A  F090         	movff	?___fldiv,_valPotenciometroVent
  1856  001918  C03B  F091         	movff	?___fldiv+1,_valPotenciometroVent+1
  1857  00191C  C03C  F092         	movff	?___fldiv+2,_valPotenciometroVent+2
  1858  001920  C03D  F093         	movff	?___fldiv+3,_valPotenciometroVent+3
  1859  001924                     
  1860                           ;mainTP.c: 149: valPotenciometroHeatToDuty = holdingReg[6];
  1861  001924  C189  F013         	movff	_holdingReg+12,___xxtofl@val	;volatile
  1862  001928  C18A  F014         	movff	_holdingReg+13,___xxtofl@val+1	;volatile
  1863  00192C  6A15               	clrf	(___xxtofl@val+2)^0,c
  1864  00192E  6A16               	clrf	(___xxtofl@val+3)^0,c
  1865  001930  0E00               	movlw	0
  1866  001932  EC42  F01D         	call	___xxtofl
  1867  001936  C013  F098         	movff	?___xxtofl,_valPotenciometroHeatToDuty
  1868  00193A  C014  F099         	movff	?___xxtofl+1,_valPotenciometroHeatToDuty+1
  1869  00193E  C015  F09A         	movff	?___xxtofl+2,_valPotenciometroHeatToDuty+2
  1870  001942  C016  F09B         	movff	?___xxtofl+3,_valPotenciometroHeatToDuty+3
  1871                           
  1872                           ;mainTP.c: 150: valPotenciometroHeat = (valPotenciometroHeatToDuty * 5) / 10;
  1873  001946  0E00               	movlw	0
  1874  001948  6E25               	movwf	___flmul@a^0,c
  1875  00194A  0E00               	movlw	0
  1876  00194C  6E26               	movwf	(___flmul@a+1)^0,c
  1877  00194E  0EA0               	movlw	160
  1878  001950  6E27               	movwf	(___flmul@a+2)^0,c
  1879  001952  0E40               	movlw	64
  1880  001954  6E28               	movwf	(___flmul@a+3)^0,c
  1881  001956  C098  F021         	movff	_valPotenciometroHeatToDuty,___flmul@b
  1882  00195A  C099  F022         	movff	_valPotenciometroHeatToDuty+1,___flmul@b+1
  1883  00195E  C09A  F023         	movff	_valPotenciometroHeatToDuty+2,___flmul@b+2
  1884  001962  C09B  F024         	movff	_valPotenciometroHeatToDuty+3,___flmul@b+3
  1885  001966  EC19  F012         	call	___flmul	;wreg free
  1886  00196A  C021  F03A         	movff	?___flmul,___fldiv@b
  1887  00196E  C022  F03B         	movff	?___flmul+1,___fldiv@b+1
  1888  001972  C023  F03C         	movff	?___flmul+2,___fldiv@b+2
  1889  001976  C024  F03D         	movff	?___flmul+3,___fldiv@b+3
  1890  00197A  0E00               	movlw	0
  1891  00197C  6E3E               	movwf	___fldiv@a^0,c
  1892  00197E  0E00               	movlw	0
  1893  001980  6E3F               	movwf	(___fldiv@a+1)^0,c
  1894  001982  0E20               	movlw	32
  1895  001984  6E40               	movwf	(___fldiv@a+2)^0,c
  1896  001986  0E41               	movlw	65
  1897  001988  6E41               	movwf	(___fldiv@a+3)^0,c
  1898  00198A  EC34  F016         	call	___fldiv	;wreg free
  1899  00198E  C03A  F094         	movff	?___fldiv,_valPotenciometroHeat
  1900  001992  C03B  F095         	movff	?___fldiv+1,_valPotenciometroHeat+1
  1901  001996  C03C  F096         	movff	?___fldiv+2,_valPotenciometroHeat+2
  1902  00199A  C03D  F097         	movff	?___fldiv+3,_valPotenciometroHeat+3
  1903  00199E                     l8519:
  1904                           
  1905                           ;mainTP.c: 151: };mainTP.c: 153: PWM1_Set_Duty(valPotenciometroVentToDuty);
  1906  00199E  C09C  F053         	movff	_valPotenciometroVentToDuty,___fltol@f1
  1907  0019A2  C09D  F054         	movff	_valPotenciometroVentToDuty+1,___fltol@f1+1
  1908  0019A6  C09E  F055         	movff	_valPotenciometroVentToDuty+2,___fltol@f1+2
  1909  0019AA  C09F  F056         	movff	_valPotenciometroVentToDuty+3,___fltol@f1+3
  1910  0019AE  EC36  F024         	call	___fltol	;wreg free
  1911  0019B2  5053               	movf	?___fltol^0,w,c
  1912  0019B4  ECD3  F028         	call	_PWM1_Set_Duty
  1913  0019B8                     
  1914                           ;mainTP.c: 156: timerHeatCount++;
  1915  0019B8  0100               	movlb	0	; () banked
  1916  0019BA  4BA6               	infsnz	_timerHeatCount& (0+255),f,b
  1917  0019BC  2BA7               	incf	(_timerHeatCount+1)& (0+255),f,b
  1918  0019BE                     
  1919                           ; BSR set to: 0
  1920                           ;mainTP.c: 157: if (timerHeatCount >= valPotenciometroHeatToDuty) {
  1921  0019BE  C0A6  F013         	movff	_timerHeatCount,___xxtofl@val
  1922  0019C2  C0A7  F014         	movff	_timerHeatCount+1,___xxtofl@val+1
  1923  0019C6  0E00               	movlw	0
  1924  0019C8  BE14               	btfsc	(___xxtofl@val+1)^0,7,c
  1925  0019CA  0EFF               	movlw	-1
  1926  0019CC  6E15               	movwf	(___xxtofl@val+2)^0,c
  1927  0019CE  6E16               	movwf	(___xxtofl@val+3)^0,c
  1928  0019D0  0E01               	movlw	1
  1929  0019D2  EC42  F01D         	call	___xxtofl
  1930  0019D6  C013  F021         	movff	?___xxtofl,___flge@ff1
  1931  0019DA  C014  F022         	movff	?___xxtofl+1,___flge@ff1+1
  1932  0019DE  C015  F023         	movff	?___xxtofl+2,___flge@ff1+2
  1933  0019E2  C016  F024         	movff	?___xxtofl+3,___flge@ff1+3
  1934  0019E6  C098  F025         	movff	_valPotenciometroHeatToDuty,___flge@ff2
  1935  0019EA  C099  F026         	movff	_valPotenciometroHeatToDuty+1,___flge@ff2+1
  1936  0019EE  C09A  F027         	movff	_valPotenciometroHeatToDuty+2,___flge@ff2+2
  1937  0019F2  C09B  F028         	movff	_valPotenciometroHeatToDuty+3,___flge@ff2+3
  1938  0019F6  EC3C  F025         	call	___flge	;wreg free
  1939  0019FA  A0D8               	btfss	status,0,c
  1940  0019FC  EF02  F00D         	goto	u9451
  1941  001A00  EF04  F00D         	goto	u9450
  1942  001A04                     u9451:
  1943  001A04  EF05  F00D         	goto	l8527
  1944  001A08                     u9450:
  1945  001A08                     
  1946                           ;mainTP.c: 158: PORTCbits.RC5 = 0;
  1947  001A08  9A82               	bcf	130,5,c	;volatile
  1948  001A0A                     l8527:
  1949                           
  1950                           ;mainTP.c: 159: };mainTP.c: 160: if (timerHeatCount == 10) {
  1951  001A0A  0E0A               	movlw	10
  1952  001A0C  0100               	movlb	0	; () banked
  1953  001A0E  19A6               	xorwf	_timerHeatCount& (0+255),w,b
  1954  001A10  11A7               	iorwf	(_timerHeatCount+1)& (0+255),w,b
  1955  001A12  A4D8               	btfss	status,2,c
  1956  001A14  EF0E  F00D         	goto	u9461
  1957  001A18  EF10  F00D         	goto	u9460
  1958  001A1C                     u9461:
  1959  001A1C  EFC3  F00E         	goto	l8559
  1960  001A20                     u9460:
  1961  001A20                     
  1962                           ; BSR set to: 0
  1963                           ;mainTP.c: 161: if (valPotenciometroHeatToDuty != 0) {
  1964  001A20  C098  F006         	movff	_valPotenciometroHeatToDuty,___fleq@ff1
  1965  001A24  C099  F007         	movff	_valPotenciometroHeatToDuty+1,___fleq@ff1+1
  1966  001A28  C09A  F008         	movff	_valPotenciometroHeatToDuty+2,___fleq@ff1+2
  1967  001A2C  C09B  F009         	movff	_valPotenciometroHeatToDuty+3,___fleq@ff1+3
  1968  001A30  0E00               	movlw	0
  1969  001A32  6E0A               	movwf	___fleq@ff2^0,c
  1970  001A34  0E00               	movlw	0
  1971  001A36  6E0B               	movwf	(___fleq@ff2+1)^0,c
  1972  001A38  0E00               	movlw	0
  1973  001A3A  6E0C               	movwf	(___fleq@ff2+2)^0,c
  1974  001A3C  0E00               	movlw	0
  1975  001A3E  6E0D               	movwf	(___fleq@ff2+3)^0,c
  1976  001A40  EC2C  F028         	call	___fleq	;wreg free
  1977  001A44  B0D8               	btfsc	status,0,c
  1978  001A46  EF27  F00D         	goto	u9471
  1979  001A4A  EF29  F00D         	goto	u9470
  1980  001A4E                     u9471:
  1981  001A4E  EF2A  F00D         	goto	l8533
  1982  001A52                     u9470:
  1983  001A52                     
  1984                           ;mainTP.c: 162: PORTCbits.RC5 = 1;
  1985  001A52  8A82               	bsf	130,5,c	;volatile
  1986  001A54                     l8533:
  1987                           
  1988                           ;mainTP.c: 163: };mainTP.c: 164: timerHeatCount = 0;
  1989  001A54  0E00               	movlw	0
  1990  001A56  0100               	movlb	0	; () banked
  1991  001A58  6FA7               	movwf	(_timerHeatCount+1)& (0+255),b
  1992  001A5A  0E00               	movlw	0
  1993  001A5C  6FA6               	movwf	_timerHeatCount& (0+255),b
  1994  001A5E  EFC3  F00E         	goto	l8559
  1995  001A62                     l223:
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;mainTP.c: 167: PORTCbits.RC5 = 1;
  1999  001A62  8A82               	bsf	130,5,c	;volatile
  2000  001A64                     
  2001                           ; BSR set to: 0
  2002                           ;mainTP.c: 168: err = temperatura - tempSetpoint;
  2003  001A64  C0A0  F057         	movff	_temperatura,___flsub@b
  2004  001A68  C0A1  F058         	movff	_temperatura+1,___flsub@b+1
  2005  001A6C  C0A2  F059         	movff	_temperatura+2,___flsub@b+2
  2006  001A70  C0A3  F05A         	movff	_temperatura+3,___flsub@b+3
  2007  001A74  C0D5  F013         	movff	_tempSetpoint,___xxtofl@val
  2008  001A78  C0D6  F014         	movff	_tempSetpoint+1,___xxtofl@val+1
  2009  001A7C  0E00               	movlw	0
  2010  001A7E  BE14               	btfsc	(___xxtofl@val+1)^0,7,c
  2011  001A80  0EFF               	movlw	-1
  2012  001A82  6E15               	movwf	(___xxtofl@val+2)^0,c
  2013  001A84  6E16               	movwf	(___xxtofl@val+3)^0,c
  2014  001A86  0E01               	movlw	1
  2015  001A88  EC42  F01D         	call	___xxtofl
  2016  001A8C  C013  F05B         	movff	?___xxtofl,___flsub@a
  2017  001A90  C014  F05C         	movff	?___xxtofl+1,___flsub@a+1
  2018  001A94  C015  F05D         	movff	?___xxtofl+2,___flsub@a+2
  2019  001A98  C016  F05E         	movff	?___xxtofl+3,___flsub@a+3
  2020  001A9C  ECB3  F02A         	call	___flsub	;wreg free
  2021  001AA0  C057  F080         	movff	?___flsub,_err
  2022  001AA4  C058  F081         	movff	?___flsub+1,_err+1
  2023  001AA8  C059  F082         	movff	?___flsub+2,_err+2
  2024  001AAC  C05A  F083         	movff	?___flsub+3,_err+3
  2025  001AB0                     
  2026                           ;mainTP.c: 169: pidVentVal = kp * err + ki * pidSum + kd * (err - lastErr);
  2027  001AB0  C08C  F025         	movff	_pidSum,___flmul@a
  2028  001AB4  C08D  F026         	movff	_pidSum+1,___flmul@a+1
  2029  001AB8  C08E  F027         	movff	_pidSum+2,___flmul@a+2
  2030  001ABC  C08F  F028         	movff	_pidSum+3,___flmul@a+3
  2031  001AC0  C0D7  F013         	movff	_ki,___xxtofl@val
  2032  001AC4  C0D8  F014         	movff	_ki+1,___xxtofl@val+1
  2033  001AC8  0E00               	movlw	0
  2034  001ACA  BE14               	btfsc	(___xxtofl@val+1)^0,7,c
  2035  001ACC  0EFF               	movlw	-1
  2036  001ACE  6E15               	movwf	(___xxtofl@val+2)^0,c
  2037  001AD0  6E16               	movwf	(___xxtofl@val+3)^0,c
  2038  001AD2  0E01               	movlw	1
  2039  001AD4  EC42  F01D         	call	___xxtofl
  2040  001AD8  C013  F021         	movff	?___xxtofl,___flmul@b
  2041  001ADC  C014  F022         	movff	?___xxtofl+1,___flmul@b+1
  2042  001AE0  C015  F023         	movff	?___xxtofl+2,___flmul@b+2
  2043  001AE4  C016  F024         	movff	?___xxtofl+3,___flmul@b+3
  2044  001AE8  EC19  F012         	call	___flmul	;wreg free
  2045  001AEC  C021  F04B         	movff	?___flmul,___fladd@a
  2046  001AF0  C022  F04C         	movff	?___flmul+1,___fladd@a+1
  2047  001AF4  C023  F04D         	movff	?___flmul+2,___fladd@a+2
  2048  001AF8  C024  F04E         	movff	?___flmul+3,___fladd@a+3
  2049  001AFC  C080  F025         	movff	_err,___flmul@a
  2050  001B00  C081  F026         	movff	_err+1,___flmul@a+1
  2051  001B04  C082  F027         	movff	_err+2,___flmul@a+2
  2052  001B08  C083  F028         	movff	_err+3,___flmul@a+3
  2053  001B0C  C0D9  F013         	movff	_kp,___xxtofl@val
  2054  001B10  C0DA  F014         	movff	_kp+1,___xxtofl@val+1
  2055  001B14  0E00               	movlw	0
  2056  001B16  BE14               	btfsc	(___xxtofl@val+1)^0,7,c
  2057  001B18  0EFF               	movlw	-1
  2058  001B1A  6E15               	movwf	(___xxtofl@val+2)^0,c
  2059  001B1C  6E16               	movwf	(___xxtofl@val+3)^0,c
  2060  001B1E  0E01               	movlw	1
  2061  001B20  EC42  F01D         	call	___xxtofl
  2062  001B24  C013  F021         	movff	?___xxtofl,___flmul@b
  2063  001B28  C014  F022         	movff	?___xxtofl+1,___flmul@b+1
  2064  001B2C  C015  F023         	movff	?___xxtofl+2,___flmul@b+2
  2065  001B30  C016  F024         	movff	?___xxtofl+3,___flmul@b+3
  2066  001B34  EC19  F012         	call	___flmul	;wreg free
  2067  001B38  C021  F047         	movff	?___flmul,___fladd@b
  2068  001B3C  C022  F048         	movff	?___flmul+1,___fladd@b+1
  2069  001B40  C023  F049         	movff	?___flmul+2,___fladd@b+2
  2070  001B44  C024  F04A         	movff	?___flmul+3,___fladd@b+3
  2071  001B48  ECB9  F00F         	call	___fladd	;wreg free
  2072  001B4C  C047  F0CD         	movff	?___fladd,_main$2473
  2073  001B50  C048  F0CE         	movff	?___fladd+1,_main$2473+1
  2074  001B54  C049  F0CF         	movff	?___fladd+2,_main$2473+2
  2075  001B58  C04A  F0D0         	movff	?___fladd+3,_main$2473+3
  2076  001B5C                     
  2077                           ;mainTP.c: 169: pidVentVal = kp * err + ki * pidSum + kd * (err - lastErr);
  2078  001B5C  C088  F05B         	movff	_lastErr,___flsub@a
  2079  001B60  C089  F05C         	movff	_lastErr+1,___flsub@a+1
  2080  001B64  C08A  F05D         	movff	_lastErr+2,___flsub@a+2
  2081  001B68  C08B  F05E         	movff	_lastErr+3,___flsub@a+3
  2082  001B6C  C080  F057         	movff	_err,___flsub@b
  2083  001B70  C081  F058         	movff	_err+1,___flsub@b+1
  2084  001B74  C082  F059         	movff	_err+2,___flsub@b+2
  2085  001B78  C083  F05A         	movff	_err+3,___flsub@b+3
  2086  001B7C  ECB3  F02A         	call	___flsub	;wreg free
  2087  001B80  C057  F025         	movff	?___flsub,___flmul@a
  2088  001B84  C058  F026         	movff	?___flsub+1,___flmul@a+1
  2089  001B88  C059  F027         	movff	?___flsub+2,___flmul@a+2
  2090  001B8C  C05A  F028         	movff	?___flsub+3,___flmul@a+3
  2091  001B90  C0A8  F013         	movff	_kd,___xxtofl@val
  2092  001B94  C0A9  F014         	movff	_kd+1,___xxtofl@val+1
  2093  001B98  0E00               	movlw	0
  2094  001B9A  BE14               	btfsc	(___xxtofl@val+1)^0,7,c
  2095  001B9C  0EFF               	movlw	-1
  2096  001B9E  6E15               	movwf	(___xxtofl@val+2)^0,c
  2097  001BA0  6E16               	movwf	(___xxtofl@val+3)^0,c
  2098  001BA2  0E01               	movlw	1
  2099  001BA4  EC42  F01D         	call	___xxtofl
  2100  001BA8  C013  F021         	movff	?___xxtofl,___flmul@b
  2101  001BAC  C014  F022         	movff	?___xxtofl+1,___flmul@b+1
  2102  001BB0  C015  F023         	movff	?___xxtofl+2,___flmul@b+2
  2103  001BB4  C016  F024         	movff	?___xxtofl+3,___flmul@b+3
  2104  001BB8  EC19  F012         	call	___flmul	;wreg free
  2105  001BBC  C021  F0D1         	movff	?___flmul,_main$2474
  2106  001BC0  C022  F0D2         	movff	?___flmul+1,_main$2474+1
  2107  001BC4  C023  F0D3         	movff	?___flmul+2,_main$2474+2
  2108  001BC8  C024  F0D4         	movff	?___flmul+3,_main$2474+3
  2109                           
  2110                           ;mainTP.c: 169: pidVentVal = kp * err + ki * pidSum + kd * (err - lastErr);
  2111  001BCC  C0CD  F047         	movff	_main$2473,___fladd@b
  2112  001BD0  C0CE  F048         	movff	_main$2473+1,___fladd@b+1
  2113  001BD4  C0CF  F049         	movff	_main$2473+2,___fladd@b+2
  2114  001BD8  C0D0  F04A         	movff	_main$2473+3,___fladd@b+3
  2115  001BDC  C0D1  F04B         	movff	_main$2474,___fladd@a
  2116  001BE0  C0D2  F04C         	movff	_main$2474+1,___fladd@a+1
  2117  001BE4  C0D3  F04D         	movff	_main$2474+2,___fladd@a+2
  2118  001BE8  C0D4  F04E         	movff	_main$2474+3,___fladd@a+3
  2119  001BEC  ECB9  F00F         	call	___fladd	;wreg free
  2120  001BF0  C047  F084         	movff	?___fladd,_pidVentVal
  2121  001BF4  C048  F085         	movff	?___fladd+1,_pidVentVal+1
  2122  001BF8  C049  F086         	movff	?___fladd+2,_pidVentVal+2
  2123  001BFC  C04A  F087         	movff	?___fladd+3,_pidVentVal+3
  2124                           
  2125                           ;mainTP.c: 170: pidSum += err;
  2126  001C00  C08C  F047         	movff	_pidSum,___fladd@b
  2127  001C04  C08D  F048         	movff	_pidSum+1,___fladd@b+1
  2128  001C08  C08E  F049         	movff	_pidSum+2,___fladd@b+2
  2129  001C0C  C08F  F04A         	movff	_pidSum+3,___fladd@b+3
  2130  001C10  C080  F04B         	movff	_err,___fladd@a
  2131  001C14  C081  F04C         	movff	_err+1,___fladd@a+1
  2132  001C18  C082  F04D         	movff	_err+2,___fladd@a+2
  2133  001C1C  C083  F04E         	movff	_err+3,___fladd@a+3
  2134  001C20  ECB9  F00F         	call	___fladd	;wreg free
  2135  001C24  C047  F08C         	movff	?___fladd,_pidSum
  2136  001C28  C048  F08D         	movff	?___fladd+1,_pidSum+1
  2137  001C2C  C049  F08E         	movff	?___fladd+2,_pidSum+2
  2138  001C30  C04A  F08F         	movff	?___fladd+3,_pidSum+3
  2139  001C34                     
  2140                           ;mainTP.c: 171: lastErr = err;
  2141  001C34  C080  F088         	movff	_err,_lastErr
  2142  001C38  C081  F089         	movff	_err+1,_lastErr+1
  2143  001C3C  C082  F08A         	movff	_err+2,_lastErr+2
  2144  001C40  C083  F08B         	movff	_err+3,_lastErr+3
  2145                           
  2146                           ;mainTP.c: 173: if (pidVentVal > 255) pidVentVal = 255;
  2147  001C44  0E00               	movlw	0
  2148  001C46  6E21               	movwf	___flge@ff1^0,c
  2149  001C48  0E00               	movlw	0
  2150  001C4A  6E22               	movwf	(___flge@ff1+1)^0,c
  2151  001C4C  0E7F               	movlw	127
  2152  001C4E  6E23               	movwf	(___flge@ff1+2)^0,c
  2153  001C50  0E43               	movlw	67
  2154  001C52  6E24               	movwf	(___flge@ff1+3)^0,c
  2155  001C54  C084  F025         	movff	_pidVentVal,___flge@ff2
  2156  001C58  C085  F026         	movff	_pidVentVal+1,___flge@ff2+1
  2157  001C5C  C086  F027         	movff	_pidVentVal+2,___flge@ff2+2
  2158  001C60  C087  F028         	movff	_pidVentVal+3,___flge@ff2+3
  2159  001C64  EC3C  F025         	call	___flge	;wreg free
  2160  001C68  B0D8               	btfsc	status,0,c
  2161  001C6A  EF39  F00E         	goto	u9481
  2162  001C6E  EF3B  F00E         	goto	u9480
  2163  001C72                     u9481:
  2164  001C72  EF44  F00E         	goto	l8545
  2165  001C76                     u9480:
  2166  001C76  0E00               	movlw	0
  2167  001C78  0100               	movlb	0	; () banked
  2168  001C7A  6F84               	movwf	_pidVentVal& (0+255),b
  2169  001C7C  0E00               	movlw	0
  2170  001C7E  6F85               	movwf	(_pidVentVal+1)& (0+255),b
  2171  001C80  0E7F               	movlw	127
  2172  001C82  6F86               	movwf	(_pidVentVal+2)& (0+255),b
  2173  001C84  0E43               	movlw	67
  2174  001C86  6F87               	movwf	(_pidVentVal+3)& (0+255),b
  2175  001C88                     l8545:
  2176                           
  2177                           ;mainTP.c: 174: if (pidVentVal < 10) pidVentVal = 10;
  2178  001C88  C084  F021         	movff	_pidVentVal,___flge@ff1
  2179  001C8C  C085  F022         	movff	_pidVentVal+1,___flge@ff1+1
  2180  001C90  C086  F023         	movff	_pidVentVal+2,___flge@ff1+2
  2181  001C94  C087  F024         	movff	_pidVentVal+3,___flge@ff1+3
  2182  001C98  0E00               	movlw	0
  2183  001C9A  6E25               	movwf	___flge@ff2^0,c
  2184  001C9C  0E00               	movlw	0
  2185  001C9E  6E26               	movwf	(___flge@ff2+1)^0,c
  2186  001CA0  0E20               	movlw	32
  2187  001CA2  6E27               	movwf	(___flge@ff2+2)^0,c
  2188  001CA4  0E41               	movlw	65
  2189  001CA6  6E28               	movwf	(___flge@ff2+3)^0,c
  2190  001CA8  EC3C  F025         	call	___flge	;wreg free
  2191  001CAC  B0D8               	btfsc	status,0,c
  2192  001CAE  EF5B  F00E         	goto	u9491
  2193  001CB2  EF5D  F00E         	goto	u9490
  2194  001CB6                     u9491:
  2195  001CB6  EF66  F00E         	goto	l8549
  2196  001CBA                     u9490:
  2197  001CBA  0E00               	movlw	0
  2198  001CBC  0100               	movlb	0	; () banked
  2199  001CBE  6F84               	movwf	_pidVentVal& (0+255),b
  2200  001CC0  0E00               	movlw	0
  2201  001CC2  6F85               	movwf	(_pidVentVal+1)& (0+255),b
  2202  001CC4  0E20               	movlw	32
  2203  001CC6  6F86               	movwf	(_pidVentVal+2)& (0+255),b
  2204  001CC8  0E41               	movlw	65
  2205  001CCA  6F87               	movwf	(_pidVentVal+3)& (0+255),b
  2206  001CCC                     l8549:
  2207                           
  2208                           ;mainTP.c: 176: valPotenciometroVent = (pidVentVal * 5) / 255;
  2209  001CCC  0E00               	movlw	0
  2210  001CCE  6E25               	movwf	___flmul@a^0,c
  2211  001CD0  0E00               	movlw	0
  2212  001CD2  6E26               	movwf	(___flmul@a+1)^0,c
  2213  001CD4  0EA0               	movlw	160
  2214  001CD6  6E27               	movwf	(___flmul@a+2)^0,c
  2215  001CD8  0E40               	movlw	64
  2216  001CDA  6E28               	movwf	(___flmul@a+3)^0,c
  2217  001CDC  C084  F021         	movff	_pidVentVal,___flmul@b
  2218  001CE0  C085  F022         	movff	_pidVentVal+1,___flmul@b+1
  2219  001CE4  C086  F023         	movff	_pidVentVal+2,___flmul@b+2
  2220  001CE8  C087  F024         	movff	_pidVentVal+3,___flmul@b+3
  2221  001CEC  EC19  F012         	call	___flmul	;wreg free
  2222  001CF0  C021  F03A         	movff	?___flmul,___fldiv@b
  2223  001CF4  C022  F03B         	movff	?___flmul+1,___fldiv@b+1
  2224  001CF8  C023  F03C         	movff	?___flmul+2,___fldiv@b+2
  2225  001CFC  C024  F03D         	movff	?___flmul+3,___fldiv@b+3
  2226  001D00  0E00               	movlw	0
  2227  001D02  6E3E               	movwf	___fldiv@a^0,c
  2228  001D04  0E00               	movlw	0
  2229  001D06  6E3F               	movwf	(___fldiv@a+1)^0,c
  2230  001D08  0E7F               	movlw	127
  2231  001D0A  6E40               	movwf	(___fldiv@a+2)^0,c
  2232  001D0C  0E43               	movlw	67
  2233  001D0E  6E41               	movwf	(___fldiv@a+3)^0,c
  2234  001D10  EC34  F016         	call	___fldiv	;wreg free
  2235  001D14  C03A  F090         	movff	?___fldiv,_valPotenciometroVent
  2236  001D18  C03B  F091         	movff	?___fldiv+1,_valPotenciometroVent+1
  2237  001D1C  C03C  F092         	movff	?___fldiv+2,_valPotenciometroVent+2
  2238  001D20  C03D  F093         	movff	?___fldiv+3,_valPotenciometroVent+3
  2239  001D24                     
  2240                           ;mainTP.c: 177: valPotenciometroHeat = 5;
  2241  001D24  0E00               	movlw	0
  2242  001D26  0100               	movlb	0	; () banked
  2243  001D28  6F94               	movwf	_valPotenciometroHeat& (0+255),b
  2244  001D2A  0E00               	movlw	0
  2245  001D2C  6F95               	movwf	(_valPotenciometroHeat+1)& (0+255),b
  2246  001D2E  0EA0               	movlw	160
  2247  001D30  6F96               	movwf	(_valPotenciometroHeat+2)& (0+255),b
  2248  001D32  0E40               	movlw	64
  2249  001D34  6F97               	movwf	(_valPotenciometroHeat+3)& (0+255),b
  2250  001D36                     
  2251                           ; BSR set to: 0
  2252                           ;mainTP.c: 178: PWM1_Set_Duty(pidVentVal);
  2253  001D36  C084  F053         	movff	_pidVentVal,___fltol@f1
  2254  001D3A  C085  F054         	movff	_pidVentVal+1,___fltol@f1+1
  2255  001D3E  C086  F055         	movff	_pidVentVal+2,___fltol@f1+2
  2256  001D42  C087  F056         	movff	_pidVentVal+3,___fltol@f1+3
  2257  001D46  EC36  F024         	call	___fltol	;wreg free
  2258  001D4A  5053               	movf	?___fltol^0,w,c
  2259  001D4C  ECD3  F028         	call	_PWM1_Set_Duty
  2260  001D50                     
  2261                           ;mainTP.c: 179: sprintf(strLcd1, "PI: %f ", pidVentVal);
  2262  001D50  0E00               	movlw	low _strLcd1
  2263  001D52  6E5F               	movwf	sprintf@sp^0,c
  2264  001D54  0E03               	movlw	high _strLcd1
  2265  001D56  6E60               	movwf	(sprintf@sp+1)^0,c
  2266  001D58  0EDC               	movlw	low STR_1
  2267  001D5A  6E61               	movwf	sprintf@f^0,c
  2268  001D5C  0E06               	movlw	high STR_1
  2269  001D5E  6E62               	movwf	(sprintf@f+1)^0,c
  2270  001D60  C084  F063         	movff	_pidVentVal,?_sprintf+4
  2271  001D64  C085  F064         	movff	_pidVentVal+1,?_sprintf+5
  2272  001D68  C086  F065         	movff	_pidVentVal+2,?_sprintf+6
  2273  001D6C  C087  F066         	movff	_pidVentVal+3,?_sprintf+7
  2274  001D70  EC76  F003         	call	_sprintf	;wreg free
  2275  001D74                     
  2276                           ;mainTP.c: 180: Lcd_Out(3, -4, strLcd1);
  2277  001D74  0EFC               	movlw	252
  2278  001D76  6E09               	movwf	Lcd_Out@x^0,c
  2279  001D78  0E00               	movlw	low _strLcd1
  2280  001D7A  6E0A               	movwf	Lcd_Out@buffer^0,c
  2281  001D7C  0E03               	movlw	high _strLcd1
  2282  001D7E  6E0B               	movwf	(Lcd_Out@buffer+1)^0,c
  2283  001D80  0E03               	movlw	3
  2284  001D82  EC78  F027         	call	_Lcd_Out
  2285  001D86                     l8559:
  2286                           
  2287                           ;mainTP.c: 182: };mainTP.c: 184: sprintf(strLcd1, "Tmp: %0.2fC", temperatura);
  2288  001D86  0E00               	movlw	low _strLcd1
  2289  001D88  6E5F               	movwf	sprintf@sp^0,c
  2290  001D8A  0E03               	movlw	high _strLcd1
  2291  001D8C  6E60               	movwf	(sprintf@sp+1)^0,c
  2292  001D8E  0EB3               	movlw	low STR_2
  2293  001D90  6E61               	movwf	sprintf@f^0,c
  2294  001D92  0E06               	movlw	high STR_2
  2295  001D94  6E62               	movwf	(sprintf@f+1)^0,c
  2296  001D96  C0A0  F063         	movff	_temperatura,?_sprintf+4
  2297  001D9A  C0A1  F064         	movff	_temperatura+1,?_sprintf+5
  2298  001D9E  C0A2  F065         	movff	_temperatura+2,?_sprintf+6
  2299  001DA2  C0A3  F066         	movff	_temperatura+3,?_sprintf+7
  2300  001DA6  EC76  F003         	call	_sprintf	;wreg free
  2301  001DAA                     
  2302                           ;mainTP.c: 185: Lcd_Out(1, 0, strLcd1);
  2303  001DAA  0E00               	movlw	0
  2304  001DAC  6E09               	movwf	Lcd_Out@x^0,c
  2305  001DAE  0E00               	movlw	low _strLcd1
  2306  001DB0  6E0A               	movwf	Lcd_Out@buffer^0,c
  2307  001DB2  0E03               	movlw	high _strLcd1
  2308  001DB4  6E0B               	movwf	(Lcd_Out@buffer+1)^0,c
  2309  001DB6  0E01               	movlw	1
  2310  001DB8  EC78  F027         	call	_Lcd_Out
  2311  001DBC                     
  2312                           ;mainTP.c: 188: if (modoOperacao == 0) {
  2313  001DBC  0100               	movlb	0	; () banked
  2314  001DBE  51AA               	movf	_modoOperacao& (0+255),w,b
  2315  001DC0  11AB               	iorwf	(_modoOperacao+1)& (0+255),w,b
  2316  001DC2  A4D8               	btfss	status,2,c
  2317  001DC4  EFE6  F00E         	goto	u9501
  2318  001DC8  EFE8  F00E         	goto	u9500
  2319  001DCC                     u9501:
  2320  001DCC  EF35  F00F         	goto	l8575
  2321  001DD0                     u9500:
  2322  001DD0                     
  2323                           ; BSR set to: 0
  2324                           ;mainTP.c: 189: if (origemParametrosManual == 0) {
  2325  001DD0  51DB               	movf	_origemParametrosManual& (0+255),w,b
  2326  001DD2  11DC               	iorwf	(_origemParametrosManual+1)& (0+255),w,b
  2327  001DD4  A4D8               	btfss	status,2,c
  2328  001DD6  EFEF  F00E         	goto	u9511
  2329  001DDA  EFF1  F00E         	goto	u9510
  2330  001DDE                     u9511:
  2331  001DDE  EFFD  F00E         	goto	l8569
  2332  001DE2                     u9510:
  2333  001DE2                     
  2334                           ; BSR set to: 0
  2335                           ;mainTP.c: 190: sprintf(strLcd2, "Man. P  ");
  2336  001DE2  0EAF               	movlw	low _strLcd2
  2337  001DE4  6E5F               	movwf	sprintf@sp^0,c
  2338  001DE6  0E02               	movlw	high _strLcd2
  2339  001DE8  6E60               	movwf	(sprintf@sp+1)^0,c
  2340  001DEA  0ECA               	movlw	low STR_3
  2341  001DEC  6E61               	movwf	sprintf@f^0,c
  2342  001DEE  0E06               	movlw	high STR_3
  2343  001DF0  6E62               	movwf	(sprintf@f+1)^0,c
  2344  001DF2  EC76  F003         	call	_sprintf	;wreg free
  2345                           
  2346                           ;mainTP.c: 191: } else {
  2347  001DF6  EF07  F00F         	goto	l8571
  2348  001DFA                     l8569:
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;mainTP.c: 192: sprintf(strLcd2, "Man. S  ");
  2352  001DFA  0EAF               	movlw	low _strLcd2
  2353  001DFC  6E5F               	movwf	sprintf@sp^0,c
  2354  001DFE  0E02               	movlw	high _strLcd2
  2355  001E00  6E60               	movwf	(sprintf@sp+1)^0,c
  2356  001E02  0ED3               	movlw	low STR_4
  2357  001E04  6E61               	movwf	sprintf@f^0,c
  2358  001E06  0E06               	movlw	high STR_4
  2359  001E08  6E62               	movwf	(sprintf@f+1)^0,c
  2360  001E0A  EC76  F003         	call	_sprintf	;wreg free
  2361  001E0E                     l8571:
  2362                           
  2363                           ;mainTP.c: 193: };mainTP.c: 194: Lcd_Out(2, 0, strLcd2);
  2364  001E0E  0E00               	movlw	0
  2365  001E10  6E09               	movwf	Lcd_Out@x^0,c
  2366  001E12  0EAF               	movlw	low _strLcd2
  2367  001E14  6E0A               	movwf	Lcd_Out@buffer^0,c
  2368  001E16  0E02               	movlw	high _strLcd2
  2369  001E18  6E0B               	movwf	(Lcd_Out@buffer+1)^0,c
  2370  001E1A  0E02               	movlw	2
  2371  001E1C  EC78  F027         	call	_Lcd_Out
  2372  001E20                     
  2373                           ;mainTP.c: 195: sprintf(strLcd2,"Vc: %0.1f Va: %0.1f", valPotenciometroVent, valPotencio
      +                          metroHeat);
  2374  001E20  0EAF               	movlw	low _strLcd2
  2375  001E22  6E5F               	movwf	sprintf@sp^0,c
  2376  001E24  0E02               	movlw	high _strLcd2
  2377  001E26  6E60               	movwf	(sprintf@sp+1)^0,c
  2378  001E28  0E91               	movlw	low STR_5
  2379  001E2A  6E61               	movwf	sprintf@f^0,c
  2380  001E2C  0E06               	movlw	high STR_5
  2381  001E2E  6E62               	movwf	(sprintf@f+1)^0,c
  2382  001E30  C090  F063         	movff	_valPotenciometroVent,?_sprintf+4
  2383  001E34  C091  F064         	movff	_valPotenciometroVent+1,?_sprintf+5
  2384  001E38  C092  F065         	movff	_valPotenciometroVent+2,?_sprintf+6
  2385  001E3C  C093  F066         	movff	_valPotenciometroVent+3,?_sprintf+7
  2386  001E40  C094  F067         	movff	_valPotenciometroHeat,?_sprintf+8
  2387  001E44  C095  F068         	movff	_valPotenciometroHeat+1,?_sprintf+9
  2388  001E48  C096  F069         	movff	_valPotenciometroHeat+2,?_sprintf+10
  2389  001E4C  C097  F06A         	movff	_valPotenciometroHeat+3,?_sprintf+11
  2390  001E50  EC76  F003         	call	_sprintf	;wreg free
  2391                           
  2392                           ;mainTP.c: 196: Lcd_Out(3, -4, strLcd2);
  2393  001E54  0EFC               	movlw	252
  2394  001E56  6E09               	movwf	Lcd_Out@x^0,c
  2395  001E58  0EAF               	movlw	low _strLcd2
  2396  001E5A  6E0A               	movwf	Lcd_Out@buffer^0,c
  2397  001E5C  0E02               	movlw	high _strLcd2
  2398  001E5E  6E0B               	movwf	(Lcd_Out@buffer+1)^0,c
  2399  001E60  0E03               	movlw	3
  2400  001E62  EC78  F027         	call	_Lcd_Out
  2401                           
  2402                           ;mainTP.c: 197: } else {
  2403  001E66  EF63  F00F         	goto	l8581
  2404  001E6A                     l8575:
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;mainTP.c: 198: Lcd_Out(2, 0, "Aut. Aq:ON");
  2408  001E6A  0E00               	movlw	0
  2409  001E6C  6E09               	movwf	Lcd_Out@x^0,c
  2410  001E6E  0EBF               	movlw	low STR_6
  2411  001E70  6E0A               	movwf	Lcd_Out@buffer^0,c
  2412  001E72  0E06               	movlw	high STR_6
  2413  001E74  6E0B               	movwf	(Lcd_Out@buffer+1)^0,c
  2414  001E76  0E02               	movlw	2
  2415  001E78  EC78  F027         	call	_Lcd_Out
  2416  001E7C                     
  2417                           ;mainTP.c: 199: sprintf(strLcd2, "%0.2f", kp);
  2418  001E7C  0EAF               	movlw	low _strLcd2
  2419  001E7E  6E5F               	movwf	sprintf@sp^0,c
  2420  001E80  0E02               	movlw	high _strLcd2
  2421  001E82  6E60               	movwf	(sprintf@sp+1)^0,c
  2422  001E84  0EE4               	movlw	low STR_7
  2423  001E86  6E61               	movwf	sprintf@f^0,c
  2424  001E88  0E06               	movlw	high STR_7
  2425  001E8A  6E62               	movwf	(sprintf@f+1)^0,c
  2426  001E8C  C0D9  F063         	movff	_kp,?_sprintf+4
  2427  001E90  C0DA  F064         	movff	_kp+1,?_sprintf+5
  2428  001E94  EC76  F003         	call	_sprintf	;wreg free
  2429  001E98                     
  2430                           ;mainTP.c: 200: sprintf(strLcd2,"Setpoint: %dC", holdingReg[2]);
  2431  001E98  0EAF               	movlw	low _strLcd2
  2432  001E9A  6E5F               	movwf	sprintf@sp^0,c
  2433  001E9C  0E02               	movlw	high _strLcd2
  2434  001E9E  6E60               	movwf	(sprintf@sp+1)^0,c
  2435  001EA0  0EA5               	movlw	low STR_8
  2436  001EA2  6E61               	movwf	sprintf@f^0,c
  2437  001EA4  0E06               	movlw	high STR_8
  2438  001EA6  6E62               	movwf	(sprintf@f+1)^0,c
  2439  001EA8  C181  F063         	movff	_holdingReg+4,?_sprintf+4	;volatile
  2440  001EAC  C182  F064         	movff	_holdingReg+5,?_sprintf+5	;volatile
  2441  001EB0  EC76  F003         	call	_sprintf	;wreg free
  2442                           
  2443                           ;mainTP.c: 201: Lcd_Out(4, -4, strLcd2);
  2444  001EB4  0EFC               	movlw	252
  2445  001EB6  6E09               	movwf	Lcd_Out@x^0,c
  2446  001EB8  0EAF               	movlw	low _strLcd2
  2447  001EBA  6E0A               	movwf	Lcd_Out@buffer^0,c
  2448  001EBC  0E02               	movlw	high _strLcd2
  2449  001EBE  6E0B               	movwf	(Lcd_Out@buffer+1)^0,c
  2450  001EC0  0E04               	movlw	4
  2451  001EC2  EC78  F027         	call	_Lcd_Out
  2452  001EC6                     l8581:
  2453                           
  2454                           ;mainTP.c: 202: };mainTP.c: 205: holdingReg[1] = temperatura;
  2455  001EC6  C0A0  F053         	movff	_temperatura,___fltol@f1
  2456  001ECA  C0A1  F054         	movff	_temperatura+1,___fltol@f1+1
  2457  001ECE  C0A2  F055         	movff	_temperatura+2,___fltol@f1+2
  2458  001ED2  C0A3  F056         	movff	_temperatura+3,___fltol@f1+3
  2459  001ED6  EC36  F024         	call	___fltol	;wreg free
  2460  001EDA  C053  F17F         	movff	?___fltol,_holdingReg+2	;volatile
  2461  001EDE  C054  F180         	movff	?___fltol+1,_holdingReg+3	;volatile
  2462  001EE2                     
  2463                           ;mainTP.c: 206: holdingReg[2] = tempSetpoint;
  2464  001EE2  C0D5  F181         	movff	_tempSetpoint,_holdingReg+4	;volatile
  2465  001EE6  C0D6  F182         	movff	_tempSetpoint+1,_holdingReg+5	;volatile
  2466  001EEA                     
  2467                           ;mainTP.c: 207: holdingReg[3] = valPotenciometroVent * 10;
  2468  001EEA  0E00               	movlw	0
  2469  001EEC  6E25               	movwf	___flmul@a^0,c
  2470  001EEE  0E00               	movlw	0
  2471  001EF0  6E26               	movwf	(___flmul@a+1)^0,c
  2472  001EF2  0E20               	movlw	32
  2473  001EF4  6E27               	movwf	(___flmul@a+2)^0,c
  2474  001EF6  0E41               	movlw	65
  2475  001EF8  6E28               	movwf	(___flmul@a+3)^0,c
  2476  001EFA  C090  F021         	movff	_valPotenciometroVent,___flmul@b
  2477  001EFE  C091  F022         	movff	_valPotenciometroVent+1,___flmul@b+1
  2478  001F02  C092  F023         	movff	_valPotenciometroVent+2,___flmul@b+2
  2479  001F06  C093  F024         	movff	_valPotenciometroVent+3,___flmul@b+3
  2480  001F0A  EC19  F012         	call	___flmul	;wreg free
  2481  001F0E  C021  F053         	movff	?___flmul,___fltol@f1
  2482  001F12  C022  F054         	movff	?___flmul+1,___fltol@f1+1
  2483  001F16  C023  F055         	movff	?___flmul+2,___fltol@f1+2
  2484  001F1A  C024  F056         	movff	?___flmul+3,___fltol@f1+3
  2485  001F1E  EC36  F024         	call	___fltol	;wreg free
  2486  001F22  C053  F183         	movff	?___fltol,_holdingReg+6	;volatile
  2487  001F26  C054  F184         	movff	?___fltol+1,_holdingReg+7	;volatile
  2488  001F2A                     
  2489                           ;mainTP.c: 208: holdingReg[4] = valPotenciometroHeat * 10;
  2490  001F2A  0E00               	movlw	0
  2491  001F2C  6E25               	movwf	___flmul@a^0,c
  2492  001F2E  0E00               	movlw	0
  2493  001F30  6E26               	movwf	(___flmul@a+1)^0,c
  2494  001F32  0E20               	movlw	32
  2495  001F34  6E27               	movwf	(___flmul@a+2)^0,c
  2496  001F36  0E41               	movlw	65
  2497  001F38  6E28               	movwf	(___flmul@a+3)^0,c
  2498  001F3A  C094  F021         	movff	_valPotenciometroHeat,___flmul@b
  2499  001F3E  C095  F022         	movff	_valPotenciometroHeat+1,___flmul@b+1
  2500  001F42  C096  F023         	movff	_valPotenciometroHeat+2,___flmul@b+2
  2501  001F46  C097  F024         	movff	_valPotenciometroHeat+3,___flmul@b+3
  2502  001F4A  EC19  F012         	call	___flmul	;wreg free
  2503  001F4E  C021  F053         	movff	?___flmul,___fltol@f1
  2504  001F52  C022  F054         	movff	?___flmul+1,___fltol@f1+1
  2505  001F56  C023  F055         	movff	?___flmul+2,___fltol@f1+2
  2506  001F5A  C024  F056         	movff	?___flmul+3,___fltol@f1+3
  2507  001F5E  EC36  F024         	call	___fltol	;wreg free
  2508  001F62  C053  F185         	movff	?___fltol,_holdingReg+8	;volatile
  2509  001F66  C054  F186         	movff	?___fltol+1,_holdingReg+9	;volatile
  2510  001F6A  EF73  F00A         	goto	l217
  2511  001F6E  EF07  F000         	goto	start
  2512  001F72                     __end_of_main:
  2513                           	callstack 0
  2514                           
  2515 ;; *************** function _sprintf *****************
  2516 ;; Defined at:
  2517 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  sp              2   94[COMRAM] PTR unsigned char 
  2520 ;;		 -> strLcd2(50), strLcd1(50), 
  2521 ;;  f               2   96[COMRAM] PTR const unsigned char 
  2522 ;;		 -> STR_8(14), STR_7(6), STR_5(20), STR_4(9), 
  2523 ;;		 -> STR_3(9), STR_2(12), STR_1(8), 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  fval            4   20[BANK0 ] PTR const unsigned char 
  2526 ;;  val             4   10[BANK0 ] unsigned long 
  2527 ;;  tmpval          4    6[BANK0 ] struct .
  2528 ;;  cp              3    0        PTR const unsigned char 
  2529 ;;  prec            2   24[BANK0 ] int 
  2530 ;;  width           2   18[BANK0 ] int 
  2531 ;;  flag            2   16[BANK0 ] unsigned short 
  2532 ;;  eexp            2   14[BANK0 ] int 
  2533 ;;  ap              2    4[BANK0 ] PTR void [1]
  2534 ;;		 -> ?_sprintf(2), 
  2535 ;;  len             2    0        unsigned int 
  2536 ;;  c               1   26[BANK0 ] unsigned char 
  2537 ;;  d               1    0        unsigned char 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  2   94[COMRAM] int 
  2540 ;; Registers used:
  2541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2547 ;;      Params:        12       0       0       0       0       0       0
  2548 ;;      Locals:         0      27       0       0       0       0       0
  2549 ;;      Temps:          4       0       0       0       0       0       0
  2550 ;;      Totals:        16      27       0       0       0       0       0
  2551 ;;Total ram usage:       43 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:    4
  2554 ;; This function calls:
  2555 ;;		___awdiv
  2556 ;;		___fladd
  2557 ;;		___fleq
  2558 ;;		___flge
  2559 ;;		___flmul
  2560 ;;		___flneg
  2561 ;;		___flsub
  2562 ;;		___fltol
  2563 ;;		___lldiv
  2564 ;;		___llmod
  2565 ;;		___wmul
  2566 ;;		___xxtofl
  2567 ;;		__div_to_l_
  2568 ;;		__tdiv_to_l_
  2569 ;;		_fround
  2570 ;;		_isdigit
  2571 ;;		_scale
  2572 ;; This function is called by:
  2573 ;;		_main
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text1
  2578  0006EC                     __ptext1:
  2579                           	callstack 0
  2580  0006EC                     _sprintf:
  2581                           	callstack 26
  2582  0006EC                     
  2583                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  2584  0006EC  0E63               	movlw	low (?_sprintf+4)
  2585  0006EE  0100               	movlb	0	; () banked
  2586  0006F0  6FB6               	movwf	sprintf@ap& (0+255),b
  2587  0006F2  0E00               	movlw	high (?_sprintf+4)
  2588  0006F4  6FB7               	movwf	(sprintf@ap+1)& (0+255),b
  2589                           
  2590                           ;doprnt.c: 553: while((c = *f++)) {
  2591  0006F6  EF1F  F00A         	goto	l8275
  2592  0006FA                     l7949:
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;doprnt.c: 555: if(c != '%')
  2596  0006FA  0E25               	movlw	37
  2597  0006FC  19CC               	xorwf	sprintf@c& (0+255),w,b
  2598  0006FE  B4D8               	btfsc	status,2,c
  2599  000700  EF84  F003         	goto	u8591
  2600  000704  EF86  F003         	goto	u8590
  2601  000708                     u8591:
  2602  000708  EF90  F003         	goto	l7955
  2603  00070C                     u8590:
  2604  00070C                     
  2605                           ; BSR set to: 0
  2606                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  2607  00070C  C05F  FFD9         	movff	sprintf@sp,fsr2l
  2608  000710  C060  FFDA         	movff	sprintf@sp+1,fsr2h
  2609  000714  C0CC  FFDF         	movff	sprintf@c,indf2
  2610  000718                     
  2611                           ; BSR set to: 0
  2612  000718  4A5F               	infsnz	sprintf@sp^0,f,c
  2613  00071A  2A60               	incf	(sprintf@sp+1)^0,f,c
  2614                           
  2615                           ;doprnt.c: 559: continue;
  2616  00071C  EF1F  F00A         	goto	l8275
  2617  000720                     l7955:
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  2621  000720  0E00               	movlw	0
  2622  000722  6FC5               	movwf	(sprintf@width+1)& (0+255),b
  2623  000724  0E00               	movlw	0
  2624  000726  6FC4               	movwf	sprintf@width& (0+255),b
  2625                           
  2626                           ;doprnt.c: 565: flag = 0;
  2627  000728  0E00               	movlw	0
  2628  00072A  6FC3               	movwf	(sprintf@flag+1)& (0+255),b
  2629  00072C  0E00               	movlw	0
  2630  00072E  6FC2               	movwf	sprintf@flag& (0+255),b
  2631  000730  EF9D  F003         	goto	l7961
  2632  000734                     l7957:
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;doprnt.c: 597: flag |= 0x04;
  2636  000734  85C2               	bsf	sprintf@flag& (0+255),2,b
  2637                           
  2638                           ;doprnt.c: 598: f++;
  2639  000736  4A61               	infsnz	sprintf@f^0,f,c
  2640  000738  2A62               	incf	(sprintf@f+1)^0,f,c
  2641  00073A                     l7961:
  2642                           
  2643                           ; BSR set to: 0
  2644  00073A  C061  FFF6         	movff	sprintf@f,tblptrl
  2645  00073E  C062  FFF7         	movff	sprintf@f+1,tblptrh
  2646  000742                     	if	0	;tblptru may be non-zero
  2647  000742                     	endif
  2648  000742                     	if	0	;tblptru may be non-zero
  2649  000742                     	endif
  2650  000742  0008               	tblrd		*
  2651  000744  50F5               	movf	tablat,w,c
  2652                           
  2653                           ; Switch size 1, requested type "simple"
  2654                           ; Number of cases is 1, Range of values is 48 to 48
  2655                           ; switch strategies available:
  2656                           ; Name         Instructions Cycles
  2657                           ; simple_byte            4     3 (average)
  2658                           ;	Chosen strategy is simple_byte
  2659  000746  0A30               	xorlw	48	; case 48
  2660  000748  B4D8               	btfsc	status,2,c
  2661  00074A  EF9A  F003         	goto	l7957
  2662  00074E  EFA9  F003         	goto	l7963
  2663  000752                     l7963:
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  2667  000752  C061  FFF6         	movff	sprintf@f,tblptrl
  2668  000756  C062  FFF7         	movff	sprintf@f+1,tblptrh
  2669  00075A                     	if	0	;tblptru may be non-zero
  2670  00075A                     	endif
  2671  00075A                     	if	0	;tblptru may be non-zero
  2672  00075A                     	endif
  2673  00075A  0008               	tblrd		*
  2674  00075C  50F5               	movf	tablat,w,c
  2675  00075E  ECF2  F02A         	call	_isdigit
  2676  000762  A0D8               	btfss	status,0,c
  2677  000764  EFB6  F003         	goto	u8601
  2678  000768  EFB8  F003         	goto	u8600
  2679  00076C                     u8601:
  2680  00076C  EFF1  F003         	goto	l7975
  2681  000770                     u8600:
  2682  000770                     
  2683                           ;doprnt.c: 615: width = 0;
  2684  000770  0E00               	movlw	0
  2685  000772  0100               	movlb	0	; () banked
  2686  000774  6FC5               	movwf	(sprintf@width+1)& (0+255),b
  2687  000776  0E00               	movlw	0
  2688  000778  6FC4               	movwf	sprintf@width& (0+255),b
  2689  00077A                     l7967:
  2690                           
  2691                           ;doprnt.c: 617: width *= 10;
  2692  00077A  C0C4  F006         	movff	sprintf@width,___wmul@multiplier
  2693  00077E  C0C5  F007         	movff	sprintf@width+1,___wmul@multiplier+1
  2694  000782  0E00               	movlw	0
  2695  000784  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  2696  000786  0E0A               	movlw	10
  2697  000788  6E08               	movwf	___wmul@multiplicand^0,c
  2698  00078A  EC39  F02B         	call	___wmul	;wreg free
  2699  00078E  C006  F0C4         	movff	?___wmul,sprintf@width
  2700  000792  C007  F0C5         	movff	?___wmul+1,sprintf@width+1
  2701  000796                     
  2702                           ;doprnt.c: 618: width += *f++ - '0';
  2703  000796  0ED0               	movlw	208
  2704  000798  6E6B               	movwf	??_sprintf^0,c
  2705  00079A  0EFF               	movlw	255
  2706  00079C  6E6C               	movwf	(??_sprintf+1)^0,c
  2707  00079E  C061  FFF6         	movff	sprintf@f,tblptrl
  2708  0007A2  C062  FFF7         	movff	sprintf@f+1,tblptrh
  2709  0007A6                     	if	0	;tblptru may be non-zero
  2710  0007A6                     	endif
  2711  0007A6                     	if	0	;tblptru may be non-zero
  2712  0007A6                     	endif
  2713  0007A6  0008               	tblrd		*
  2714  0007A8  50F5               	movf	tablat,w,c
  2715  0007AA  6E6D               	movwf	(??_sprintf+2)^0,c
  2716  0007AC  6A6E               	clrf	(??_sprintf+3)^0,c
  2717  0007AE  506B               	movf	??_sprintf^0,w,c
  2718  0007B0  266D               	addwf	(??_sprintf+2)^0,f,c
  2719  0007B2  506C               	movf	(??_sprintf+1)^0,w,c
  2720  0007B4  226E               	addwfc	(??_sprintf+3)^0,f,c
  2721  0007B6  506D               	movf	(??_sprintf+2)^0,w,c
  2722  0007B8  0100               	movlb	0	; () banked
  2723  0007BA  27C4               	addwf	sprintf@width& (0+255),f,b
  2724  0007BC  506E               	movf	(??_sprintf+3)^0,w,c
  2725  0007BE  23C5               	addwfc	(sprintf@width+1)& (0+255),f,b
  2726  0007C0                     
  2727                           ; BSR set to: 0
  2728  0007C0  4A61               	infsnz	sprintf@f^0,f,c
  2729  0007C2  2A62               	incf	(sprintf@f+1)^0,f,c
  2730  0007C4                     
  2731                           ; BSR set to: 0
  2732                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  2733  0007C4  C061  FFF6         	movff	sprintf@f,tblptrl
  2734  0007C8  C062  FFF7         	movff	sprintf@f+1,tblptrh
  2735  0007CC                     	if	0	;tblptru may be non-zero
  2736  0007CC                     	endif
  2737  0007CC                     	if	0	;tblptru may be non-zero
  2738  0007CC                     	endif
  2739  0007CC  0008               	tblrd		*
  2740  0007CE  50F5               	movf	tablat,w,c
  2741  0007D0  ECF2  F02A         	call	_isdigit
  2742  0007D4  B0D8               	btfsc	status,0,c
  2743  0007D6  EFEF  F003         	goto	u8611
  2744  0007DA  EFF1  F003         	goto	u8610
  2745  0007DE                     u8611:
  2746  0007DE  EFBD  F003         	goto	l7967
  2747  0007E2                     u8610:
  2748  0007E2                     l7975:
  2749                           
  2750                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  2751  0007E2  C061  FFF6         	movff	sprintf@f,tblptrl
  2752  0007E6  C062  FFF7         	movff	sprintf@f+1,tblptrh
  2753  0007EA                     	if	0	;tblptru may be non-zero
  2754  0007EA                     	endif
  2755  0007EA                     	if	0	;tblptru may be non-zero
  2756  0007EA                     	endif
  2757  0007EA  0008               	tblrd		*
  2758  0007EC  50F5               	movf	tablat,w,c
  2759  0007EE  0A2E               	xorlw	46
  2760  0007F0  A4D8               	btfss	status,2,c
  2761  0007F2  EFFD  F003         	goto	u8621
  2762  0007F6  EFFF  F003         	goto	u8620
  2763  0007FA                     u8621:
  2764  0007FA  EF3F  F004         	goto	l7989
  2765  0007FE                     u8620:
  2766  0007FE                     
  2767                           ;doprnt.c: 629: flag |= 0x4000;
  2768  0007FE  0100               	movlb	0	; () banked
  2769  000800  8DC3               	bsf	(sprintf@flag+1)& (0+255),6,b
  2770                           
  2771                           ;doprnt.c: 630: f++;
  2772  000802  4A61               	infsnz	sprintf@f^0,f,c
  2773  000804  2A62               	incf	(sprintf@f+1)^0,f,c
  2774  000806                     
  2775                           ; BSR set to: 0
  2776                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  2777  000806  0E00               	movlw	0
  2778  000808  6FCB               	movwf	(sprintf@prec+1)& (0+255),b
  2779  00080A  0E00               	movlw	0
  2780  00080C  6FCA               	movwf	sprintf@prec& (0+255),b
  2781                           
  2782                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  2783  00080E  EF2E  F004         	goto	l7987
  2784  000812                     l7981:
  2785                           
  2786                           ;doprnt.c: 647: prec *= 10;
  2787  000812  C0CA  F006         	movff	sprintf@prec,___wmul@multiplier
  2788  000816  C0CB  F007         	movff	sprintf@prec+1,___wmul@multiplier+1
  2789  00081A  0E00               	movlw	0
  2790  00081C  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  2791  00081E  0E0A               	movlw	10
  2792  000820  6E08               	movwf	___wmul@multiplicand^0,c
  2793  000822  EC39  F02B         	call	___wmul	;wreg free
  2794  000826  C006  F0CA         	movff	?___wmul,sprintf@prec
  2795  00082A  C007  F0CB         	movff	?___wmul+1,sprintf@prec+1
  2796  00082E                     
  2797                           ;doprnt.c: 648: prec += *f++ - '0';
  2798  00082E  0ED0               	movlw	208
  2799  000830  6E6B               	movwf	??_sprintf^0,c
  2800  000832  0EFF               	movlw	255
  2801  000834  6E6C               	movwf	(??_sprintf+1)^0,c
  2802  000836  C061  FFF6         	movff	sprintf@f,tblptrl
  2803  00083A  C062  FFF7         	movff	sprintf@f+1,tblptrh
  2804  00083E                     	if	0	;tblptru may be non-zero
  2805  00083E                     	endif
  2806  00083E                     	if	0	;tblptru may be non-zero
  2807  00083E                     	endif
  2808  00083E  0008               	tblrd		*
  2809  000840  50F5               	movf	tablat,w,c
  2810  000842  6E6D               	movwf	(??_sprintf+2)^0,c
  2811  000844  6A6E               	clrf	(??_sprintf+3)^0,c
  2812  000846  506B               	movf	??_sprintf^0,w,c
  2813  000848  266D               	addwf	(??_sprintf+2)^0,f,c
  2814  00084A  506C               	movf	(??_sprintf+1)^0,w,c
  2815  00084C  226E               	addwfc	(??_sprintf+3)^0,f,c
  2816  00084E  506D               	movf	(??_sprintf+2)^0,w,c
  2817  000850  0100               	movlb	0	; () banked
  2818  000852  27CA               	addwf	sprintf@prec& (0+255),f,b
  2819  000854  506E               	movf	(??_sprintf+3)^0,w,c
  2820  000856  23CB               	addwfc	(sprintf@prec+1)& (0+255),f,b
  2821  000858                     
  2822                           ; BSR set to: 0
  2823  000858  4A61               	infsnz	sprintf@f^0,f,c
  2824  00085A  2A62               	incf	(sprintf@f+1)^0,f,c
  2825  00085C                     l7987:
  2826                           
  2827                           ; BSR set to: 0
  2828  00085C  C061  FFF6         	movff	sprintf@f,tblptrl
  2829  000860  C062  FFF7         	movff	sprintf@f+1,tblptrh
  2830  000864                     	if	0	;tblptru may be non-zero
  2831  000864                     	endif
  2832  000864                     	if	0	;tblptru may be non-zero
  2833  000864                     	endif
  2834  000864  0008               	tblrd		*
  2835  000866  50F5               	movf	tablat,w,c
  2836  000868  ECF2  F02A         	call	_isdigit
  2837  00086C  B0D8               	btfsc	status,0,c
  2838  00086E  EF3B  F004         	goto	u8631
  2839  000872  EF3D  F004         	goto	u8630
  2840  000876                     u8631:
  2841  000876  EF09  F004         	goto	l7981
  2842  00087A                     u8630:
  2843  00087A  EF4A  F004         	goto	l7997
  2844  00087E                     l7989:
  2845                           
  2846                           ;doprnt.c: 652: prec = 0;
  2847  00087E  0E00               	movlw	0
  2848  000880  0100               	movlb	0	; () banked
  2849  000882  6FCB               	movwf	(sprintf@prec+1)& (0+255),b
  2850  000884  0E00               	movlw	0
  2851  000886  6FCA               	movwf	sprintf@prec& (0+255),b
  2852  000888                     
  2853                           ; BSR set to: 0
  2854                           ;doprnt.c: 654: flag |= 0x1000;
  2855  000888  89C3               	bsf	(sprintf@flag+1)& (0+255),4,b
  2856  00088A  EF4A  F004         	goto	l7997
  2857  00088E                     l7993:
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;doprnt.c: 689: flag |= 0x400;
  2861  00088E  85C3               	bsf	(sprintf@flag+1)& (0+255),2,b
  2862                           
  2863                           ;doprnt.c: 690: break;
  2864  000890  EF67  F004         	goto	l7999
  2865  000894                     l7997:
  2866  000894  C061  FFF6         	movff	sprintf@f,tblptrl
  2867  000898  C062  FFF7         	movff	sprintf@f+1,tblptrh
  2868  00089C  4A61               	infsnz	sprintf@f^0,f,c
  2869  00089E  2A62               	incf	(sprintf@f+1)^0,f,c
  2870  0008A0                     	if	0	;tblptru may be non-zero
  2871  0008A0                     	endif
  2872  0008A0                     	if	0	;tblptru may be non-zero
  2873  0008A0                     	endif
  2874  0008A0  0008               	tblrd		*
  2875  0008A2  CFF5 F0CC          	movff	tablat,sprintf@c
  2876  0008A6  0100               	movlb	0	; () banked
  2877  0008A8  51CC               	movf	sprintf@c& (0+255),w,b
  2878                           
  2879                           ; Switch size 1, requested type "simple"
  2880                           ; Number of cases is 4, Range of values is 0 to 105
  2881                           ; switch strategies available:
  2882                           ; Name         Instructions Cycles
  2883                           ; simple_byte           13     7 (average)
  2884                           ;	Chosen strategy is simple_byte
  2885  0008AA  0A00               	xorlw	0	; case 0
  2886  0008AC  B4D8               	btfsc	status,2,c
  2887  0008AE  EF30  F00A         	goto	l8277
  2888  0008B2  0A64               	xorlw	100	; case 100
  2889  0008B4  B4D8               	btfsc	status,2,c
  2890  0008B6  EF67  F004         	goto	l7999
  2891  0008BA  0A02               	xorlw	2	; case 102
  2892  0008BC  B4D8               	btfsc	status,2,c
  2893  0008BE  EF47  F004         	goto	l7993
  2894  0008C2  0A0F               	xorlw	15	; case 105
  2895  0008C4  B4D8               	btfsc	status,2,c
  2896  0008C6  EF67  F004         	goto	l7999
  2897  0008CA  EF1F  F00A         	goto	l8275
  2898  0008CE                     l7999:
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;doprnt.c: 851: if(flag & (0x700)) {
  2902  0008CE  0E07               	movlw	7
  2903  0008D0  15C3               	andwf	(sprintf@flag+1)& (0+255),w,b
  2904  0008D2  B4D8               	btfsc	status,2,c
  2905  0008D4  EF6E  F004         	goto	u8641
  2906  0008D8  EF70  F004         	goto	u8640
  2907  0008DC                     u8641:
  2908  0008DC  EF78  F008         	goto	l8179
  2909  0008E0                     u8640:
  2910  0008E0                     
  2911                           ; BSR set to: 0
  2912                           ;doprnt.c: 853: if(flag & 0x1000)
  2913  0008E0  A9C3               	btfss	(sprintf@flag+1)& (0+255),4,b
  2914  0008E2  EF75  F004         	goto	u8651
  2915  0008E6  EF77  F004         	goto	u8650
  2916  0008EA                     u8651:
  2917  0008EA  EF7B  F004         	goto	l8005
  2918  0008EE                     u8650:
  2919  0008EE                     
  2920                           ; BSR set to: 0
  2921                           ;doprnt.c: 855: prec = 6;
  2922  0008EE  0E00               	movlw	0
  2923  0008F0  6FCB               	movwf	(sprintf@prec+1)& (0+255),b
  2924  0008F2  0E06               	movlw	6
  2925  0008F4  6FCA               	movwf	sprintf@prec& (0+255),b
  2926  0008F6                     l8005:
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2930  0008F6  C0B6  FFD9         	movff	sprintf@ap,fsr2l
  2931  0008FA  C0B7  FFDA         	movff	sprintf@ap+1,fsr2h
  2932  0008FE  CFDE F0C6          	movff	postinc2,sprintf@fval
  2933  000902  CFDE F0C7          	movff	postinc2,sprintf@fval+1
  2934  000906  CFDE F0C8          	movff	postinc2,sprintf@fval+2
  2935  00090A  CFDE F0C9          	movff	postinc2,sprintf@fval+3
  2936  00090E                     
  2937                           ; BSR set to: 0
  2938  00090E  0E04               	movlw	4
  2939  000910  27B6               	addwf	sprintf@ap& (0+255),f,b
  2940  000912  0E00               	movlw	0
  2941  000914  23B7               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2942  000916                     
  2943                           ; BSR set to: 0
  2944                           ;doprnt.c: 857: if(fval < 0.0) {
  2945  000916  BFC9               	btfsc	(sprintf@fval+3)& (0+255),7,b
  2946  000918  EF92  F004         	goto	u8660
  2947  00091C  EF90  F004         	goto	u8661
  2948  000920                     u8661:
  2949  000920  EFA7  F004         	goto	l8015
  2950  000924                     u8660:
  2951  000924                     
  2952                           ; BSR set to: 0
  2953                           ;doprnt.c: 858: fval = -fval;
  2954  000924  C0C6  F006         	movff	sprintf@fval,___flneg@f1
  2955  000928  C0C7  F007         	movff	sprintf@fval+1,___flneg@f1+1
  2956  00092C  C0C8  F008         	movff	sprintf@fval+2,___flneg@f1+2
  2957  000930  C0C9  F009         	movff	sprintf@fval+3,___flneg@f1+3
  2958  000934  ECD6  F02A         	call	___flneg	;wreg free
  2959  000938  C006  F0C6         	movff	?___flneg,sprintf@fval
  2960  00093C  C007  F0C7         	movff	?___flneg+1,sprintf@fval+1
  2961  000940  C008  F0C8         	movff	?___flneg+2,sprintf@fval+2
  2962  000944  C009  F0C9         	movff	?___flneg+3,sprintf@fval+3
  2963  000948                     
  2964                           ;doprnt.c: 859: flag |= 0x03;
  2965  000948  0E03               	movlw	3
  2966  00094A  0100               	movlb	0	; () banked
  2967  00094C  13C2               	iorwf	sprintf@flag& (0+255),f,b
  2968  00094E                     l8015:
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  2972  00094E  0E00               	movlw	0
  2973  000950  6FC1               	movwf	(sprintf@eexp+1)& (0+255),b
  2974  000952  0E00               	movlw	0
  2975  000954  6FC0               	movwf	sprintf@eexp& (0+255),b
  2976  000956                     
  2977                           ; BSR set to: 0
  2978                           ;doprnt.c: 862: if( fval!=0) {
  2979  000956  C0C6  F006         	movff	sprintf@fval,___fleq@ff1
  2980  00095A  C0C7  F007         	movff	sprintf@fval+1,___fleq@ff1+1
  2981  00095E  C0C8  F008         	movff	sprintf@fval+2,___fleq@ff1+2
  2982  000962  C0C9  F009         	movff	sprintf@fval+3,___fleq@ff1+3
  2983  000966  0E00               	movlw	0
  2984  000968  6E0A               	movwf	___fleq@ff2^0,c
  2985  00096A  0E00               	movlw	0
  2986  00096C  6E0B               	movwf	(___fleq@ff2+1)^0,c
  2987  00096E  0E00               	movlw	0
  2988  000970  6E0C               	movwf	(___fleq@ff2+2)^0,c
  2989  000972  0E00               	movlw	0
  2990  000974  6E0D               	movwf	(___fleq@ff2+3)^0,c
  2991  000976  EC2C  F028         	call	___fleq	;wreg free
  2992  00097A  B0D8               	btfsc	status,0,c
  2993  00097C  EFC2  F004         	goto	u8671
  2994  000980  EFC4  F004         	goto	u8670
  2995  000984                     u8671:
  2996  000984  EF57  F005         	goto	l8043
  2997  000988                     u8670:
  2998  000988                     
  2999                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  3000  000988  0100               	movlb	0	; () banked
  3001  00098A  35C8               	rlcf	(sprintf@fval+2)& (0+255),w,b
  3002  00098C  35C9               	rlcf	(sprintf@fval+3)& (0+255),w,b
  3003  00098E  0F82               	addlw	130
  3004  000990  6FC0               	movwf	sprintf@eexp& (0+255),b
  3005  000992  6BC1               	clrf	(sprintf@eexp+1)& (0+255),b
  3006  000994  0EFF               	movlw	255
  3007  000996  23C1               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  3008  000998                     
  3009                           ; BSR set to: 0
  3010                           ;doprnt.c: 864: eexp--;
  3011  000998  07C0               	decf	sprintf@eexp& (0+255),f,b
  3012  00099A  A0D8               	btfss	status,0,c
  3013  00099C  07C1               	decf	(sprintf@eexp+1)& (0+255),f,b
  3014  00099E                     
  3015                           ; BSR set to: 0
  3016                           ;doprnt.c: 865: eexp *= 3;
  3017  00099E  C0C0  F006         	movff	sprintf@eexp,___wmul@multiplier
  3018  0009A2  C0C1  F007         	movff	sprintf@eexp+1,___wmul@multiplier+1
  3019  0009A6  0E00               	movlw	0
  3020  0009A8  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  3021  0009AA  0E03               	movlw	3
  3022  0009AC  6E08               	movwf	___wmul@multiplicand^0,c
  3023  0009AE  EC39  F02B         	call	___wmul	;wreg free
  3024  0009B2  C006  F0C0         	movff	?___wmul,sprintf@eexp
  3025  0009B6  C007  F0C1         	movff	?___wmul+1,sprintf@eexp+1
  3026  0009BA                     
  3027                           ;doprnt.c: 866: eexp /= 10;
  3028  0009BA  C0C0  F00C         	movff	sprintf@eexp,___awdiv@dividend
  3029  0009BE  C0C1  F00D         	movff	sprintf@eexp+1,___awdiv@dividend+1
  3030  0009C2  0E00               	movlw	0
  3031  0009C4  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  3032  0009C6  0E0A               	movlw	10
  3033  0009C8  6E0E               	movwf	___awdiv@divisor^0,c
  3034  0009CA  EC16  F027         	call	___awdiv	;wreg free
  3035  0009CE  C00C  F0C0         	movff	?___awdiv,sprintf@eexp
  3036  0009D2  C00D  F0C1         	movff	?___awdiv+1,sprintf@eexp+1
  3037  0009D6                     
  3038                           ;doprnt.c: 867: if(eexp < 0)
  3039  0009D6  0100               	movlb	0	; () banked
  3040  0009D8  BFC1               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  3041  0009DA  EFF3  F004         	goto	u8680
  3042  0009DE  EFF1  F004         	goto	u8681
  3043  0009E2                     u8681:
  3044  0009E2  EFF6  F004         	goto	l8031
  3045  0009E6                     u8680:
  3046  0009E6                     
  3047                           ; BSR set to: 0
  3048                           ;doprnt.c: 868: eexp--;
  3049  0009E6  07C0               	decf	sprintf@eexp& (0+255),f,b
  3050  0009E8  A0D8               	btfss	status,0,c
  3051  0009EA  07C1               	decf	(sprintf@eexp+1)& (0+255),f,b
  3052  0009EC                     l8031:
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  3056  0009EC  51C0               	movf	sprintf@eexp& (0+255),w,b
  3057  0009EE  0800               	sublw	0
  3058  0009F0  EC2E  F014         	call	_scale
  3059  0009F4  C03A  F0B8         	movff	?_scale,sprintf@tmpval
  3060  0009F8  C03B  F0B9         	movff	?_scale+1,sprintf@tmpval+1
  3061  0009FC  C03C  F0BA         	movff	?_scale+2,sprintf@tmpval+2
  3062  000A00  C03D  F0BB         	movff	?_scale+3,sprintf@tmpval+3
  3063  000A04                     
  3064                           ;doprnt.c: 873: tmpval.integ *= fval;
  3065  000A04  C0B8  F021         	movff	sprintf@tmpval,___flmul@b
  3066  000A08  C0B9  F022         	movff	sprintf@tmpval+1,___flmul@b+1
  3067  000A0C  C0BA  F023         	movff	sprintf@tmpval+2,___flmul@b+2
  3068  000A10  C0BB  F024         	movff	sprintf@tmpval+3,___flmul@b+3
  3069  000A14  C0C6  F025         	movff	sprintf@fval,___flmul@a
  3070  000A18  C0C7  F026         	movff	sprintf@fval+1,___flmul@a+1
  3071  000A1C  C0C8  F027         	movff	sprintf@fval+2,___flmul@a+2
  3072  000A20  C0C9  F028         	movff	sprintf@fval+3,___flmul@a+3
  3073  000A24  EC19  F012         	call	___flmul	;wreg free
  3074  000A28  C021  F0B8         	movff	?___flmul,sprintf@tmpval
  3075  000A2C  C022  F0B9         	movff	?___flmul+1,sprintf@tmpval+1
  3076  000A30  C023  F0BA         	movff	?___flmul+2,sprintf@tmpval+2
  3077  000A34  C024  F0BB         	movff	?___flmul+3,sprintf@tmpval+3
  3078  000A38                     
  3079                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  3080  000A38  C0B8  F021         	movff	sprintf@tmpval,___flge@ff1
  3081  000A3C  C0B9  F022         	movff	sprintf@tmpval+1,___flge@ff1+1
  3082  000A40  C0BA  F023         	movff	sprintf@tmpval+2,___flge@ff1+2
  3083  000A44  C0BB  F024         	movff	sprintf@tmpval+3,___flge@ff1+3
  3084  000A48  0E00               	movlw	0
  3085  000A4A  6E25               	movwf	___flge@ff2^0,c
  3086  000A4C  0E00               	movlw	0
  3087  000A4E  6E26               	movwf	(___flge@ff2+1)^0,c
  3088  000A50  0E80               	movlw	128
  3089  000A52  6E27               	movwf	(___flge@ff2+2)^0,c
  3090  000A54  0E3F               	movlw	63
  3091  000A56  6E28               	movwf	(___flge@ff2+3)^0,c
  3092  000A58  EC3C  F025         	call	___flge	;wreg free
  3093  000A5C  B0D8               	btfsc	status,0,c
  3094  000A5E  EF33  F005         	goto	u8691
  3095  000A62  EF35  F005         	goto	u8690
  3096  000A66                     u8691:
  3097  000A66  EF3B  F005         	goto	l8039
  3098  000A6A                     u8690:
  3099  000A6A                     
  3100                           ;doprnt.c: 875: eexp--;
  3101  000A6A  0100               	movlb	0	; () banked
  3102  000A6C  07C0               	decf	sprintf@eexp& (0+255),f,b
  3103  000A6E  A0D8               	btfss	status,0,c
  3104  000A70  07C1               	decf	(sprintf@eexp+1)& (0+255),f,b
  3105  000A72  EF57  F005         	goto	l8043
  3106  000A76                     l8039:
  3107                           
  3108                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  3109  000A76  C0B8  F021         	movff	sprintf@tmpval,___flge@ff1
  3110  000A7A  C0B9  F022         	movff	sprintf@tmpval+1,___flge@ff1+1
  3111  000A7E  C0BA  F023         	movff	sprintf@tmpval+2,___flge@ff1+2
  3112  000A82  C0BB  F024         	movff	sprintf@tmpval+3,___flge@ff1+3
  3113  000A86  0E00               	movlw	0
  3114  000A88  6E25               	movwf	___flge@ff2^0,c
  3115  000A8A  0E00               	movlw	0
  3116  000A8C  6E26               	movwf	(___flge@ff2+1)^0,c
  3117  000A8E  0E20               	movlw	32
  3118  000A90  6E27               	movwf	(___flge@ff2+2)^0,c
  3119  000A92  0E41               	movlw	65
  3120  000A94  6E28               	movwf	(___flge@ff2+3)^0,c
  3121  000A96  EC3C  F025         	call	___flge	;wreg free
  3122  000A9A  A0D8               	btfss	status,0,c
  3123  000A9C  EF52  F005         	goto	u8701
  3124  000AA0  EF54  F005         	goto	u8700
  3125  000AA4                     u8701:
  3126  000AA4  EF57  F005         	goto	l8043
  3127  000AA8                     u8700:
  3128  000AA8                     
  3129                           ;doprnt.c: 877: eexp++;
  3130  000AA8  0100               	movlb	0	; () banked
  3131  000AAA  4BC0               	infsnz	sprintf@eexp& (0+255),f,b
  3132  000AAC  2BC1               	incf	(sprintf@eexp+1)& (0+255),f,b
  3133  000AAE                     l8043:
  3134                           
  3135                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  3136  000AAE  0100               	movlb	0	; () banked
  3137  000AB0  BFCB               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3138  000AB2  EF66  F005         	goto	u8710
  3139  000AB6  51CB               	movf	(sprintf@prec+1)& (0+255),w,b
  3140  000AB8  E107               	bnz	u8711
  3141  000ABA  0E0D               	movlw	13
  3142  000ABC  5DCA               	subwf	sprintf@prec& (0+255),w,b
  3143  000ABE  B0D8               	btfsc	status,0,c
  3144  000AC0  EF64  F005         	goto	u8711
  3145  000AC4  EF66  F005         	goto	u8710
  3146  000AC8                     u8711:
  3147  000AC8  EF83  F005         	goto	l8047
  3148  000ACC                     u8710:
  3149  000ACC                     
  3150                           ; BSR set to: 0
  3151                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  3152  000ACC  C0C6  F047         	movff	sprintf@fval,___fladd@b
  3153  000AD0  C0C7  F048         	movff	sprintf@fval+1,___fladd@b+1
  3154  000AD4  C0C8  F049         	movff	sprintf@fval+2,___fladd@b+2
  3155  000AD8  C0C9  F04A         	movff	sprintf@fval+3,___fladd@b+3
  3156  000ADC  51CA               	movf	sprintf@prec& (0+255),w,b
  3157  000ADE  EC01  F018         	call	_fround
  3158  000AE2  C03A  F04B         	movff	?_fround,___fladd@a
  3159  000AE6  C03B  F04C         	movff	?_fround+1,___fladd@a+1
  3160  000AEA  C03C  F04D         	movff	?_fround+2,___fladd@a+2
  3161  000AEE  C03D  F04E         	movff	?_fround+3,___fladd@a+3
  3162  000AF2  ECB9  F00F         	call	___fladd	;wreg free
  3163  000AF6  C047  F0C6         	movff	?___fladd,sprintf@fval
  3164  000AFA  C048  F0C7         	movff	?___fladd+1,sprintf@fval+1
  3165  000AFE  C049  F0C8         	movff	?___fladd+2,sprintf@fval+2
  3166  000B02  C04A  F0C9         	movff	?___fladd+3,sprintf@fval+3
  3167  000B06                     l8047:
  3168                           
  3169                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3170  000B06  0100               	movlb	0	; () banked
  3171  000B08  BFC1               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  3172  000B0A  EF92  F005         	goto	u8720
  3173  000B0E  51C1               	movf	(sprintf@eexp+1)& (0+255),w,b
  3174  000B10  E107               	bnz	u8721
  3175  000B12  0E0A               	movlw	10
  3176  000B14  5DC0               	subwf	sprintf@eexp& (0+255),w,b
  3177  000B16  B0D8               	btfsc	status,0,c
  3178  000B18  EF90  F005         	goto	u8721
  3179  000B1C  EF92  F005         	goto	u8720
  3180  000B20                     u8721:
  3181  000B20  EFCF  F005         	goto	l8055
  3182  000B24                     u8720:
  3183  000B24                     
  3184                           ; BSR set to: 0
  3185  000B24  C0C6  F006         	movff	sprintf@fval,___fleq@ff1
  3186  000B28  C0C7  F007         	movff	sprintf@fval+1,___fleq@ff1+1
  3187  000B2C  C0C8  F008         	movff	sprintf@fval+2,___fleq@ff1+2
  3188  000B30  C0C9  F009         	movff	sprintf@fval+3,___fleq@ff1+3
  3189  000B34  0E00               	movlw	0
  3190  000B36  6E0A               	movwf	___fleq@ff2^0,c
  3191  000B38  0E00               	movlw	0
  3192  000B3A  6E0B               	movwf	(___fleq@ff2+1)^0,c
  3193  000B3C  0E00               	movlw	0
  3194  000B3E  6E0C               	movwf	(___fleq@ff2+2)^0,c
  3195  000B40  0E00               	movlw	0
  3196  000B42  6E0D               	movwf	(___fleq@ff2+3)^0,c
  3197  000B44  EC2C  F028         	call	___fleq	;wreg free
  3198  000B48  B0D8               	btfsc	status,0,c
  3199  000B4A  EFA9  F005         	goto	u8731
  3200  000B4E  EFAB  F005         	goto	u8730
  3201  000B52                     u8731:
  3202  000B52  EF24  F006         	goto	l8069
  3203  000B56                     u8730:
  3204  000B56  C0C6  F053         	movff	sprintf@fval,___fltol@f1
  3205  000B5A  C0C7  F054         	movff	sprintf@fval+1,___fltol@f1+1
  3206  000B5E  C0C8  F055         	movff	sprintf@fval+2,___fltol@f1+2
  3207  000B62  C0C9  F056         	movff	sprintf@fval+3,___fltol@f1+3
  3208  000B66  EC36  F024         	call	___fltol	;wreg free
  3209  000B6A  5053               	movf	?___fltol^0,w,c
  3210  000B6C  1054               	iorwf	(?___fltol+1)^0,w,c
  3211  000B6E  1055               	iorwf	(?___fltol+2)^0,w,c
  3212  000B70  1056               	iorwf	(?___fltol+3)^0,w,c
  3213  000B72  A4D8               	btfss	status,2,c
  3214  000B74  EFBE  F005         	goto	u8741
  3215  000B78  EFC0  F005         	goto	u8740
  3216  000B7C                     u8741:
  3217  000B7C  EF24  F006         	goto	l8069
  3218  000B80                     u8740:
  3219  000B80  0100               	movlb	0	; () banked
  3220  000B82  BFC1               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  3221  000B84  EFCD  F005         	goto	u8751
  3222  000B88  51C1               	movf	(sprintf@eexp+1)& (0+255),w,b
  3223  000B8A  E109               	bnz	u8750
  3224  000B8C  0E02               	movlw	2
  3225  000B8E  5DC0               	subwf	sprintf@eexp& (0+255),w,b
  3226  000B90  A0D8               	btfss	status,0,c
  3227  000B92  EFCD  F005         	goto	u8751
  3228  000B96  EFCF  F005         	goto	u8750
  3229  000B9A                     u8751:
  3230  000B9A  EF24  F006         	goto	l8069
  3231  000B9E                     u8750:
  3232  000B9E                     l8055:
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  3236  000B9E  C0B8  F021         	movff	sprintf@tmpval,___flge@ff1
  3237  000BA2  C0B9  F022         	movff	sprintf@tmpval+1,___flge@ff1+1
  3238  000BA6  C0BA  F023         	movff	sprintf@tmpval+2,___flge@ff1+2
  3239  000BAA  C0BB  F024         	movff	sprintf@tmpval+3,___flge@ff1+3
  3240  000BAE  0E5F               	movlw	95
  3241  000BB0  6E25               	movwf	___flge@ff2^0,c
  3242  000BB2  0E70               	movlw	112
  3243  000BB4  6E26               	movwf	(___flge@ff2+1)^0,c
  3244  000BB6  0E89               	movlw	137
  3245  000BB8  6E27               	movwf	(___flge@ff2+2)^0,c
  3246  000BBA  0E40               	movlw	64
  3247  000BBC  6E28               	movwf	(___flge@ff2+3)^0,c
  3248  000BBE  EC3C  F025         	call	___flge	;wreg free
  3249  000BC2  B0D8               	btfsc	status,0,c
  3250  000BC4  EFE6  F005         	goto	u8761
  3251  000BC8  EFE8  F005         	goto	u8760
  3252  000BCC                     u8761:
  3253  000BCC  EFEF  F005         	goto	l8059
  3254  000BD0                     u8760:
  3255  000BD0                     
  3256                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3257  000BD0  0100               	movlb	0	; () banked
  3258  000BD2  0EF7               	movlw	247
  3259  000BD4  27C0               	addwf	sprintf@eexp& (0+255),f,b
  3260  000BD6  0EFF               	movlw	255
  3261  000BD8  23C1               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  3262                           
  3263                           ;doprnt.c: 1148: }else{
  3264  000BDA  EFF4  F005         	goto	l8061
  3265  000BDE                     l8059:
  3266                           
  3267                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3268  000BDE  0100               	movlb	0	; () banked
  3269  000BE0  0EF8               	movlw	248
  3270  000BE2  27C0               	addwf	sprintf@eexp& (0+255),f,b
  3271  000BE4  0EFF               	movlw	255
  3272  000BE6  23C1               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  3273  000BE8                     l8061:
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3277  000BE8  51C0               	movf	sprintf@eexp& (0+255),w,b
  3278  000BEA  EC2E  F014         	call	_scale
  3279  000BEE  C03A  F0B8         	movff	?_scale,sprintf@tmpval
  3280  000BF2  C03B  F0B9         	movff	?_scale+1,sprintf@tmpval+1
  3281  000BF6  C03C  F0BA         	movff	?_scale+2,sprintf@tmpval+2
  3282  000BFA  C03D  F0BB         	movff	?_scale+3,sprintf@tmpval+3
  3283  000BFE  C0C6  F006         	movff	sprintf@fval,__div_to_l_@f1
  3284  000C02  C0C7  F007         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3285  000C06  C0C8  F008         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3286  000C0A  C0C9  F009         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3287  000C0E  C0B8  F00A         	movff	sprintf@tmpval,__div_to_l_@f2
  3288  000C12  C0B9  F00B         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3289  000C16  C0BA  F00C         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3290  000C1A  C0BB  F00D         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3291  000C1E  EC96  F01F         	call	__div_to_l_	;wreg free
  3292  000C22  C006  F0BC         	movff	?__div_to_l_,sprintf@val
  3293  000C26  C007  F0BD         	movff	?__div_to_l_+1,sprintf@val+1
  3294  000C2A  C008  F0BE         	movff	?__div_to_l_+2,sprintf@val+2
  3295  000C2E  C009  F0BF         	movff	?__div_to_l_+3,sprintf@val+3
  3296  000C32                     
  3297                           ;doprnt.c: 1155: fval = 0.0;
  3298  000C32  0E00               	movlw	0
  3299  000C34  0100               	movlb	0	; () banked
  3300  000C36  6FC6               	movwf	sprintf@fval& (0+255),b
  3301  000C38  0E00               	movlw	0
  3302  000C3A  6FC7               	movwf	(sprintf@fval+1)& (0+255),b
  3303  000C3C  0E00               	movlw	0
  3304  000C3E  6FC8               	movwf	(sprintf@fval+2)& (0+255),b
  3305  000C40  0E00               	movlw	0
  3306  000C42  6FC9               	movwf	(sprintf@fval+3)& (0+255),b
  3307                           
  3308                           ;doprnt.c: 1156: } else {
  3309  000C44  EF60  F006         	goto	l8073
  3310  000C48                     l8069:
  3311                           
  3312                           ;doprnt.c: 1157: val = (unsigned long)fval;
  3313  000C48  C0C6  F053         	movff	sprintf@fval,___fltol@f1
  3314  000C4C  C0C7  F054         	movff	sprintf@fval+1,___fltol@f1+1
  3315  000C50  C0C8  F055         	movff	sprintf@fval+2,___fltol@f1+2
  3316  000C54  C0C9  F056         	movff	sprintf@fval+3,___fltol@f1+3
  3317  000C58  EC36  F024         	call	___fltol	;wreg free
  3318  000C5C  C053  F0BC         	movff	?___fltol,sprintf@val
  3319  000C60  C054  F0BD         	movff	?___fltol+1,sprintf@val+1
  3320  000C64  C055  F0BE         	movff	?___fltol+2,sprintf@val+2
  3321  000C68  C056  F0BF         	movff	?___fltol+3,sprintf@val+3
  3322                           
  3323                           ;doprnt.c: 1158: fval -= (double)val;
  3324  000C6C  C0C6  F057         	movff	sprintf@fval,___flsub@b
  3325  000C70  C0C7  F058         	movff	sprintf@fval+1,___flsub@b+1
  3326  000C74  C0C8  F059         	movff	sprintf@fval+2,___flsub@b+2
  3327  000C78  C0C9  F05A         	movff	sprintf@fval+3,___flsub@b+3
  3328  000C7C  C0BC  F013         	movff	sprintf@val,___xxtofl@val
  3329  000C80  C0BD  F014         	movff	sprintf@val+1,___xxtofl@val+1
  3330  000C84  C0BE  F015         	movff	sprintf@val+2,___xxtofl@val+2
  3331  000C88  C0BF  F016         	movff	sprintf@val+3,___xxtofl@val+3
  3332  000C8C  0E00               	movlw	0
  3333  000C8E  EC42  F01D         	call	___xxtofl
  3334  000C92  C013  F05B         	movff	?___xxtofl,___flsub@a
  3335  000C96  C014  F05C         	movff	?___xxtofl+1,___flsub@a+1
  3336  000C9A  C015  F05D         	movff	?___xxtofl+2,___flsub@a+2
  3337  000C9E  C016  F05E         	movff	?___xxtofl+3,___flsub@a+3
  3338  000CA2  ECB3  F02A         	call	___flsub	;wreg free
  3339  000CA6  C057  F0C6         	movff	?___flsub,sprintf@fval
  3340  000CAA  C058  F0C7         	movff	?___flsub+1,sprintf@fval+1
  3341  000CAE  C059  F0C8         	movff	?___flsub+2,sprintf@fval+2
  3342  000CB2  C05A  F0C9         	movff	?___flsub+3,sprintf@fval+3
  3343  000CB6                     
  3344                           ;doprnt.c: 1159: eexp = 0;
  3345  000CB6  0E00               	movlw	0
  3346  000CB8  0100               	movlb	0	; () banked
  3347  000CBA  6FC1               	movwf	(sprintf@eexp+1)& (0+255),b
  3348  000CBC  0E00               	movlw	0
  3349  000CBE  6FC0               	movwf	sprintf@eexp& (0+255),b
  3350  000CC0                     l8073:
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  3354  000CC0  0E01               	movlw	1
  3355  000CC2  6FCC               	movwf	sprintf@c& (0+255),b
  3356  000CC4                     l8079:
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;doprnt.c: 1163: if(val < dpowers[c])
  3360  000CC4  51CC               	movf	sprintf@c& (0+255),w,b
  3361  000CC6  0D04               	mullw	4
  3362  000CC8  0E69               	movlw	low _dpowers
  3363  000CCA  24F3               	addwf	243,w,c
  3364  000CCC  6EF6               	movwf	tblptrl,c
  3365  000CCE  0E06               	movlw	high _dpowers
  3366  000CD0  20F4               	addwfc	244,w,c
  3367  000CD2  6EF7               	movwf	tblptrh,c
  3368  000CD4                     	if	0	;There are less than 3 active tblptr bytes
  3369  000CD4                     	endif
  3370  000CD4  0009               	tblrd		*+
  3371  000CD6  50F5               	movf	tablat,w,c
  3372  000CD8  5DBC               	subwf	sprintf@val& (0+255),w,b
  3373  000CDA  0009               	tblrd		*+
  3374  000CDC  50F5               	movf	tablat,w,c
  3375  000CDE  59BD               	subwfb	(sprintf@val+1)& (0+255),w,b
  3376  000CE0  0009               	tblrd		*+
  3377  000CE2  50F5               	movf	tablat,w,c
  3378  000CE4  59BE               	subwfb	(sprintf@val+2)& (0+255),w,b
  3379  000CE6  0009               	tblrd		*+
  3380  000CE8  50F5               	movf	tablat,w,c
  3381  000CEA  59BF               	subwfb	(sprintf@val+3)& (0+255),w,b
  3382  000CEC  B0D8               	btfsc	status,0,c
  3383  000CEE  EF7B  F006         	goto	u8771
  3384  000CF2  EF7D  F006         	goto	u8770
  3385  000CF6                     u8771:
  3386  000CF6  EF7F  F006         	goto	l8083
  3387  000CFA                     u8770:
  3388  000CFA  EF89  F006         	goto	l8087
  3389  000CFE                     l8083:
  3390                           
  3391                           ; BSR set to: 0
  3392  000CFE  2BCC               	incf	sprintf@c& (0+255),f,b
  3393  000D00                     
  3394                           ; BSR set to: 0
  3395  000D00  0E0A               	movlw	10
  3396  000D02  19CC               	xorwf	sprintf@c& (0+255),w,b
  3397  000D04  A4D8               	btfss	status,2,c
  3398  000D06  EF87  F006         	goto	u8781
  3399  000D0A  EF89  F006         	goto	u8780
  3400  000D0E                     u8781:
  3401  000D0E  EF62  F006         	goto	l8079
  3402  000D12                     u8780:
  3403  000D12                     l8087:
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;doprnt.c: 1168: width -= prec + c + eexp;
  3407  000D12  51CC               	movf	sprintf@c& (0+255),w,b
  3408  000D14  25CA               	addwf	sprintf@prec& (0+255),w,b
  3409  000D16  6E6B               	movwf	??_sprintf^0,c
  3410  000D18  0E00               	movlw	0
  3411  000D1A  21CB               	addwfc	(sprintf@prec+1)& (0+255),w,b
  3412  000D1C  6E6C               	movwf	(??_sprintf+1)^0,c
  3413  000D1E  51C0               	movf	sprintf@eexp& (0+255),w,b
  3414  000D20  266B               	addwf	??_sprintf^0,f,c
  3415  000D22  51C1               	movf	(sprintf@eexp+1)& (0+255),w,b
  3416  000D24  226C               	addwfc	(??_sprintf+1)^0,f,c
  3417  000D26  506B               	movf	??_sprintf^0,w,c
  3418  000D28  5FC4               	subwf	sprintf@width& (0+255),f,b
  3419  000D2A  506C               	movf	(??_sprintf+1)^0,w,c
  3420  000D2C  5BC5               	subwfb	(sprintf@width+1)& (0+255),f,b
  3421                           
  3422                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
  3423  000D2E  51CA               	movf	sprintf@prec& (0+255),w,b
  3424  000D30  11CB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3425  000D32  B4D8               	btfsc	status,2,c
  3426  000D34  EF9E  F006         	goto	u8791
  3427  000D38  EFA0  F006         	goto	u8790
  3428  000D3C                     u8791:
  3429  000D3C  EFA3  F006         	goto	l8091
  3430  000D40                     u8790:
  3431  000D40                     
  3432                           ; BSR set to: 0
  3433                           ;doprnt.c: 1174: width--;
  3434  000D40  07C4               	decf	sprintf@width& (0+255),f,b
  3435  000D42  A0D8               	btfss	status,0,c
  3436  000D44  07C5               	decf	(sprintf@width+1)& (0+255),f,b
  3437  000D46                     l8091:
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;doprnt.c: 1175: if(flag & 0x03)
  3441  000D46  0E03               	movlw	3
  3442  000D48  15C2               	andwf	sprintf@flag& (0+255),w,b
  3443  000D4A  6E6B               	movwf	??_sprintf^0,c
  3444  000D4C  0E00               	movlw	0
  3445  000D4E  15C3               	andwf	(sprintf@flag+1)& (0+255),w,b
  3446  000D50  6E6C               	movwf	(??_sprintf+1)^0,c
  3447  000D52  506B               	movf	??_sprintf^0,w,c
  3448  000D54  106C               	iorwf	(??_sprintf+1)^0,w,c
  3449  000D56  B4D8               	btfsc	status,2,c
  3450  000D58  EFB0  F006         	goto	u8801
  3451  000D5C  EFB2  F006         	goto	u8800
  3452  000D60                     u8801:
  3453  000D60  EFB5  F006         	goto	l8095
  3454  000D64                     u8800:
  3455  000D64                     
  3456                           ; BSR set to: 0
  3457                           ;doprnt.c: 1176: width--;
  3458  000D64  07C4               	decf	sprintf@width& (0+255),f,b
  3459  000D66  A0D8               	btfss	status,0,c
  3460  000D68  07C5               	decf	(sprintf@width+1)& (0+255),f,b
  3461  000D6A                     l8095:
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;doprnt.c: 1179: if(flag & 0x04) {
  3465  000D6A  A5C2               	btfss	sprintf@flag& (0+255),2,b
  3466  000D6C  EFBA  F006         	goto	u8811
  3467  000D70  EFBC  F006         	goto	u8810
  3468  000D74                     u8811:
  3469  000D74  EFFA  F006         	goto	l8117
  3470  000D78                     u8810:
  3471  000D78                     
  3472                           ; BSR set to: 0
  3473                           ;doprnt.c: 1183: if(flag & 0x03)
  3474  000D78  0E03               	movlw	3
  3475  000D7A  15C2               	andwf	sprintf@flag& (0+255),w,b
  3476  000D7C  6E6B               	movwf	??_sprintf^0,c
  3477  000D7E  0E00               	movlw	0
  3478  000D80  15C3               	andwf	(sprintf@flag+1)& (0+255),w,b
  3479  000D82  6E6C               	movwf	(??_sprintf+1)^0,c
  3480  000D84  506B               	movf	??_sprintf^0,w,c
  3481  000D86  106C               	iorwf	(??_sprintf+1)^0,w,c
  3482  000D88  B4D8               	btfsc	status,2,c
  3483  000D8A  EFC9  F006         	goto	u8821
  3484  000D8E  EFCB  F006         	goto	u8820
  3485  000D92                     u8821:
  3486  000D92  EFE0  F006         	goto	l8109
  3487  000D96                     u8820:
  3488  000D96                     
  3489                           ; BSR set to: 0
  3490                           ;doprnt.c: 1185: ((*sp++ = ('-')));
  3491  000D96  C05F  FFD9         	movff	sprintf@sp,fsr2l
  3492  000D9A  C060  FFDA         	movff	sprintf@sp+1,fsr2h
  3493  000D9E  0E2D               	movlw	45
  3494  000DA0  6EDF               	movwf	indf2,c
  3495  000DA2                     
  3496                           ; BSR set to: 0
  3497  000DA2  4A5F               	infsnz	sprintf@sp^0,f,c
  3498  000DA4  2A60               	incf	(sprintf@sp+1)^0,f,c
  3499  000DA6  EFE0  F006         	goto	l8109
  3500  000DAA                     l8103:
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;doprnt.c: 1195: ((*sp++ = ('0')));
  3504  000DAA  C05F  FFD9         	movff	sprintf@sp,fsr2l
  3505  000DAE  C060  FFDA         	movff	sprintf@sp+1,fsr2h
  3506  000DB2  0E30               	movlw	48
  3507  000DB4  6EDF               	movwf	indf2,c
  3508  000DB6                     
  3509                           ; BSR set to: 0
  3510  000DB6  4A5F               	infsnz	sprintf@sp^0,f,c
  3511  000DB8  2A60               	incf	(sprintf@sp+1)^0,f,c
  3512  000DBA                     
  3513                           ; BSR set to: 0
  3514                           ;doprnt.c: 1196: width--;
  3515  000DBA  07C4               	decf	sprintf@width& (0+255),f,b
  3516  000DBC  A0D8               	btfss	status,0,c
  3517  000DBE  07C5               	decf	(sprintf@width+1)& (0+255),f,b
  3518  000DC0                     l8109:
  3519                           
  3520                           ; BSR set to: 0
  3521  000DC0  BFC5               	btfsc	(sprintf@width+1)& (0+255),7,b
  3522  000DC2  EFED  F006         	goto	u8830
  3523  000DC6  51C5               	movf	(sprintf@width+1)& (0+255),w,b
  3524  000DC8  E106               	bnz	u8831
  3525  000DCA  05C4               	decf	sprintf@width& (0+255),w,b
  3526  000DCC  B0D8               	btfsc	status,0,c
  3527  000DCE  EFEB  F006         	goto	u8831
  3528  000DD2  EFED  F006         	goto	u8830
  3529  000DD6                     u8831:
  3530  000DD6  EFD5  F006         	goto	l8103
  3531  000DDA                     u8830:
  3532  000DDA  EF6A  F007         	goto	l8133
  3533  000DDE                     l8111:
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;doprnt.c: 1207: ((*sp++ = (' ')));
  3537  000DDE  C05F  FFD9         	movff	sprintf@sp,fsr2l
  3538  000DE2  C060  FFDA         	movff	sprintf@sp+1,fsr2h
  3539  000DE6  0E20               	movlw	32
  3540  000DE8  6EDF               	movwf	indf2,c
  3541  000DEA                     
  3542                           ; BSR set to: 0
  3543  000DEA  4A5F               	infsnz	sprintf@sp^0,f,c
  3544  000DEC  2A60               	incf	(sprintf@sp+1)^0,f,c
  3545  000DEE                     
  3546                           ; BSR set to: 0
  3547                           ;doprnt.c: 1208: width--;
  3548  000DEE  07C4               	decf	sprintf@width& (0+255),f,b
  3549  000DF0  A0D8               	btfss	status,0,c
  3550  000DF2  07C5               	decf	(sprintf@width+1)& (0+255),f,b
  3551  000DF4                     l8117:
  3552                           
  3553                           ; BSR set to: 0
  3554  000DF4  BFC5               	btfsc	(sprintf@width+1)& (0+255),7,b
  3555  000DF6  EF07  F007         	goto	u8840
  3556  000DFA  51C5               	movf	(sprintf@width+1)& (0+255),w,b
  3557  000DFC  E106               	bnz	u8841
  3558  000DFE  05C4               	decf	sprintf@width& (0+255),w,b
  3559  000E00  B0D8               	btfsc	status,0,c
  3560  000E02  EF05  F007         	goto	u8841
  3561  000E06  EF07  F007         	goto	u8840
  3562  000E0A                     u8841:
  3563  000E0A  EFEF  F006         	goto	l8111
  3564  000E0E                     u8840:
  3565  000E0E                     
  3566                           ; BSR set to: 0
  3567                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
  3568  000E0E  0E03               	movlw	3
  3569  000E10  15C2               	andwf	sprintf@flag& (0+255),w,b
  3570  000E12  6E6B               	movwf	??_sprintf^0,c
  3571  000E14  0E00               	movlw	0
  3572  000E16  15C3               	andwf	(sprintf@flag+1)& (0+255),w,b
  3573  000E18  6E6C               	movwf	(??_sprintf+1)^0,c
  3574  000E1A  506B               	movf	??_sprintf^0,w,c
  3575  000E1C  106C               	iorwf	(??_sprintf+1)^0,w,c
  3576  000E1E  B4D8               	btfsc	status,2,c
  3577  000E20  EF14  F007         	goto	u8851
  3578  000E24  EF16  F007         	goto	u8850
  3579  000E28                     u8851:
  3580  000E28  EF6A  F007         	goto	l8133
  3581  000E2C                     u8850:
  3582  000E2C                     
  3583                           ; BSR set to: 0
  3584                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  3585  000E2C  C05F  FFD9         	movff	sprintf@sp,fsr2l
  3586  000E30  C060  FFDA         	movff	sprintf@sp+1,fsr2h
  3587  000E34  0E2D               	movlw	45
  3588  000E36  6EDF               	movwf	indf2,c
  3589  000E38                     l8123:
  3590                           
  3591                           ; BSR set to: 0
  3592  000E38  4A5F               	infsnz	sprintf@sp^0,f,c
  3593  000E3A  2A60               	incf	(sprintf@sp+1)^0,f,c
  3594  000E3C  EF6A  F007         	goto	l8133
  3595  000E40                     l8125:
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  3599  000E40  C0BC  F012         	movff	sprintf@val,___lldiv@dividend
  3600  000E44  C0BD  F013         	movff	sprintf@val+1,___lldiv@dividend+1
  3601  000E48  C0BE  F014         	movff	sprintf@val+2,___lldiv@dividend+2
  3602  000E4C  C0BF  F015         	movff	sprintf@val+3,___lldiv@dividend+3
  3603  000E50  51CC               	movf	sprintf@c& (0+255),w,b
  3604  000E52  0D04               	mullw	4
  3605  000E54  0E69               	movlw	low _dpowers
  3606  000E56  24F3               	addwf	243,w,c
  3607  000E58  6EF6               	movwf	tblptrl,c
  3608  000E5A  0E06               	movlw	high _dpowers
  3609  000E5C  20F4               	addwfc	244,w,c
  3610  000E5E  6EF7               	movwf	tblptrh,c
  3611  000E60                     	if	0	;There are less than 3 active tblptr bytes
  3612  000E60                     	endif
  3613  000E60  0009               	tblrd		*+
  3614  000E62  CFF5 F016          	movff	tablat,___lldiv@divisor
  3615  000E66  0009               	tblrd		*+
  3616  000E68  CFF5 F017          	movff	tablat,___lldiv@divisor+1
  3617  000E6C  0009               	tblrd		*+
  3618  000E6E  CFF5 F018          	movff	tablat,___lldiv@divisor+2
  3619  000E72  000A               	tblrd		*-
  3620  000E74  CFF5 F019          	movff	tablat,___lldiv@divisor+3
  3621  000E78  EC81  F028         	call	___lldiv	;wreg free
  3622  000E7C  C012  F0B8         	movff	?___lldiv,sprintf@tmpval
  3623  000E80  C013  F0B9         	movff	?___lldiv+1,sprintf@tmpval+1
  3624  000E84  C014  F0BA         	movff	?___lldiv+2,sprintf@tmpval+2
  3625  000E88  C015  F0BB         	movff	?___lldiv+3,sprintf@tmpval+3
  3626  000E8C                     
  3627                           ;doprnt.c: 1228: tmpval.vd %= 10;
  3628  000E8C  C0B8  F01F         	movff	sprintf@tmpval,___llmod@dividend
  3629  000E90  C0B9  F020         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3630  000E94  C0BA  F021         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3631  000E98  C0BB  F022         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3632  000E9C  0E0A               	movlw	10
  3633  000E9E  6E23               	movwf	___llmod@divisor^0,c
  3634  000EA0  0E00               	movlw	0
  3635  000EA2  6E24               	movwf	(___llmod@divisor+1)^0,c
  3636  000EA4  0E00               	movlw	0
  3637  000EA6  6E25               	movwf	(___llmod@divisor+2)^0,c
  3638  000EA8  0E00               	movlw	0
  3639  000EAA  6E26               	movwf	(___llmod@divisor+3)^0,c
  3640  000EAC  EC1C  F029         	call	___llmod	;wreg free
  3641  000EB0  C01F  F0B8         	movff	?___llmod,sprintf@tmpval
  3642  000EB4  C020  F0B9         	movff	?___llmod+1,sprintf@tmpval+1
  3643  000EB8  C021  F0BA         	movff	?___llmod+2,sprintf@tmpval+2
  3644  000EBC  C022  F0BB         	movff	?___llmod+3,sprintf@tmpval+3
  3645  000EC0                     
  3646                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  3647  000EC0  0100               	movlb	0	; () banked
  3648  000EC2  51B8               	movf	sprintf@tmpval& (0+255),w,b
  3649  000EC4  0F30               	addlw	48
  3650  000EC6  C05F  FFD9         	movff	sprintf@sp,fsr2l
  3651  000ECA  C060  FFDA         	movff	sprintf@sp+1,fsr2h
  3652  000ECE  6EDF               	movwf	indf2,c
  3653  000ED0  EF1C  F007         	goto	l8123
  3654  000ED4                     l8133:
  3655                           
  3656                           ; BSR set to: 0
  3657  000ED4  07CC               	decf	sprintf@c& (0+255),f,b
  3658  000ED6  29CC               	incf	sprintf@c& (0+255),w,b
  3659  000ED8  A4D8               	btfss	status,2,c
  3660  000EDA  EF71  F007         	goto	u8861
  3661  000EDE  EF73  F007         	goto	u8860
  3662  000EE2                     u8861:
  3663  000EE2  EF20  F007         	goto	l8125
  3664  000EE6                     u8860:
  3665  000EE6  EF80  F007         	goto	l8141
  3666  000EEA                     l8135:
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  3670  000EEA  C05F  FFD9         	movff	sprintf@sp,fsr2l
  3671  000EEE  C060  FFDA         	movff	sprintf@sp+1,fsr2h
  3672  000EF2  0E30               	movlw	48
  3673  000EF4  6EDF               	movwf	indf2,c
  3674  000EF6                     
  3675                           ; BSR set to: 0
  3676  000EF6  4A5F               	infsnz	sprintf@sp^0,f,c
  3677  000EF8  2A60               	incf	(sprintf@sp+1)^0,f,c
  3678  000EFA                     
  3679                           ; BSR set to: 0
  3680                           ;doprnt.c: 1235: eexp--;
  3681  000EFA  07C0               	decf	sprintf@eexp& (0+255),f,b
  3682  000EFC  A0D8               	btfss	status,0,c
  3683  000EFE  07C1               	decf	(sprintf@eexp+1)& (0+255),f,b
  3684  000F00                     l8141:
  3685                           
  3686                           ; BSR set to: 0
  3687  000F00  BFC1               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  3688  000F02  EF8D  F007         	goto	u8870
  3689  000F06  51C1               	movf	(sprintf@eexp+1)& (0+255),w,b
  3690  000F08  E106               	bnz	u8871
  3691  000F0A  05C0               	decf	sprintf@eexp& (0+255),w,b
  3692  000F0C  B0D8               	btfsc	status,0,c
  3693  000F0E  EF8B  F007         	goto	u8871
  3694  000F12  EF8D  F007         	goto	u8870
  3695  000F16                     u8871:
  3696  000F16  EF75  F007         	goto	l8135
  3697  000F1A                     u8870:
  3698  000F1A                     
  3699                           ; BSR set to: 0
  3700                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  3701  000F1A  BFCB               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3702  000F1C  EF99  F007         	goto	u8881
  3703  000F20  51CB               	movf	(sprintf@prec+1)& (0+255),w,b
  3704  000F22  E109               	bnz	u8880
  3705  000F24  0E09               	movlw	9
  3706  000F26  5DCA               	subwf	sprintf@prec& (0+255),w,b
  3707  000F28  A0D8               	btfss	status,0,c
  3708  000F2A  EF99  F007         	goto	u8881
  3709  000F2E  EF9B  F007         	goto	u8880
  3710  000F32                     u8881:
  3711  000F32  EF9F  F007         	goto	l631
  3712  000F36                     u8880:
  3713  000F36                     
  3714                           ; BSR set to: 0
  3715                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3716  000F36  0E08               	movlw	8
  3717  000F38  6FCC               	movwf	sprintf@c& (0+255),b
  3718  000F3A  EFA1  F007         	goto	l8147
  3719  000F3E                     l631:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  3723  000F3E  C0CA  F0CC         	movff	sprintf@prec,sprintf@c
  3724  000F42                     l8147:
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;doprnt.c: 1241: prec -= (int)c;
  3728  000F42  51CC               	movf	sprintf@c& (0+255),w,b
  3729  000F44  5FCA               	subwf	sprintf@prec& (0+255),f,b
  3730  000F46  0E00               	movlw	0
  3731  000F48  5BCB               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3732  000F4A                     
  3733                           ; BSR set to: 0
  3734                           ;doprnt.c: 1245: if(c)
  3735  000F4A  51CC               	movf	sprintf@c& (0+255),w,b
  3736  000F4C  B4D8               	btfsc	status,2,c
  3737  000F4E  EFAB  F007         	goto	u8891
  3738  000F52  EFAD  F007         	goto	u8890
  3739  000F56                     u8891:
  3740  000F56  EFB5  F007         	goto	l8155
  3741  000F5A                     u8890:
  3742  000F5A                     
  3743                           ; BSR set to: 0
  3744                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  3745  000F5A  C05F  FFD9         	movff	sprintf@sp,fsr2l
  3746  000F5E  C060  FFDA         	movff	sprintf@sp+1,fsr2h
  3747  000F62  0E2E               	movlw	46
  3748  000F64  6EDF               	movwf	indf2,c
  3749  000F66                     
  3750                           ; BSR set to: 0
  3751  000F66  4A5F               	infsnz	sprintf@sp^0,f,c
  3752  000F68  2A60               	incf	(sprintf@sp+1)^0,f,c
  3753  000F6A                     l8155:
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  3757  000F6A  51CC               	movf	sprintf@c& (0+255),w,b
  3758  000F6C  EC2E  F014         	call	_scale
  3759  000F70  C03A  F0B2         	movff	?_scale,_sprintf$2478
  3760  000F74  C03B  F0B3         	movff	?_scale+1,_sprintf$2478+1
  3761  000F78  C03C  F0B4         	movff	?_scale+2,_sprintf$2478+2
  3762  000F7C  C03D  F0B5         	movff	?_scale+3,_sprintf$2478+3
  3763  000F80                     
  3764                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  3765  000F80  C0C6  F025         	movff	sprintf@fval,___flmul@a
  3766  000F84  C0C7  F026         	movff	sprintf@fval+1,___flmul@a+1
  3767  000F88  C0C8  F027         	movff	sprintf@fval+2,___flmul@a+2
  3768  000F8C  C0C9  F028         	movff	sprintf@fval+3,___flmul@a+3
  3769  000F90  C0B2  F021         	movff	_sprintf$2478,___flmul@b
  3770  000F94  C0B3  F022         	movff	_sprintf$2478+1,___flmul@b+1
  3771  000F98  C0B4  F023         	movff	_sprintf$2478+2,___flmul@b+2
  3772  000F9C  C0B5  F024         	movff	_sprintf$2478+3,___flmul@b+3
  3773  000FA0  EC19  F012         	call	___flmul	;wreg free
  3774  000FA4  C021  F053         	movff	?___flmul,___fltol@f1
  3775  000FA8  C022  F054         	movff	?___flmul+1,___fltol@f1+1
  3776  000FAC  C023  F055         	movff	?___flmul+2,___fltol@f1+2
  3777  000FB0  C024  F056         	movff	?___flmul+3,___fltol@f1+3
  3778  000FB4  EC36  F024         	call	___fltol	;wreg free
  3779  000FB8  C053  F0BC         	movff	?___fltol,sprintf@val
  3780  000FBC  C054  F0BD         	movff	?___fltol+1,sprintf@val+1
  3781  000FC0  C055  F0BE         	movff	?___fltol+2,sprintf@val+2
  3782  000FC4  C056  F0BF         	movff	?___fltol+3,sprintf@val+3
  3783                           
  3784                           ;doprnt.c: 1254: while(c--) {
  3785  000FC8  EF56  F008         	goto	l8169
  3786  000FCC                     l8159:
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  3790  000FCC  C0BC  F012         	movff	sprintf@val,___lldiv@dividend
  3791  000FD0  C0BD  F013         	movff	sprintf@val+1,___lldiv@dividend+1
  3792  000FD4  C0BE  F014         	movff	sprintf@val+2,___lldiv@dividend+2
  3793  000FD8  C0BF  F015         	movff	sprintf@val+3,___lldiv@dividend+3
  3794  000FDC  51CC               	movf	sprintf@c& (0+255),w,b
  3795  000FDE  0D04               	mullw	4
  3796  000FE0  0E69               	movlw	low _dpowers
  3797  000FE2  24F3               	addwf	243,w,c
  3798  000FE4  6EF6               	movwf	tblptrl,c
  3799  000FE6  0E06               	movlw	high _dpowers
  3800  000FE8  20F4               	addwfc	244,w,c
  3801  000FEA  6EF7               	movwf	tblptrh,c
  3802  000FEC                     	if	0	;There are less than 3 active tblptr bytes
  3803  000FEC                     	endif
  3804  000FEC  0009               	tblrd		*+
  3805  000FEE  CFF5 F016          	movff	tablat,___lldiv@divisor
  3806  000FF2  0009               	tblrd		*+
  3807  000FF4  CFF5 F017          	movff	tablat,___lldiv@divisor+1
  3808  000FF8  0009               	tblrd		*+
  3809  000FFA  CFF5 F018          	movff	tablat,___lldiv@divisor+2
  3810  000FFE  000A               	tblrd		*-
  3811  001000  CFF5 F019          	movff	tablat,___lldiv@divisor+3
  3812  001004  EC81  F028         	call	___lldiv	;wreg free
  3813  001008  C012  F0B8         	movff	?___lldiv,sprintf@tmpval
  3814  00100C  C013  F0B9         	movff	?___lldiv+1,sprintf@tmpval+1
  3815  001010  C014  F0BA         	movff	?___lldiv+2,sprintf@tmpval+2
  3816  001014  C015  F0BB         	movff	?___lldiv+3,sprintf@tmpval+3
  3817  001018                     
  3818                           ;doprnt.c: 1256: tmpval.vd %= 10;
  3819  001018  C0B8  F01F         	movff	sprintf@tmpval,___llmod@dividend
  3820  00101C  C0B9  F020         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3821  001020  C0BA  F021         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3822  001024  C0BB  F022         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3823  001028  0E0A               	movlw	10
  3824  00102A  6E23               	movwf	___llmod@divisor^0,c
  3825  00102C  0E00               	movlw	0
  3826  00102E  6E24               	movwf	(___llmod@divisor+1)^0,c
  3827  001030  0E00               	movlw	0
  3828  001032  6E25               	movwf	(___llmod@divisor+2)^0,c
  3829  001034  0E00               	movlw	0
  3830  001036  6E26               	movwf	(___llmod@divisor+3)^0,c
  3831  001038  EC1C  F029         	call	___llmod	;wreg free
  3832  00103C  C01F  F0B8         	movff	?___llmod,sprintf@tmpval
  3833  001040  C020  F0B9         	movff	?___llmod+1,sprintf@tmpval+1
  3834  001044  C021  F0BA         	movff	?___llmod+2,sprintf@tmpval+2
  3835  001048  C022  F0BB         	movff	?___llmod+3,sprintf@tmpval+3
  3836  00104C                     
  3837                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  3838  00104C  0100               	movlb	0	; () banked
  3839  00104E  51B8               	movf	sprintf@tmpval& (0+255),w,b
  3840  001050  0F30               	addlw	48
  3841  001052  C05F  FFD9         	movff	sprintf@sp,fsr2l
  3842  001056  C060  FFDA         	movff	sprintf@sp+1,fsr2h
  3843  00105A  6EDF               	movwf	indf2,c
  3844  00105C                     
  3845                           ; BSR set to: 0
  3846  00105C  4A5F               	infsnz	sprintf@sp^0,f,c
  3847  00105E  2A60               	incf	(sprintf@sp+1)^0,f,c
  3848  001060                     
  3849                           ; BSR set to: 0
  3850                           ;doprnt.c: 1258: val %= dpowers[c];
  3851  001060  C0BC  F01F         	movff	sprintf@val,___llmod@dividend
  3852  001064  C0BD  F020         	movff	sprintf@val+1,___llmod@dividend+1
  3853  001068  C0BE  F021         	movff	sprintf@val+2,___llmod@dividend+2
  3854  00106C  C0BF  F022         	movff	sprintf@val+3,___llmod@dividend+3
  3855  001070  51CC               	movf	sprintf@c& (0+255),w,b
  3856  001072  0D04               	mullw	4
  3857  001074  0E69               	movlw	low _dpowers
  3858  001076  24F3               	addwf	243,w,c
  3859  001078  6EF6               	movwf	tblptrl,c
  3860  00107A  0E06               	movlw	high _dpowers
  3861  00107C  20F4               	addwfc	244,w,c
  3862  00107E  6EF7               	movwf	tblptrh,c
  3863  001080                     	if	0	;There are less than 3 active tblptr bytes
  3864  001080                     	endif
  3865  001080  0009               	tblrd		*+
  3866  001082  CFF5 F023          	movff	tablat,___llmod@divisor
  3867  001086  0009               	tblrd		*+
  3868  001088  CFF5 F024          	movff	tablat,___llmod@divisor+1
  3869  00108C  0009               	tblrd		*+
  3870  00108E  CFF5 F025          	movff	tablat,___llmod@divisor+2
  3871  001092  000A               	tblrd		*-
  3872  001094  CFF5 F026          	movff	tablat,___llmod@divisor+3
  3873  001098  EC1C  F029         	call	___llmod	;wreg free
  3874  00109C  C01F  F0BC         	movff	?___llmod,sprintf@val
  3875  0010A0  C020  F0BD         	movff	?___llmod+1,sprintf@val+1
  3876  0010A4  C021  F0BE         	movff	?___llmod+2,sprintf@val+2
  3877  0010A8  C022  F0BF         	movff	?___llmod+3,sprintf@val+3
  3878  0010AC                     l8169:
  3879  0010AC  0100               	movlb	0	; () banked
  3880  0010AE  07CC               	decf	sprintf@c& (0+255),f,b
  3881  0010B0  29CC               	incf	sprintf@c& (0+255),w,b
  3882  0010B2  A4D8               	btfss	status,2,c
  3883  0010B4  EF5E  F008         	goto	u8901
  3884  0010B8  EF60  F008         	goto	u8900
  3885  0010BC                     u8901:
  3886  0010BC  EFE6  F007         	goto	l8159
  3887  0010C0                     u8900:
  3888  0010C0  EF6D  F008         	goto	l8177
  3889  0010C4                     l8171:
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  3893  0010C4  C05F  FFD9         	movff	sprintf@sp,fsr2l
  3894  0010C8  C060  FFDA         	movff	sprintf@sp+1,fsr2h
  3895  0010CC  0E30               	movlw	48
  3896  0010CE  6EDF               	movwf	indf2,c
  3897  0010D0                     
  3898                           ; BSR set to: 0
  3899  0010D0  4A5F               	infsnz	sprintf@sp^0,f,c
  3900  0010D2  2A60               	incf	(sprintf@sp+1)^0,f,c
  3901  0010D4                     
  3902                           ; BSR set to: 0
  3903                           ;doprnt.c: 1263: prec--;
  3904  0010D4  07CA               	decf	sprintf@prec& (0+255),f,b
  3905  0010D6  A0D8               	btfss	status,0,c
  3906  0010D8  07CB               	decf	(sprintf@prec+1)& (0+255),f,b
  3907  0010DA                     l8177:
  3908                           
  3909                           ; BSR set to: 0
  3910  0010DA  51CA               	movf	sprintf@prec& (0+255),w,b
  3911  0010DC  11CB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3912  0010DE  A4D8               	btfss	status,2,c
  3913  0010E0  EF74  F008         	goto	u8911
  3914  0010E4  EF76  F008         	goto	u8910
  3915  0010E8                     u8911:
  3916  0010E8  EF62  F008         	goto	l8171
  3917  0010EC                     u8910:
  3918  0010EC  EF1F  F00A         	goto	l8275
  3919  0010F0                     l8179:
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;doprnt.c: 1272: };doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_
      +                          arg((*(int **)ap), (int)0));
  3923  0010F0  C0B6  FFD9         	movff	sprintf@ap,fsr2l
  3924  0010F4  C0B7  FFDA         	movff	sprintf@ap+1,fsr2h
  3925  0010F8  CFDE F0BC          	movff	postinc2,sprintf@val
  3926  0010FC  CFDD F0BD          	movff	postdec2,sprintf@val+1
  3927  001100  0E00               	movlw	0
  3928  001102  BFBD               	btfsc	(sprintf@val+1)& (0+255),7,b
  3929  001104  0EFF               	movlw	-1
  3930  001106  6FBE               	movwf	(sprintf@val+2)& (0+255),b
  3931  001108  6FBF               	movwf	(sprintf@val+3)& (0+255),b
  3932  00110A                     
  3933                           ; BSR set to: 0
  3934  00110A  0E02               	movlw	2
  3935  00110C  27B6               	addwf	sprintf@ap& (0+255),f,b
  3936  00110E  0E00               	movlw	0
  3937  001110  23B7               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3938  001112                     
  3939                           ; BSR set to: 0
  3940                           ;doprnt.c: 1287: if((long)val < 0) {
  3941  001112  BFBF               	btfsc	(sprintf@val+3)& (0+255),7,b
  3942  001114  EF90  F008         	goto	u8920
  3943  001118  EF8E  F008         	goto	u8921
  3944  00111C                     u8921:
  3945  00111C  EF9A  F008         	goto	l8189
  3946  001120                     u8920:
  3947  001120                     
  3948                           ; BSR set to: 0
  3949                           ;doprnt.c: 1288: flag |= 0x03;
  3950  001120  0E03               	movlw	3
  3951  001122  13C2               	iorwf	sprintf@flag& (0+255),f,b
  3952  001124                     
  3953                           ; BSR set to: 0
  3954                           ;doprnt.c: 1289: val = -val;
  3955  001124  1FBF               	comf	(sprintf@val+3)& (0+255),f,b
  3956  001126  1FBE               	comf	(sprintf@val+2)& (0+255),f,b
  3957  001128  1FBD               	comf	(sprintf@val+1)& (0+255),f,b
  3958  00112A  6DBC               	negf	sprintf@val& (0+255),b
  3959  00112C  0E00               	movlw	0
  3960  00112E  23BD               	addwfc	(sprintf@val+1)& (0+255),f,b
  3961  001130  23BE               	addwfc	(sprintf@val+2)& (0+255),f,b
  3962  001132  23BF               	addwfc	(sprintf@val+3)& (0+255),f,b
  3963  001134                     l8189:
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1316: if(prec == 0 && val == 0)
  3967  001134  51CA               	movf	sprintf@prec& (0+255),w,b
  3968  001136  11CB               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3969  001138  A4D8               	btfss	status,2,c
  3970  00113A  EFA1  F008         	goto	u8931
  3971  00113E  EFA3  F008         	goto	u8930
  3972  001142                     u8931:
  3973  001142  EFB0  F008         	goto	l8195
  3974  001146                     u8930:
  3975  001146                     
  3976                           ; BSR set to: 0
  3977  001146  51BC               	movf	sprintf@val& (0+255),w,b
  3978  001148  11BD               	iorwf	(sprintf@val+1)& (0+255),w,b
  3979  00114A  11BE               	iorwf	(sprintf@val+2)& (0+255),w,b
  3980  00114C  11BF               	iorwf	(sprintf@val+3)& (0+255),w,b
  3981  00114E  A4D8               	btfss	status,2,c
  3982  001150  EFAC  F008         	goto	u8941
  3983  001154  EFAE  F008         	goto	u8940
  3984  001158                     u8941:
  3985  001158  EFB0  F008         	goto	l8195
  3986  00115C                     u8940:
  3987  00115C                     
  3988                           ; BSR set to: 0
  3989                           ;doprnt.c: 1317: prec++;
  3990  00115C  4BCA               	infsnz	sprintf@prec& (0+255),f,b
  3991  00115E  2BCB               	incf	(sprintf@prec+1)& (0+255),f,b
  3992  001160                     l8195:
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3996  001160  0E01               	movlw	1
  3997  001162  6FCC               	movwf	sprintf@c& (0+255),b
  3998  001164                     l8201:
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;doprnt.c: 1332: if(val < dpowers[c])
  4002  001164  51CC               	movf	sprintf@c& (0+255),w,b
  4003  001166  0D04               	mullw	4
  4004  001168  0E69               	movlw	low _dpowers
  4005  00116A  24F3               	addwf	243,w,c
  4006  00116C  6EF6               	movwf	tblptrl,c
  4007  00116E  0E06               	movlw	high _dpowers
  4008  001170  20F4               	addwfc	244,w,c
  4009  001172  6EF7               	movwf	tblptrh,c
  4010  001174                     	if	0	;There are less than 3 active tblptr bytes
  4011  001174                     	endif
  4012  001174  0009               	tblrd		*+
  4013  001176  50F5               	movf	tablat,w,c
  4014  001178  5DBC               	subwf	sprintf@val& (0+255),w,b
  4015  00117A  0009               	tblrd		*+
  4016  00117C  50F5               	movf	tablat,w,c
  4017  00117E  59BD               	subwfb	(sprintf@val+1)& (0+255),w,b
  4018  001180  0009               	tblrd		*+
  4019  001182  50F5               	movf	tablat,w,c
  4020  001184  59BE               	subwfb	(sprintf@val+2)& (0+255),w,b
  4021  001186  0009               	tblrd		*+
  4022  001188  50F5               	movf	tablat,w,c
  4023  00118A  59BF               	subwfb	(sprintf@val+3)& (0+255),w,b
  4024  00118C  B0D8               	btfsc	status,0,c
  4025  00118E  EFCB  F008         	goto	u8951
  4026  001192  EFCD  F008         	goto	u8950
  4027  001196                     u8951:
  4028  001196  EFCF  F008         	goto	l8205
  4029  00119A                     u8950:
  4030  00119A  EFD9  F008         	goto	l8209
  4031  00119E                     l8205:
  4032                           
  4033                           ; BSR set to: 0
  4034  00119E  2BCC               	incf	sprintf@c& (0+255),f,b
  4035  0011A0                     
  4036                           ; BSR set to: 0
  4037  0011A0  0E0A               	movlw	10
  4038  0011A2  19CC               	xorwf	sprintf@c& (0+255),w,b
  4039  0011A4  A4D8               	btfss	status,2,c
  4040  0011A6  EFD7  F008         	goto	u8961
  4041  0011AA  EFD9  F008         	goto	u8960
  4042  0011AE                     u8961:
  4043  0011AE  EFB2  F008         	goto	l8201
  4044  0011B2                     u8960:
  4045  0011B2                     l8209:
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;doprnt.c: 1365: if(c < prec)
  4049  0011B2  51CC               	movf	sprintf@c& (0+255),w,b
  4050  0011B4  6E6B               	movwf	??_sprintf^0,c
  4051  0011B6  6A6C               	clrf	(??_sprintf+1)^0,c
  4052  0011B8  51CA               	movf	sprintf@prec& (0+255),w,b
  4053  0011BA  5C6B               	subwf	??_sprintf^0,w,c
  4054  0011BC  506C               	movf	(??_sprintf+1)^0,w,c
  4055  0011BE  0A80               	xorlw	128
  4056  0011C0  6E6D               	movwf	(??_sprintf+2)^0,c
  4057  0011C2  51CB               	movf	(sprintf@prec+1)& (0+255),w,b
  4058  0011C4  0A80               	xorlw	128
  4059  0011C6  586D               	subwfb	(??_sprintf+2)^0,w,c
  4060  0011C8  B0D8               	btfsc	status,0,c
  4061  0011CA  EFE9  F008         	goto	u8971
  4062  0011CE  EFEB  F008         	goto	u8970
  4063  0011D2                     u8971:
  4064  0011D2  EFEF  F008         	goto	l8213
  4065  0011D6                     u8970:
  4066  0011D6                     
  4067                           ; BSR set to: 0
  4068                           ;doprnt.c: 1366: c = (char)prec;
  4069  0011D6  C0CA  F0CC         	movff	sprintf@prec,sprintf@c
  4070  0011DA  EF04  F009         	goto	l8217
  4071  0011DE                     l8213:
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;doprnt.c: 1367: else if(prec < c)
  4075  0011DE  51CC               	movf	sprintf@c& (0+255),w,b
  4076  0011E0  6E6B               	movwf	??_sprintf^0,c
  4077  0011E2  6A6C               	clrf	(??_sprintf+1)^0,c
  4078  0011E4  506B               	movf	??_sprintf^0,w,c
  4079  0011E6  5DCA               	subwf	sprintf@prec& (0+255),w,b
  4080  0011E8  51CB               	movf	(sprintf@prec+1)& (0+255),w,b
  4081  0011EA  0A80               	xorlw	128
  4082  0011EC  6E6D               	movwf	(??_sprintf+2)^0,c
  4083  0011EE  506C               	movf	(??_sprintf+1)^0,w,c
  4084  0011F0  0A80               	xorlw	128
  4085  0011F2  586D               	subwfb	(??_sprintf+2)^0,w,c
  4086  0011F4  B0D8               	btfsc	status,0,c
  4087  0011F6  EFFF  F008         	goto	u8981
  4088  0011FA  EF01  F009         	goto	u8980
  4089  0011FE                     u8981:
  4090  0011FE  EF04  F009         	goto	l8217
  4091  001202                     u8980:
  4092  001202                     
  4093                           ; BSR set to: 0
  4094                           ;doprnt.c: 1368: prec = c;
  4095  001202  C0CC  F0CA         	movff	sprintf@c,sprintf@prec
  4096  001206  6BCB               	clrf	(sprintf@prec+1)& (0+255),b
  4097  001208                     l8217:
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;doprnt.c: 1371: if(width && flag & 0x03)
  4101  001208  51C4               	movf	sprintf@width& (0+255),w,b
  4102  00120A  11C5               	iorwf	(sprintf@width+1)& (0+255),w,b
  4103  00120C  B4D8               	btfsc	status,2,c
  4104  00120E  EF0B  F009         	goto	u8991
  4105  001212  EF0D  F009         	goto	u8990
  4106  001216                     u8991:
  4107  001216  EF1F  F009         	goto	l8223
  4108  00121A                     u8990:
  4109  00121A                     
  4110                           ; BSR set to: 0
  4111  00121A  0E03               	movlw	3
  4112  00121C  15C2               	andwf	sprintf@flag& (0+255),w,b
  4113  00121E  6E6B               	movwf	??_sprintf^0,c
  4114  001220  0E00               	movlw	0
  4115  001222  15C3               	andwf	(sprintf@flag+1)& (0+255),w,b
  4116  001224  6E6C               	movwf	(??_sprintf+1)^0,c
  4117  001226  506B               	movf	??_sprintf^0,w,c
  4118  001228  106C               	iorwf	(??_sprintf+1)^0,w,c
  4119  00122A  B4D8               	btfsc	status,2,c
  4120  00122C  EF1A  F009         	goto	u9001
  4121  001230  EF1C  F009         	goto	u9000
  4122  001234                     u9001:
  4123  001234  EF1F  F009         	goto	l8223
  4124  001238                     u9000:
  4125  001238                     
  4126                           ; BSR set to: 0
  4127                           ;doprnt.c: 1372: width--;
  4128  001238  07C4               	decf	sprintf@width& (0+255),f,b
  4129  00123A  A0D8               	btfss	status,0,c
  4130  00123C  07C5               	decf	(sprintf@width+1)& (0+255),f,b
  4131  00123E                     l8223:
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;doprnt.c: 1374: if(flag & 0x4000) {
  4135  00123E  ADC3               	btfss	(sprintf@flag+1)& (0+255),6,b
  4136  001240  EF24  F009         	goto	u9011
  4137  001244  EF26  F009         	goto	u9010
  4138  001248                     u9011:
  4139  001248  EF3F  F009         	goto	l8231
  4140  00124C                     u9010:
  4141  00124C                     
  4142                           ; BSR set to: 0
  4143                           ;doprnt.c: 1375: if(width > prec)
  4144  00124C  51C4               	movf	sprintf@width& (0+255),w,b
  4145  00124E  5DCA               	subwf	sprintf@prec& (0+255),w,b
  4146  001250  51CB               	movf	(sprintf@prec+1)& (0+255),w,b
  4147  001252  0A80               	xorlw	128
  4148  001254  6E6B               	movwf	??_sprintf^0,c
  4149  001256  51C5               	movf	(sprintf@width+1)& (0+255),w,b
  4150  001258  0A80               	xorlw	128
  4151  00125A  586B               	subwfb	??_sprintf^0,w,c
  4152  00125C  B0D8               	btfsc	status,0,c
  4153  00125E  EF33  F009         	goto	u9021
  4154  001262  EF35  F009         	goto	u9020
  4155  001266                     u9021:
  4156  001266  EF3B  F009         	goto	l8229
  4157  00126A                     u9020:
  4158  00126A                     
  4159                           ; BSR set to: 0
  4160                           ;doprnt.c: 1376: width -= prec;
  4161  00126A  51CA               	movf	sprintf@prec& (0+255),w,b
  4162  00126C  5FC4               	subwf	sprintf@width& (0+255),f,b
  4163  00126E  51CB               	movf	(sprintf@prec+1)& (0+255),w,b
  4164  001270  5BC5               	subwfb	(sprintf@width+1)& (0+255),f,b
  4165  001272  EF3F  F009         	goto	l8231
  4166  001276                     l8229:
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  4170  001276  0E00               	movlw	0
  4171  001278  6FC5               	movwf	(sprintf@width+1)& (0+255),b
  4172  00127A  0E00               	movlw	0
  4173  00127C  6FC4               	movwf	sprintf@width& (0+255),b
  4174  00127E                     l8231:
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
  4178  00127E  51CC               	movf	sprintf@c& (0+255),w,b
  4179  001280  6E6B               	movwf	??_sprintf^0,c
  4180  001282  6A6C               	clrf	(??_sprintf+1)^0,c
  4181  001284  51C4               	movf	sprintf@width& (0+255),w,b
  4182  001286  5C6B               	subwf	??_sprintf^0,w,c
  4183  001288  506C               	movf	(??_sprintf+1)^0,w,c
  4184  00128A  0A80               	xorlw	128
  4185  00128C  6E6D               	movwf	(??_sprintf+2)^0,c
  4186  00128E  51C5               	movf	(sprintf@width+1)& (0+255),w,b
  4187  001290  0A80               	xorlw	128
  4188  001292  586D               	subwfb	(??_sprintf+2)^0,w,c
  4189  001294  B0D8               	btfsc	status,0,c
  4190  001296  EF4F  F009         	goto	u9031
  4191  00129A  EF51  F009         	goto	u9030
  4192  00129E                     u9031:
  4193  00129E  EF57  F009         	goto	l8235
  4194  0012A2                     u9030:
  4195  0012A2                     
  4196                           ; BSR set to: 0
  4197                           ;doprnt.c: 1408: width -= c;
  4198  0012A2  51CC               	movf	sprintf@c& (0+255),w,b
  4199  0012A4  5FC4               	subwf	sprintf@width& (0+255),f,b
  4200  0012A6  0E00               	movlw	0
  4201  0012A8  5BC5               	subwfb	(sprintf@width+1)& (0+255),f,b
  4202  0012AA  EF5B  F009         	goto	l8237
  4203  0012AE                     l8235:
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  4207  0012AE  0E00               	movlw	0
  4208  0012B0  6FC5               	movwf	(sprintf@width+1)& (0+255),b
  4209  0012B2  0E00               	movlw	0
  4210  0012B4  6FC4               	movwf	sprintf@width& (0+255),b
  4211  0012B6                     l8237:
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;doprnt.c: 1413: if(flag & 0x04) {
  4215  0012B6  A5C2               	btfss	sprintf@flag& (0+255),2,b
  4216  0012B8  EF60  F009         	goto	u9041
  4217  0012BC  EF62  F009         	goto	u9040
  4218  0012C0                     u9041:
  4219  0012C0  EF98  F009         	goto	l8253
  4220  0012C4                     u9040:
  4221  0012C4                     
  4222                           ; BSR set to: 0
  4223                           ;doprnt.c: 1418: if(flag & 0x03)
  4224  0012C4  0E03               	movlw	3
  4225  0012C6  15C2               	andwf	sprintf@flag& (0+255),w,b
  4226  0012C8  6E6B               	movwf	??_sprintf^0,c
  4227  0012CA  0E00               	movlw	0
  4228  0012CC  15C3               	andwf	(sprintf@flag+1)& (0+255),w,b
  4229  0012CE  6E6C               	movwf	(??_sprintf+1)^0,c
  4230  0012D0  506B               	movf	??_sprintf^0,w,c
  4231  0012D2  106C               	iorwf	(??_sprintf+1)^0,w,c
  4232  0012D4  B4D8               	btfsc	status,2,c
  4233  0012D6  EF6F  F009         	goto	u9051
  4234  0012DA  EF71  F009         	goto	u9050
  4235  0012DE                     u9051:
  4236  0012DE  EF79  F009         	goto	l8245
  4237  0012E2                     u9050:
  4238  0012E2                     
  4239                           ; BSR set to: 0
  4240                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  4241  0012E2  C05F  FFD9         	movff	sprintf@sp,fsr2l
  4242  0012E6  C060  FFDA         	movff	sprintf@sp+1,fsr2h
  4243  0012EA  0E2D               	movlw	45
  4244  0012EC  6EDF               	movwf	indf2,c
  4245  0012EE                     
  4246                           ; BSR set to: 0
  4247  0012EE  4A5F               	infsnz	sprintf@sp^0,f,c
  4248  0012F0  2A60               	incf	(sprintf@sp+1)^0,f,c
  4249  0012F2                     l8245:
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;doprnt.c: 1441: if(width)
  4253  0012F2  51C4               	movf	sprintf@width& (0+255),w,b
  4254  0012F4  11C5               	iorwf	(sprintf@width+1)& (0+255),w,b
  4255  0012F6  B4D8               	btfsc	status,2,c
  4256  0012F8  EF80  F009         	goto	u9061
  4257  0012FC  EF82  F009         	goto	u9060
  4258  001300                     u9061:
  4259  001300  EF12  F00A         	goto	l8273
  4260  001304                     u9060:
  4261  001304                     l8247:
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  4265  001304  C05F  FFD9         	movff	sprintf@sp,fsr2l
  4266  001308  C060  FFDA         	movff	sprintf@sp+1,fsr2h
  4267  00130C  0E30               	movlw	48
  4268  00130E  6EDF               	movwf	indf2,c
  4269  001310                     
  4270                           ; BSR set to: 0
  4271  001310  4A5F               	infsnz	sprintf@sp^0,f,c
  4272  001312  2A60               	incf	(sprintf@sp+1)^0,f,c
  4273  001314                     
  4274                           ; BSR set to: 0
  4275                           ;doprnt.c: 1444: while(--width);
  4276  001314  07C4               	decf	sprintf@width& (0+255),f,b
  4277  001316  A0D8               	btfss	status,0,c
  4278  001318  07C5               	decf	(sprintf@width+1)& (0+255),f,b
  4279  00131A  51C4               	movf	sprintf@width& (0+255),w,b
  4280  00131C  11C5               	iorwf	(sprintf@width+1)& (0+255),w,b
  4281  00131E  A4D8               	btfss	status,2,c
  4282  001320  EF94  F009         	goto	u9071
  4283  001324  EF96  F009         	goto	u9070
  4284  001328                     u9071:
  4285  001328  EF82  F009         	goto	l8247
  4286  00132C                     u9070:
  4287  00132C  EF12  F00A         	goto	l8273
  4288  001330                     l8253:
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  4292  001330  51C4               	movf	sprintf@width& (0+255),w,b
  4293  001332  11C5               	iorwf	(sprintf@width+1)& (0+255),w,b
  4294  001334  B4D8               	btfsc	status,2,c
  4295  001336  EF9F  F009         	goto	u9081
  4296  00133A  EFA1  F009         	goto	u9080
  4297  00133E                     u9081:
  4298  00133E  EFB5  F009         	goto	l8261
  4299  001342                     u9080:
  4300  001342                     l8255:
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  4304  001342  C05F  FFD9         	movff	sprintf@sp,fsr2l
  4305  001346  C060  FFDA         	movff	sprintf@sp+1,fsr2h
  4306  00134A  0E20               	movlw	32
  4307  00134C  6EDF               	movwf	indf2,c
  4308  00134E                     
  4309                           ; BSR set to: 0
  4310  00134E  4A5F               	infsnz	sprintf@sp^0,f,c
  4311  001350  2A60               	incf	(sprintf@sp+1)^0,f,c
  4312  001352                     
  4313                           ; BSR set to: 0
  4314                           ;doprnt.c: 1457: while(--width);
  4315  001352  07C4               	decf	sprintf@width& (0+255),f,b
  4316  001354  A0D8               	btfss	status,0,c
  4317  001356  07C5               	decf	(sprintf@width+1)& (0+255),f,b
  4318  001358  51C4               	movf	sprintf@width& (0+255),w,b
  4319  00135A  11C5               	iorwf	(sprintf@width+1)& (0+255),w,b
  4320  00135C  A4D8               	btfss	status,2,c
  4321  00135E  EFB3  F009         	goto	u9091
  4322  001362  EFB5  F009         	goto	u9090
  4323  001366                     u9091:
  4324  001366  EFA1  F009         	goto	l8255
  4325  00136A                     u9090:
  4326  00136A                     l8261:
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;doprnt.c: 1464: if(flag & 0x03)
  4330  00136A  0E03               	movlw	3
  4331  00136C  15C2               	andwf	sprintf@flag& (0+255),w,b
  4332  00136E  6E6B               	movwf	??_sprintf^0,c
  4333  001370  0E00               	movlw	0
  4334  001372  15C3               	andwf	(sprintf@flag+1)& (0+255),w,b
  4335  001374  6E6C               	movwf	(??_sprintf+1)^0,c
  4336  001376  506B               	movf	??_sprintf^0,w,c
  4337  001378  106C               	iorwf	(??_sprintf+1)^0,w,c
  4338  00137A  B4D8               	btfsc	status,2,c
  4339  00137C  EFC2  F009         	goto	u9101
  4340  001380  EFC4  F009         	goto	u9100
  4341  001384                     u9101:
  4342  001384  EF12  F00A         	goto	l8273
  4343  001388                     u9100:
  4344  001388                     
  4345                           ; BSR set to: 0
  4346                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  4347  001388  C05F  FFD9         	movff	sprintf@sp,fsr2l
  4348  00138C  C060  FFDA         	movff	sprintf@sp+1,fsr2h
  4349  001390  0E2D               	movlw	45
  4350  001392  6EDF               	movwf	indf2,c
  4351  001394                     l8265:
  4352                           
  4353                           ; BSR set to: 0
  4354  001394  4A5F               	infsnz	sprintf@sp^0,f,c
  4355  001396  2A60               	incf	(sprintf@sp+1)^0,f,c
  4356  001398  EF12  F00A         	goto	l8273
  4357  00139C                     l8267:
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  4361  00139C  C0CA  F06B         	movff	sprintf@prec,??_sprintf
  4362  0013A0  C0CB  F06C         	movff	sprintf@prec+1,??_sprintf+1
  4363  0013A4  90D8               	bcf	status,0,c
  4364  0013A6  366B               	rlcf	??_sprintf^0,f,c
  4365  0013A8  366C               	rlcf	(??_sprintf+1)^0,f,c
  4366  0013AA  90D8               	bcf	status,0,c
  4367  0013AC  366B               	rlcf	??_sprintf^0,f,c
  4368  0013AE  366C               	rlcf	(??_sprintf+1)^0,f,c
  4369  0013B0  0E69               	movlw	low _dpowers
  4370  0013B2  246B               	addwf	??_sprintf^0,w,c
  4371  0013B4  6EF6               	movwf	tblptrl,c
  4372  0013B6  0E06               	movlw	high _dpowers
  4373  0013B8  206C               	addwfc	(??_sprintf+1)^0,w,c
  4374  0013BA  6EF7               	movwf	tblptrh,c
  4375  0013BC                     	if	0	;There are less than 3 active tblptr bytes
  4376  0013BC                     	endif
  4377  0013BC  0009               	tblrd		*+
  4378  0013BE  CFF5 F016          	movff	tablat,___lldiv@divisor
  4379  0013C2  0009               	tblrd		*+
  4380  0013C4  CFF5 F017          	movff	tablat,___lldiv@divisor+1
  4381  0013C8  0009               	tblrd		*+
  4382  0013CA  CFF5 F018          	movff	tablat,___lldiv@divisor+2
  4383  0013CE  000A               	tblrd		*-
  4384  0013D0  CFF5 F019          	movff	tablat,___lldiv@divisor+3
  4385  0013D4  C0BC  F012         	movff	sprintf@val,___lldiv@dividend
  4386  0013D8  C0BD  F013         	movff	sprintf@val+1,___lldiv@dividend+1
  4387  0013DC  C0BE  F014         	movff	sprintf@val+2,___lldiv@dividend+2
  4388  0013E0  C0BF  F015         	movff	sprintf@val+3,___lldiv@dividend+3
  4389  0013E4  EC81  F028         	call	___lldiv	;wreg free
  4390  0013E8  C012  F01F         	movff	?___lldiv,___llmod@dividend
  4391  0013EC  C013  F020         	movff	?___lldiv+1,___llmod@dividend+1
  4392  0013F0  C014  F021         	movff	?___lldiv+2,___llmod@dividend+2
  4393  0013F4  C015  F022         	movff	?___lldiv+3,___llmod@dividend+3
  4394  0013F8  0E0A               	movlw	10
  4395  0013FA  6E23               	movwf	___llmod@divisor^0,c
  4396  0013FC  0E00               	movlw	0
  4397  0013FE  6E24               	movwf	(___llmod@divisor+1)^0,c
  4398  001400  0E00               	movlw	0
  4399  001402  6E25               	movwf	(___llmod@divisor+2)^0,c
  4400  001404  0E00               	movlw	0
  4401  001406  6E26               	movwf	(___llmod@divisor+3)^0,c
  4402  001408  EC1C  F029         	call	___llmod	;wreg free
  4403  00140C  501F               	movf	?___llmod^0,w,c
  4404  00140E  0F30               	addlw	48
  4405  001410  0100               	movlb	0	; () banked
  4406  001412  6FCC               	movwf	sprintf@c& (0+255),b
  4407  001414                     
  4408                           ; BSR set to: 0
  4409                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  4410  001414  C05F  FFD9         	movff	sprintf@sp,fsr2l
  4411  001418  C060  FFDA         	movff	sprintf@sp+1,fsr2h
  4412  00141C  C0CC  FFDF         	movff	sprintf@c,indf2
  4413  001420  EFCA  F009         	goto	l8265
  4414  001424                     l8273:
  4415                           
  4416                           ; BSR set to: 0
  4417  001424  07CA               	decf	sprintf@prec& (0+255),f,b
  4418  001426  A0D8               	btfss	status,0,c
  4419  001428  07CB               	decf	(sprintf@prec+1)& (0+255),f,b
  4420  00142A  29CA               	incf	sprintf@prec& (0+255),w,b
  4421  00142C  E106               	bnz	u9111
  4422  00142E  29CB               	incf	(sprintf@prec+1)& (0+255),w,b
  4423  001430  A4D8               	btfss	status,2,c
  4424  001432  EF1D  F00A         	goto	u9111
  4425  001436  EF1F  F00A         	goto	u9110
  4426  00143A                     u9111:
  4427  00143A  EFCE  F009         	goto	l8267
  4428  00143E                     u9110:
  4429  00143E                     l8275:
  4430                           
  4431                           ; BSR set to: 0
  4432  00143E  C061  FFF6         	movff	sprintf@f,tblptrl
  4433  001442  C062  FFF7         	movff	sprintf@f+1,tblptrh
  4434  001446  4A61               	infsnz	sprintf@f^0,f,c
  4435  001448  2A62               	incf	(sprintf@f+1)^0,f,c
  4436  00144A                     	if	0	;tblptru may be non-zero
  4437  00144A                     	endif
  4438  00144A                     	if	0	;tblptru may be non-zero
  4439  00144A                     	endif
  4440  00144A  0008               	tblrd		*
  4441  00144C  CFF5 F0CC          	movff	tablat,sprintf@c
  4442  001450  51CC               	movf	sprintf@c& (0+255),w,b
  4443  001452  A4D8               	btfss	status,2,c
  4444  001454  EF2E  F00A         	goto	u9121
  4445  001458  EF30  F00A         	goto	u9120
  4446  00145C                     u9121:
  4447  00145C  EF7D  F003         	goto	l7949
  4448  001460                     u9120:
  4449  001460                     l8277:
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;doprnt.c: 1564: *sp = 0;
  4453  001460  C05F  FFD9         	movff	sprintf@sp,fsr2l
  4454  001464  C060  FFDA         	movff	sprintf@sp+1,fsr2h
  4455  001468  0E00               	movlw	0
  4456  00146A  6EDF               	movwf	indf2,c
  4457  00146C                     
  4458                           ; BSR set to: 0
  4459  00146C  0012               	return		;funcret
  4460  00146E                     __end_of_sprintf:
  4461                           	callstack 0
  4462                           
  4463 ;; *************** function _scale *****************
  4464 ;; Defined at:
  4465 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;  scl             1    wreg     char 
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  scl             1   65[COMRAM] char 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  4   57[COMRAM] char 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4479 ;;      Params:         4       0       0       0       0       0       0
  4480 ;;      Locals:         5       0       0       0       0       0       0
  4481 ;;      Temps:          0       0       0       0       0       0       0
  4482 ;;      Totals:         9       0       0       0       0       0       0
  4483 ;;Total ram usage:        9 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    3
  4486 ;; This function calls:
  4487 ;;		___awdiv
  4488 ;;		___awmod
  4489 ;;		___flmul
  4490 ;; This function is called by:
  4491 ;;		_sprintf
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text2
  4496  00285C                     __ptext2:
  4497                           	callstack 0
  4498  00285C                     _scale:
  4499                           	callstack 26
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;incstack = 0
  4503                           ;scale@scl stored from wreg
  4504  00285C  6E42               	movwf	scale@scl^0,c
  4505  00285E                     
  4506                           ;doprnt.c: 436: if(scl < 0) {
  4507  00285E  BE42               	btfsc	scale@scl^0,7,c
  4508  002860  EF36  F014         	goto	u7760
  4509  002864  EF34  F014         	goto	u7761
  4510  002868                     u7761:
  4511  002868  EF36  F015         	goto	l7387
  4512  00286C                     u7760:
  4513  00286C                     
  4514                           ;doprnt.c: 437: scl = -scl;
  4515  00286C  6C42               	negf	scale@scl^0,c
  4516                           
  4517                           ;doprnt.c: 438: if(scl>=110)
  4518  00286E  5042               	movf	scale@scl^0,w,c
  4519  002870  0A80               	xorlw	128
  4520  002872  0F12               	addlw	-238
  4521  002874  A0D8               	btfss	status,0,c
  4522  002876  EF3F  F014         	goto	u7771
  4523  00287A  EF41  F014         	goto	u7770
  4524  00287E                     u7771:
  4525  00287E  EFCA  F014         	goto	l7377
  4526  002882                     u7770:
  4527  002882                     
  4528                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4529  002882  0E00               	movlw	0
  4530  002884  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  4531  002886  0E0A               	movlw	10
  4532  002888  6E0E               	movwf	___awdiv@divisor^0,c
  4533  00288A  0E00               	movlw	0
  4534  00288C  6E09               	movwf	(___awmod@divisor+1)^0,c
  4535  00288E  0E64               	movlw	100
  4536  002890  6E08               	movwf	___awmod@divisor^0,c
  4537  002892  5042               	movf	scale@scl^0,w,c
  4538  002894  6E06               	movwf	___awmod@dividend^0,c
  4539  002896  6A07               	clrf	(___awmod@dividend+1)^0,c
  4540  002898  BE06               	btfsc	___awmod@dividend^0,7,c
  4541  00289A  0607               	decf	(___awmod@dividend+1)^0,f,c
  4542  00289C  ECD4  F027         	call	___awmod	;wreg free
  4543  0028A0  C006  F00C         	movff	?___awmod,___awdiv@dividend
  4544  0028A4  C007  F00D         	movff	?___awmod+1,___awdiv@dividend+1
  4545  0028A8  EC16  F027         	call	___awdiv	;wreg free
  4546  0028AC  0E09               	movlw	9
  4547  0028AE  260C               	addwf	?___awdiv^0,f,c
  4548  0028B0  500C               	movf	?___awdiv^0,w,c
  4549  0028B2  0D04               	mullw	4
  4550  0028B4  0E35               	movlw	low __npowers_
  4551  0028B6  24F3               	addwf	243,w,c
  4552  0028B8  6EF6               	movwf	tblptrl,c
  4553  0028BA  0E06               	movlw	high __npowers_
  4554  0028BC  20F4               	addwfc	244,w,c
  4555  0028BE  6EF7               	movwf	tblptrh,c
  4556  0028C0                     	if	0	;There are less than 3 active tblptr bytes
  4557  0028C0                     	endif
  4558  0028C0  0009               	tblrd		*+
  4559  0028C2  CFF5 F025          	movff	tablat,___flmul@a
  4560  0028C6  0009               	tblrd		*+
  4561  0028C8  CFF5 F026          	movff	tablat,___flmul@a+1
  4562  0028CC  0009               	tblrd		*+
  4563  0028CE  CFF5 F027          	movff	tablat,___flmul@a+2
  4564  0028D2  000A               	tblrd		*-
  4565  0028D4  CFF5 F028          	movff	tablat,___flmul@a+3
  4566  0028D8  0E00               	movlw	0
  4567  0028DA  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  4568  0028DC  0E64               	movlw	100
  4569  0028DE  6E0E               	movwf	___awdiv@divisor^0,c
  4570  0028E0  5042               	movf	scale@scl^0,w,c
  4571  0028E2  6E0C               	movwf	___awdiv@dividend^0,c
  4572  0028E4  6A0D               	clrf	(___awdiv@dividend+1)^0,c
  4573  0028E6  BE0C               	btfsc	___awdiv@dividend^0,7,c
  4574  0028E8  060D               	decf	(___awdiv@dividend+1)^0,f,c
  4575  0028EA  EC16  F027         	call	___awdiv	;wreg free
  4576  0028EE  0E12               	movlw	18
  4577  0028F0  260C               	addwf	?___awdiv^0,f,c
  4578  0028F2  500C               	movf	?___awdiv^0,w,c
  4579  0028F4  0D04               	mullw	4
  4580  0028F6  0E35               	movlw	low __npowers_
  4581  0028F8  24F3               	addwf	243,w,c
  4582  0028FA  6EF6               	movwf	tblptrl,c
  4583  0028FC  0E06               	movlw	high __npowers_
  4584  0028FE  20F4               	addwfc	244,w,c
  4585  002900  6EF7               	movwf	tblptrh,c
  4586  002902                     	if	0	;There are less than 3 active tblptr bytes
  4587  002902                     	endif
  4588  002902  0009               	tblrd		*+
  4589  002904  CFF5 F021          	movff	tablat,___flmul@b
  4590  002908  0009               	tblrd		*+
  4591  00290A  CFF5 F022          	movff	tablat,___flmul@b+1
  4592  00290E  0009               	tblrd		*+
  4593  002910  CFF5 F023          	movff	tablat,___flmul@b+2
  4594  002914  000A               	tblrd		*-
  4595  002916  CFF5 F024          	movff	tablat,___flmul@b+3
  4596  00291A  EC19  F012         	call	___flmul	;wreg free
  4597  00291E  C021  F03E         	movff	?___flmul,_scale$2477
  4598  002922  C022  F03F         	movff	?___flmul+1,_scale$2477+1
  4599  002926  C023  F040         	movff	?___flmul+2,_scale$2477+2
  4600  00292A  C024  F041         	movff	?___flmul+3,_scale$2477+3
  4601                           
  4602                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4603  00292E  C03E  F021         	movff	_scale$2477,___flmul@b
  4604  002932  C03F  F022         	movff	_scale$2477+1,___flmul@b+1
  4605  002936  C040  F023         	movff	_scale$2477+2,___flmul@b+2
  4606  00293A  C041  F024         	movff	_scale$2477+3,___flmul@b+3
  4607  00293E  0E00               	movlw	0
  4608  002940  6E09               	movwf	(___awmod@divisor+1)^0,c
  4609  002942  0E0A               	movlw	10
  4610  002944  6E08               	movwf	___awmod@divisor^0,c
  4611  002946  5042               	movf	scale@scl^0,w,c
  4612  002948  6E06               	movwf	___awmod@dividend^0,c
  4613  00294A  6A07               	clrf	(___awmod@dividend+1)^0,c
  4614  00294C  BE06               	btfsc	___awmod@dividend^0,7,c
  4615  00294E  0607               	decf	(___awmod@dividend+1)^0,f,c
  4616  002950  ECD4  F027         	call	___awmod	;wreg free
  4617  002954  5006               	movf	?___awmod^0,w,c
  4618  002956  0D04               	mullw	4
  4619  002958  0E35               	movlw	low __npowers_
  4620  00295A  24F3               	addwf	243,w,c
  4621  00295C  6EF6               	movwf	tblptrl,c
  4622  00295E  0E06               	movlw	high __npowers_
  4623  002960  20F4               	addwfc	244,w,c
  4624  002962  6EF7               	movwf	tblptrh,c
  4625  002964                     	if	0	;There are less than 3 active tblptr bytes
  4626  002964                     	endif
  4627  002964  0009               	tblrd		*+
  4628  002966  CFF5 F025          	movff	tablat,___flmul@a
  4629  00296A  0009               	tblrd		*+
  4630  00296C  CFF5 F026          	movff	tablat,___flmul@a+1
  4631  002970  0009               	tblrd		*+
  4632  002972  CFF5 F027          	movff	tablat,___flmul@a+2
  4633  002976  000A               	tblrd		*-
  4634  002978  CFF5 F028          	movff	tablat,___flmul@a+3
  4635  00297C  EC19  F012         	call	___flmul	;wreg free
  4636  002980  C021  F03A         	movff	?___flmul,?_scale
  4637  002984  C022  F03B         	movff	?___flmul+1,?_scale+1
  4638  002988  C023  F03C         	movff	?___flmul+2,?_scale+2
  4639  00298C  C024  F03D         	movff	?___flmul+3,?_scale+3
  4640  002990  EF33  F016         	goto	l558
  4641  002994                     l7377:
  4642                           
  4643                           ;doprnt.c: 440: else if(scl > 10)
  4644  002994  5042               	movf	scale@scl^0,w,c
  4645  002996  0A80               	xorlw	128
  4646  002998  0F75               	addlw	-139
  4647  00299A  A0D8               	btfss	status,0,c
  4648  00299C  EFD2  F014         	goto	u7781
  4649  0029A0  EFD4  F014         	goto	u7780
  4650  0029A4                     u7781:
  4651  0029A4  EF20  F015         	goto	l7383
  4652  0029A8                     u7780:
  4653  0029A8                     
  4654                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  4655  0029A8  0E00               	movlw	0
  4656  0029AA  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  4657  0029AC  0E0A               	movlw	10
  4658  0029AE  6E0E               	movwf	___awdiv@divisor^0,c
  4659  0029B0  5042               	movf	scale@scl^0,w,c
  4660  0029B2  6E0C               	movwf	___awdiv@dividend^0,c
  4661  0029B4  6A0D               	clrf	(___awdiv@dividend+1)^0,c
  4662  0029B6  BE0C               	btfsc	___awdiv@dividend^0,7,c
  4663  0029B8  060D               	decf	(___awdiv@dividend+1)^0,f,c
  4664  0029BA  EC16  F027         	call	___awdiv	;wreg free
  4665  0029BE  0E09               	movlw	9
  4666  0029C0  260C               	addwf	?___awdiv^0,f,c
  4667  0029C2  500C               	movf	?___awdiv^0,w,c
  4668  0029C4  0D04               	mullw	4
  4669  0029C6  0E35               	movlw	low __npowers_
  4670  0029C8  24F3               	addwf	243,w,c
  4671  0029CA  6EF6               	movwf	tblptrl,c
  4672  0029CC  0E06               	movlw	high __npowers_
  4673  0029CE  20F4               	addwfc	244,w,c
  4674  0029D0  6EF7               	movwf	tblptrh,c
  4675  0029D2                     	if	0	;There are less than 3 active tblptr bytes
  4676  0029D2                     	endif
  4677  0029D2  0009               	tblrd		*+
  4678  0029D4  CFF5 F021          	movff	tablat,___flmul@b
  4679  0029D8  0009               	tblrd		*+
  4680  0029DA  CFF5 F022          	movff	tablat,___flmul@b+1
  4681  0029DE  0009               	tblrd		*+
  4682  0029E0  CFF5 F023          	movff	tablat,___flmul@b+2
  4683  0029E4  000A               	tblrd		*-
  4684  0029E6  CFF5 F024          	movff	tablat,___flmul@b+3
  4685  0029EA  0E00               	movlw	0
  4686  0029EC  6E09               	movwf	(___awmod@divisor+1)^0,c
  4687  0029EE  0E0A               	movlw	10
  4688  0029F0  6E08               	movwf	___awmod@divisor^0,c
  4689  0029F2  5042               	movf	scale@scl^0,w,c
  4690  0029F4  6E06               	movwf	___awmod@dividend^0,c
  4691  0029F6  6A07               	clrf	(___awmod@dividend+1)^0,c
  4692  0029F8  BE06               	btfsc	___awmod@dividend^0,7,c
  4693  0029FA  0607               	decf	(___awmod@dividend+1)^0,f,c
  4694  0029FC  ECD4  F027         	call	___awmod	;wreg free
  4695  002A00  5006               	movf	?___awmod^0,w,c
  4696  002A02  0D04               	mullw	4
  4697  002A04  0E35               	movlw	low __npowers_
  4698  002A06  24F3               	addwf	243,w,c
  4699  002A08  6EF6               	movwf	tblptrl,c
  4700  002A0A  0E06               	movlw	high __npowers_
  4701  002A0C  20F4               	addwfc	244,w,c
  4702  002A0E  6EF7               	movwf	tblptrh,c
  4703  002A10                     	if	0	;There are less than 3 active tblptr bytes
  4704  002A10                     	endif
  4705  002A10  0009               	tblrd		*+
  4706  002A12  CFF5 F025          	movff	tablat,___flmul@a
  4707  002A16  0009               	tblrd		*+
  4708  002A18  CFF5 F026          	movff	tablat,___flmul@a+1
  4709  002A1C  0009               	tblrd		*+
  4710  002A1E  CFF5 F027          	movff	tablat,___flmul@a+2
  4711  002A22  000A               	tblrd		*-
  4712  002A24  CFF5 F028          	movff	tablat,___flmul@a+3
  4713  002A28  EC19  F012         	call	___flmul	;wreg free
  4714  002A2C  C021  F03A         	movff	?___flmul,?_scale
  4715  002A30  C022  F03B         	movff	?___flmul+1,?_scale+1
  4716  002A34  C023  F03C         	movff	?___flmul+2,?_scale+2
  4717  002A38  C024  F03D         	movff	?___flmul+3,?_scale+3
  4718  002A3C  EF33  F016         	goto	l558
  4719  002A40                     l7383:
  4720                           
  4721                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  4722  002A40  5042               	movf	scale@scl^0,w,c
  4723  002A42  0D04               	mullw	4
  4724  002A44  0E35               	movlw	low __npowers_
  4725  002A46  24F3               	addwf	243,w,c
  4726  002A48  6EF6               	movwf	tblptrl,c
  4727  002A4A  0E06               	movlw	high __npowers_
  4728  002A4C  20F4               	addwfc	244,w,c
  4729  002A4E  6EF7               	movwf	tblptrh,c
  4730  002A50                     	if	0	;There are less than 3 active tblptr bytes
  4731  002A50                     	endif
  4732  002A50  0009               	tblrd		*+
  4733  002A52  CFF5 F03A          	movff	tablat,?_scale
  4734  002A56  0009               	tblrd		*+
  4735  002A58  CFF5 F03B          	movff	tablat,?_scale+1
  4736  002A5C  0009               	tblrd		*+
  4737  002A5E  CFF5 F03C          	movff	tablat,?_scale+2
  4738  002A62  000A               	tblrd		*-
  4739  002A64  CFF5 F03D          	movff	tablat,?_scale+3
  4740  002A68  EF33  F016         	goto	l558
  4741  002A6C                     l7387:
  4742                           
  4743                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  4744  002A6C  5042               	movf	scale@scl^0,w,c
  4745  002A6E  0A80               	xorlw	128
  4746  002A70  0F12               	addlw	-238
  4747  002A72  A0D8               	btfss	status,0,c
  4748  002A74  EF3E  F015         	goto	u7791
  4749  002A78  EF40  F015         	goto	u7790
  4750  002A7C                     u7791:
  4751  002A7C  EFC9  F015         	goto	l7395
  4752  002A80                     u7790:
  4753  002A80                     
  4754                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  4755  002A80  0E00               	movlw	0
  4756  002A82  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  4757  002A84  0E0A               	movlw	10
  4758  002A86  6E0E               	movwf	___awdiv@divisor^0,c
  4759  002A88  0E00               	movlw	0
  4760  002A8A  6E09               	movwf	(___awmod@divisor+1)^0,c
  4761  002A8C  0E64               	movlw	100
  4762  002A8E  6E08               	movwf	___awmod@divisor^0,c
  4763  002A90  5042               	movf	scale@scl^0,w,c
  4764  002A92  6E06               	movwf	___awmod@dividend^0,c
  4765  002A94  6A07               	clrf	(___awmod@dividend+1)^0,c
  4766  002A96  BE06               	btfsc	___awmod@dividend^0,7,c
  4767  002A98  0607               	decf	(___awmod@dividend+1)^0,f,c
  4768  002A9A  ECD4  F027         	call	___awmod	;wreg free
  4769  002A9E  C006  F00C         	movff	?___awmod,___awdiv@dividend
  4770  002AA2  C007  F00D         	movff	?___awmod+1,___awdiv@dividend+1
  4771  002AA6  EC16  F027         	call	___awdiv	;wreg free
  4772  002AAA  0E09               	movlw	9
  4773  002AAC  260C               	addwf	?___awdiv^0,f,c
  4774  002AAE  500C               	movf	?___awdiv^0,w,c
  4775  002AB0  0D04               	mullw	4
  4776  002AB2  0E01               	movlw	low __powers_
  4777  002AB4  24F3               	addwf	243,w,c
  4778  002AB6  6EF6               	movwf	tblptrl,c
  4779  002AB8  0E06               	movlw	high __powers_
  4780  002ABA  20F4               	addwfc	244,w,c
  4781  002ABC  6EF7               	movwf	tblptrh,c
  4782  002ABE                     	if	0	;There are less than 3 active tblptr bytes
  4783  002ABE                     	endif
  4784  002ABE  0009               	tblrd		*+
  4785  002AC0  CFF5 F025          	movff	tablat,___flmul@a
  4786  002AC4  0009               	tblrd		*+
  4787  002AC6  CFF5 F026          	movff	tablat,___flmul@a+1
  4788  002ACA  0009               	tblrd		*+
  4789  002ACC  CFF5 F027          	movff	tablat,___flmul@a+2
  4790  002AD0  000A               	tblrd		*-
  4791  002AD2  CFF5 F028          	movff	tablat,___flmul@a+3
  4792  002AD6  0E00               	movlw	0
  4793  002AD8  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  4794  002ADA  0E64               	movlw	100
  4795  002ADC  6E0E               	movwf	___awdiv@divisor^0,c
  4796  002ADE  5042               	movf	scale@scl^0,w,c
  4797  002AE0  6E0C               	movwf	___awdiv@dividend^0,c
  4798  002AE2  6A0D               	clrf	(___awdiv@dividend+1)^0,c
  4799  002AE4  BE0C               	btfsc	___awdiv@dividend^0,7,c
  4800  002AE6  060D               	decf	(___awdiv@dividend+1)^0,f,c
  4801  002AE8  EC16  F027         	call	___awdiv	;wreg free
  4802  002AEC  0E12               	movlw	18
  4803  002AEE  260C               	addwf	?___awdiv^0,f,c
  4804  002AF0  500C               	movf	?___awdiv^0,w,c
  4805  002AF2  0D04               	mullw	4
  4806  002AF4  0E01               	movlw	low __powers_
  4807  002AF6  24F3               	addwf	243,w,c
  4808  002AF8  6EF6               	movwf	tblptrl,c
  4809  002AFA  0E06               	movlw	high __powers_
  4810  002AFC  20F4               	addwfc	244,w,c
  4811  002AFE  6EF7               	movwf	tblptrh,c
  4812  002B00                     	if	0	;There are less than 3 active tblptr bytes
  4813  002B00                     	endif
  4814  002B00  0009               	tblrd		*+
  4815  002B02  CFF5 F021          	movff	tablat,___flmul@b
  4816  002B06  0009               	tblrd		*+
  4817  002B08  CFF5 F022          	movff	tablat,___flmul@b+1
  4818  002B0C  0009               	tblrd		*+
  4819  002B0E  CFF5 F023          	movff	tablat,___flmul@b+2
  4820  002B12  000A               	tblrd		*-
  4821  002B14  CFF5 F024          	movff	tablat,___flmul@b+3
  4822  002B18  EC19  F012         	call	___flmul	;wreg free
  4823  002B1C  C021  F03E         	movff	?___flmul,_scale$2477
  4824  002B20  C022  F03F         	movff	?___flmul+1,_scale$2477+1
  4825  002B24  C023  F040         	movff	?___flmul+2,_scale$2477+2
  4826  002B28  C024  F041         	movff	?___flmul+3,_scale$2477+3
  4827                           
  4828                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  4829  002B2C  C03E  F021         	movff	_scale$2477,___flmul@b
  4830  002B30  C03F  F022         	movff	_scale$2477+1,___flmul@b+1
  4831  002B34  C040  F023         	movff	_scale$2477+2,___flmul@b+2
  4832  002B38  C041  F024         	movff	_scale$2477+3,___flmul@b+3
  4833  002B3C  0E00               	movlw	0
  4834  002B3E  6E09               	movwf	(___awmod@divisor+1)^0,c
  4835  002B40  0E0A               	movlw	10
  4836  002B42  6E08               	movwf	___awmod@divisor^0,c
  4837  002B44  5042               	movf	scale@scl^0,w,c
  4838  002B46  6E06               	movwf	___awmod@dividend^0,c
  4839  002B48  6A07               	clrf	(___awmod@dividend+1)^0,c
  4840  002B4A  BE06               	btfsc	___awmod@dividend^0,7,c
  4841  002B4C  0607               	decf	(___awmod@dividend+1)^0,f,c
  4842  002B4E  ECD4  F027         	call	___awmod	;wreg free
  4843  002B52  5006               	movf	?___awmod^0,w,c
  4844  002B54  0D04               	mullw	4
  4845  002B56  0E01               	movlw	low __powers_
  4846  002B58  24F3               	addwf	243,w,c
  4847  002B5A  6EF6               	movwf	tblptrl,c
  4848  002B5C  0E06               	movlw	high __powers_
  4849  002B5E  20F4               	addwfc	244,w,c
  4850  002B60  6EF7               	movwf	tblptrh,c
  4851  002B62                     	if	0	;There are less than 3 active tblptr bytes
  4852  002B62                     	endif
  4853  002B62  0009               	tblrd		*+
  4854  002B64  CFF5 F025          	movff	tablat,___flmul@a
  4855  002B68  0009               	tblrd		*+
  4856  002B6A  CFF5 F026          	movff	tablat,___flmul@a+1
  4857  002B6E  0009               	tblrd		*+
  4858  002B70  CFF5 F027          	movff	tablat,___flmul@a+2
  4859  002B74  000A               	tblrd		*-
  4860  002B76  CFF5 F028          	movff	tablat,___flmul@a+3
  4861  002B7A  EC19  F012         	call	___flmul	;wreg free
  4862  002B7E  C021  F03A         	movff	?___flmul,?_scale
  4863  002B82  C022  F03B         	movff	?___flmul+1,?_scale+1
  4864  002B86  C023  F03C         	movff	?___flmul+2,?_scale+2
  4865  002B8A  C024  F03D         	movff	?___flmul+3,?_scale+3
  4866  002B8E  EF33  F016         	goto	l558
  4867  002B92                     l7395:
  4868                           
  4869                           ;doprnt.c: 446: else if(scl > 10)
  4870  002B92  5042               	movf	scale@scl^0,w,c
  4871  002B94  0A80               	xorlw	128
  4872  002B96  0F75               	addlw	-139
  4873  002B98  A0D8               	btfss	status,0,c
  4874  002B9A  EFD1  F015         	goto	u7801
  4875  002B9E  EFD3  F015         	goto	u7800
  4876  002BA2                     u7801:
  4877  002BA2  EF1F  F016         	goto	l7401
  4878  002BA6                     u7800:
  4879  002BA6                     
  4880                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  4881  002BA6  0E00               	movlw	0
  4882  002BA8  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  4883  002BAA  0E0A               	movlw	10
  4884  002BAC  6E0E               	movwf	___awdiv@divisor^0,c
  4885  002BAE  5042               	movf	scale@scl^0,w,c
  4886  002BB0  6E0C               	movwf	___awdiv@dividend^0,c
  4887  002BB2  6A0D               	clrf	(___awdiv@dividend+1)^0,c
  4888  002BB4  BE0C               	btfsc	___awdiv@dividend^0,7,c
  4889  002BB6  060D               	decf	(___awdiv@dividend+1)^0,f,c
  4890  002BB8  EC16  F027         	call	___awdiv	;wreg free
  4891  002BBC  0E09               	movlw	9
  4892  002BBE  260C               	addwf	?___awdiv^0,f,c
  4893  002BC0  500C               	movf	?___awdiv^0,w,c
  4894  002BC2  0D04               	mullw	4
  4895  002BC4  0E01               	movlw	low __powers_
  4896  002BC6  24F3               	addwf	243,w,c
  4897  002BC8  6EF6               	movwf	tblptrl,c
  4898  002BCA  0E06               	movlw	high __powers_
  4899  002BCC  20F4               	addwfc	244,w,c
  4900  002BCE  6EF7               	movwf	tblptrh,c
  4901  002BD0                     	if	0	;There are less than 3 active tblptr bytes
  4902  002BD0                     	endif
  4903  002BD0  0009               	tblrd		*+
  4904  002BD2  CFF5 F021          	movff	tablat,___flmul@b
  4905  002BD6  0009               	tblrd		*+
  4906  002BD8  CFF5 F022          	movff	tablat,___flmul@b+1
  4907  002BDC  0009               	tblrd		*+
  4908  002BDE  CFF5 F023          	movff	tablat,___flmul@b+2
  4909  002BE2  000A               	tblrd		*-
  4910  002BE4  CFF5 F024          	movff	tablat,___flmul@b+3
  4911  002BE8  0E00               	movlw	0
  4912  002BEA  6E09               	movwf	(___awmod@divisor+1)^0,c
  4913  002BEC  0E0A               	movlw	10
  4914  002BEE  6E08               	movwf	___awmod@divisor^0,c
  4915  002BF0  5042               	movf	scale@scl^0,w,c
  4916  002BF2  6E06               	movwf	___awmod@dividend^0,c
  4917  002BF4  6A07               	clrf	(___awmod@dividend+1)^0,c
  4918  002BF6  BE06               	btfsc	___awmod@dividend^0,7,c
  4919  002BF8  0607               	decf	(___awmod@dividend+1)^0,f,c
  4920  002BFA  ECD4  F027         	call	___awmod	;wreg free
  4921  002BFE  5006               	movf	?___awmod^0,w,c
  4922  002C00  0D04               	mullw	4
  4923  002C02  0E01               	movlw	low __powers_
  4924  002C04  24F3               	addwf	243,w,c
  4925  002C06  6EF6               	movwf	tblptrl,c
  4926  002C08  0E06               	movlw	high __powers_
  4927  002C0A  20F4               	addwfc	244,w,c
  4928  002C0C  6EF7               	movwf	tblptrh,c
  4929  002C0E                     	if	0	;There are less than 3 active tblptr bytes
  4930  002C0E                     	endif
  4931  002C0E  0009               	tblrd		*+
  4932  002C10  CFF5 F025          	movff	tablat,___flmul@a
  4933  002C14  0009               	tblrd		*+
  4934  002C16  CFF5 F026          	movff	tablat,___flmul@a+1
  4935  002C1A  0009               	tblrd		*+
  4936  002C1C  CFF5 F027          	movff	tablat,___flmul@a+2
  4937  002C20  000A               	tblrd		*-
  4938  002C22  CFF5 F028          	movff	tablat,___flmul@a+3
  4939  002C26  EC19  F012         	call	___flmul	;wreg free
  4940  002C2A  C021  F03A         	movff	?___flmul,?_scale
  4941  002C2E  C022  F03B         	movff	?___flmul+1,?_scale+1
  4942  002C32  C023  F03C         	movff	?___flmul+2,?_scale+2
  4943  002C36  C024  F03D         	movff	?___flmul+3,?_scale+3
  4944  002C3A  EF33  F016         	goto	l558
  4945  002C3E                     l7401:
  4946                           
  4947                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  4948  002C3E  5042               	movf	scale@scl^0,w,c
  4949  002C40  0D04               	mullw	4
  4950  002C42  0E01               	movlw	low __powers_
  4951  002C44  24F3               	addwf	243,w,c
  4952  002C46  6EF6               	movwf	tblptrl,c
  4953  002C48  0E06               	movlw	high __powers_
  4954  002C4A  20F4               	addwfc	244,w,c
  4955  002C4C  6EF7               	movwf	tblptrh,c
  4956  002C4E                     	if	0	;There are less than 3 active tblptr bytes
  4957  002C4E                     	endif
  4958  002C4E  0009               	tblrd		*+
  4959  002C50  CFF5 F03A          	movff	tablat,?_scale
  4960  002C54  0009               	tblrd		*+
  4961  002C56  CFF5 F03B          	movff	tablat,?_scale+1
  4962  002C5A  0009               	tblrd		*+
  4963  002C5C  CFF5 F03C          	movff	tablat,?_scale+2
  4964  002C60  000A               	tblrd		*-
  4965  002C62  CFF5 F03D          	movff	tablat,?_scale+3
  4966  002C66                     l558:
  4967  002C66  0012               	return		;funcret
  4968  002C68                     __end_of_scale:
  4969                           	callstack 0
  4970                           
  4971 ;; *************** function ___awmod *****************
  4972 ;; Defined at:
  4973 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  dividend        2    5[COMRAM] int 
  4976 ;;  divisor         2    7[COMRAM] int 
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;  sign            1   10[COMRAM] unsigned char 
  4979 ;;  counter         1    9[COMRAM] unsigned char 
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  2    5[COMRAM] int 
  4982 ;; Registers used:
  4983 ;;		wreg, status,2, status,0
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4989 ;;      Params:         4       0       0       0       0       0       0
  4990 ;;      Locals:         2       0       0       0       0       0       0
  4991 ;;      Temps:          0       0       0       0       0       0       0
  4992 ;;      Totals:         6       0       0       0       0       0       0
  4993 ;;Total ram usage:        6 bytes
  4994 ;; Hardware stack levels used:    1
  4995 ;; Hardware stack levels required when called:    2
  4996 ;; This function calls:
  4997 ;;		Nothing
  4998 ;; This function is called by:
  4999 ;;		_scale
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003                           	psect	text3
  5004  004FA8                     __ptext3:
  5005                           	callstack 0
  5006  004FA8                     ___awmod:
  5007                           	callstack 26
  5008  004FA8  0E00               	movlw	0
  5009  004FAA  6E0B               	movwf	___awmod@sign^0,c
  5010  004FAC  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
  5011  004FAE  EFDD  F027         	goto	u7160
  5012  004FB2  EFDB  F027         	goto	u7161
  5013  004FB6                     u7161:
  5014  004FB6  EFE3  F027         	goto	l6783
  5015  004FBA                     u7160:
  5016  004FBA  6C06               	negf	___awmod@dividend^0,c
  5017  004FBC  1E07               	comf	(___awmod@dividend+1)^0,f,c
  5018  004FBE  B0D8               	btfsc	status,0,c
  5019  004FC0  2A07               	incf	(___awmod@dividend+1)^0,f,c
  5020  004FC2  0E01               	movlw	1
  5021  004FC4  6E0B               	movwf	___awmod@sign^0,c
  5022  004FC6                     l6783:
  5023  004FC6  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
  5024  004FC8  EFEA  F027         	goto	u7170
  5025  004FCC  EFE8  F027         	goto	u7171
  5026  004FD0                     u7171:
  5027  004FD0  EFEE  F027         	goto	l6787
  5028  004FD4                     u7170:
  5029  004FD4  6C08               	negf	___awmod@divisor^0,c
  5030  004FD6  1E09               	comf	(___awmod@divisor+1)^0,f,c
  5031  004FD8  B0D8               	btfsc	status,0,c
  5032  004FDA  2A09               	incf	(___awmod@divisor+1)^0,f,c
  5033  004FDC                     l6787:
  5034  004FDC  5008               	movf	___awmod@divisor^0,w,c
  5035  004FDE  1009               	iorwf	(___awmod@divisor+1)^0,w,c
  5036  004FE0  B4D8               	btfsc	status,2,c
  5037  004FE2  EFF5  F027         	goto	u7181
  5038  004FE6  EFF7  F027         	goto	u7180
  5039  004FEA                     u7181:
  5040  004FEA  EF1B  F028         	goto	l6803
  5041  004FEE                     u7180:
  5042  004FEE  0E01               	movlw	1
  5043  004FF0  6E0A               	movwf	___awmod@counter^0,c
  5044  004FF2  EFFF  F027         	goto	l6793
  5045  004FF6                     l6791:
  5046  004FF6  90D8               	bcf	status,0,c
  5047  004FF8  3608               	rlcf	___awmod@divisor^0,f,c
  5048  004FFA  3609               	rlcf	(___awmod@divisor+1)^0,f,c
  5049  004FFC  2A0A               	incf	___awmod@counter^0,f,c
  5050  004FFE                     l6793:
  5051  004FFE  AE09               	btfss	(___awmod@divisor+1)^0,7,c
  5052  005000  EF04  F028         	goto	u7191
  5053  005004  EF06  F028         	goto	u7190
  5054  005008                     u7191:
  5055  005008  EFFB  F027         	goto	l6791
  5056  00500C                     u7190:
  5057  00500C                     l6795:
  5058  00500C  5008               	movf	___awmod@divisor^0,w,c
  5059  00500E  5C06               	subwf	___awmod@dividend^0,w,c
  5060  005010  5009               	movf	(___awmod@divisor+1)^0,w,c
  5061  005012  5807               	subwfb	(___awmod@dividend+1)^0,w,c
  5062  005014  A0D8               	btfss	status,0,c
  5063  005016  EF0F  F028         	goto	u7201
  5064  00501A  EF11  F028         	goto	u7200
  5065  00501E                     u7201:
  5066  00501E  EF15  F028         	goto	l6799
  5067  005022                     u7200:
  5068  005022  5008               	movf	___awmod@divisor^0,w,c
  5069  005024  5E06               	subwf	___awmod@dividend^0,f,c
  5070  005026  5009               	movf	(___awmod@divisor+1)^0,w,c
  5071  005028  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
  5072  00502A                     l6799:
  5073  00502A  90D8               	bcf	status,0,c
  5074  00502C  3209               	rrcf	(___awmod@divisor+1)^0,f,c
  5075  00502E  3208               	rrcf	___awmod@divisor^0,f,c
  5076  005030  2E0A               	decfsz	___awmod@counter^0,f,c
  5077  005032  EF06  F028         	goto	l6795
  5078  005036                     l6803:
  5079  005036  500B               	movf	___awmod@sign^0,w,c
  5080  005038  B4D8               	btfsc	status,2,c
  5081  00503A  EF21  F028         	goto	u7211
  5082  00503E  EF23  F028         	goto	u7210
  5083  005042                     u7211:
  5084  005042  EF27  F028         	goto	l6807
  5085  005046                     u7210:
  5086  005046  6C06               	negf	___awmod@dividend^0,c
  5087  005048  1E07               	comf	(___awmod@dividend+1)^0,f,c
  5088  00504A  B0D8               	btfsc	status,0,c
  5089  00504C  2A07               	incf	(___awmod@dividend+1)^0,f,c
  5090  00504E                     l6807:
  5091  00504E  C006  F006         	movff	___awmod@dividend,?___awmod
  5092  005052  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  5093  005056  0012               	return		;funcret
  5094  005058                     __end_of___awmod:
  5095                           	callstack 0
  5096                           
  5097 ;; *************** function ___awdiv *****************
  5098 ;; Defined at:
  5099 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;  dividend        2   11[COMRAM] int 
  5102 ;;  divisor         2   13[COMRAM] int 
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;  quotient        2   17[COMRAM] int 
  5105 ;;  sign            1   16[COMRAM] unsigned char 
  5106 ;;  counter         1   15[COMRAM] unsigned char 
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  2   11[COMRAM] int 
  5109 ;; Registers used:
  5110 ;;		wreg, status,2, status,0
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5116 ;;      Params:         4       0       0       0       0       0       0
  5117 ;;      Locals:         4       0       0       0       0       0       0
  5118 ;;      Temps:          0       0       0       0       0       0       0
  5119 ;;      Totals:         8       0       0       0       0       0       0
  5120 ;;Total ram usage:        8 bytes
  5121 ;; Hardware stack levels used:    1
  5122 ;; Hardware stack levels required when called:    2
  5123 ;; This function calls:
  5124 ;;		Nothing
  5125 ;; This function is called by:
  5126 ;;		_scale
  5127 ;;		_sprintf
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           	psect	text4
  5132  004E2C                     __ptext4:
  5133                           	callstack 0
  5134  004E2C                     ___awdiv:
  5135                           	callstack 26
  5136  004E2C  0E00               	movlw	0
  5137  004E2E  6E11               	movwf	___awdiv@sign^0,c
  5138  004E30  BE0F               	btfsc	(___awdiv@divisor+1)^0,7,c
  5139  004E32  EF1F  F027         	goto	u7100
  5140  004E36  EF1D  F027         	goto	u7101
  5141  004E3A                     u7101:
  5142  004E3A  EF25  F027         	goto	l6739
  5143  004E3E                     u7100:
  5144  004E3E  6C0E               	negf	___awdiv@divisor^0,c
  5145  004E40  1E0F               	comf	(___awdiv@divisor+1)^0,f,c
  5146  004E42  B0D8               	btfsc	status,0,c
  5147  004E44  2A0F               	incf	(___awdiv@divisor+1)^0,f,c
  5148  004E46  0E01               	movlw	1
  5149  004E48  6E11               	movwf	___awdiv@sign^0,c
  5150  004E4A                     l6739:
  5151  004E4A  BE0D               	btfsc	(___awdiv@dividend+1)^0,7,c
  5152  004E4C  EF2C  F027         	goto	u7110
  5153  004E50  EF2A  F027         	goto	u7111
  5154  004E54                     u7111:
  5155  004E54  EF32  F027         	goto	l6745
  5156  004E58                     u7110:
  5157  004E58  6C0C               	negf	___awdiv@dividend^0,c
  5158  004E5A  1E0D               	comf	(___awdiv@dividend+1)^0,f,c
  5159  004E5C  B0D8               	btfsc	status,0,c
  5160  004E5E  2A0D               	incf	(___awdiv@dividend+1)^0,f,c
  5161  004E60  0E01               	movlw	1
  5162  004E62  1A11               	xorwf	___awdiv@sign^0,f,c
  5163  004E64                     l6745:
  5164  004E64  0E00               	movlw	0
  5165  004E66  6E13               	movwf	(___awdiv@quotient+1)^0,c
  5166  004E68  0E00               	movlw	0
  5167  004E6A  6E12               	movwf	___awdiv@quotient^0,c
  5168  004E6C  500E               	movf	___awdiv@divisor^0,w,c
  5169  004E6E  100F               	iorwf	(___awdiv@divisor+1)^0,w,c
  5170  004E70  B4D8               	btfsc	status,2,c
  5171  004E72  EF3D  F027         	goto	u7121
  5172  004E76  EF3F  F027         	goto	u7120
  5173  004E7A                     u7121:
  5174  004E7A  EF67  F027         	goto	l6767
  5175  004E7E                     u7120:
  5176  004E7E  0E01               	movlw	1
  5177  004E80  6E10               	movwf	___awdiv@counter^0,c
  5178  004E82  EF47  F027         	goto	l6753
  5179  004E86                     l6751:
  5180  004E86  90D8               	bcf	status,0,c
  5181  004E88  360E               	rlcf	___awdiv@divisor^0,f,c
  5182  004E8A  360F               	rlcf	(___awdiv@divisor+1)^0,f,c
  5183  004E8C  2A10               	incf	___awdiv@counter^0,f,c
  5184  004E8E                     l6753:
  5185  004E8E  AE0F               	btfss	(___awdiv@divisor+1)^0,7,c
  5186  004E90  EF4C  F027         	goto	u7131
  5187  004E94  EF4E  F027         	goto	u7130
  5188  004E98                     u7131:
  5189  004E98  EF43  F027         	goto	l6751
  5190  004E9C                     u7130:
  5191  004E9C                     l6755:
  5192  004E9C  90D8               	bcf	status,0,c
  5193  004E9E  3612               	rlcf	___awdiv@quotient^0,f,c
  5194  004EA0  3613               	rlcf	(___awdiv@quotient+1)^0,f,c
  5195  004EA2  500E               	movf	___awdiv@divisor^0,w,c
  5196  004EA4  5C0C               	subwf	___awdiv@dividend^0,w,c
  5197  004EA6  500F               	movf	(___awdiv@divisor+1)^0,w,c
  5198  004EA8  580D               	subwfb	(___awdiv@dividend+1)^0,w,c
  5199  004EAA  A0D8               	btfss	status,0,c
  5200  004EAC  EF5A  F027         	goto	u7141
  5201  004EB0  EF5C  F027         	goto	u7140
  5202  004EB4                     u7141:
  5203  004EB4  EF61  F027         	goto	l6763
  5204  004EB8                     u7140:
  5205  004EB8  500E               	movf	___awdiv@divisor^0,w,c
  5206  004EBA  5E0C               	subwf	___awdiv@dividend^0,f,c
  5207  004EBC  500F               	movf	(___awdiv@divisor+1)^0,w,c
  5208  004EBE  5A0D               	subwfb	(___awdiv@dividend+1)^0,f,c
  5209  004EC0  8012               	bsf	___awdiv@quotient^0,0,c
  5210  004EC2                     l6763:
  5211  004EC2  90D8               	bcf	status,0,c
  5212  004EC4  320F               	rrcf	(___awdiv@divisor+1)^0,f,c
  5213  004EC6  320E               	rrcf	___awdiv@divisor^0,f,c
  5214  004EC8  2E10               	decfsz	___awdiv@counter^0,f,c
  5215  004ECA  EF4E  F027         	goto	l6755
  5216  004ECE                     l6767:
  5217  004ECE  5011               	movf	___awdiv@sign^0,w,c
  5218  004ED0  B4D8               	btfsc	status,2,c
  5219  004ED2  EF6D  F027         	goto	u7151
  5220  004ED6  EF6F  F027         	goto	u7150
  5221  004EDA                     u7151:
  5222  004EDA  EF73  F027         	goto	l6771
  5223  004EDE                     u7150:
  5224  004EDE  6C12               	negf	___awdiv@quotient^0,c
  5225  004EE0  1E13               	comf	(___awdiv@quotient+1)^0,f,c
  5226  004EE2  B0D8               	btfsc	status,0,c
  5227  004EE4  2A13               	incf	(___awdiv@quotient+1)^0,f,c
  5228  004EE6                     l6771:
  5229  004EE6  C012  F00C         	movff	___awdiv@quotient,?___awdiv
  5230  004EEA  C013  F00D         	movff	___awdiv@quotient+1,?___awdiv+1
  5231  004EEE  0012               	return		;funcret
  5232  004EF0                     __end_of___awdiv:
  5233                           	callstack 0
  5234                           
  5235 ;; *************** function _isdigit *****************
  5236 ;; Defined at:
  5237 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;  c               1    wreg     unsigned char 
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;  c               1    7[COMRAM] unsigned char 
  5242 ;; Return value:  Size  Location     Type
  5243 ;;		None               void
  5244 ;; Registers used:
  5245 ;;		wreg, status,2, status,0
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5251 ;;      Params:         0       0       0       0       0       0       0
  5252 ;;      Locals:         2       0       0       0       0       0       0
  5253 ;;      Temps:          1       0       0       0       0       0       0
  5254 ;;      Totals:         3       0       0       0       0       0       0
  5255 ;;Total ram usage:        3 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; Hardware stack levels required when called:    2
  5258 ;; This function calls:
  5259 ;;		Nothing
  5260 ;; This function is called by:
  5261 ;;		_sprintf
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           	psect	text5
  5266  0055E4                     __ptext5:
  5267                           	callstack 0
  5268  0055E4                     _isdigit:
  5269                           	callstack 27
  5270                           
  5271                           ;incstack = 0
  5272                           ;isdigit@c stored from wreg
  5273  0055E4  6E08               	movwf	isdigit@c^0,c
  5274  0055E6  0E00               	movlw	0
  5275  0055E8  6E07               	movwf	_isdigit$2278^0,c
  5276  0055EA  0E3A               	movlw	58
  5277  0055EC  6008               	cpfslt	isdigit@c^0,c
  5278  0055EE  EFFB  F02A         	goto	u7811
  5279  0055F2  EFFD  F02A         	goto	u7810
  5280  0055F6                     u7811:
  5281  0055F6  EF07  F02B         	goto	l7413
  5282  0055FA                     u7810:
  5283  0055FA  0E2F               	movlw	47
  5284  0055FC  6408               	cpfsgt	isdigit@c^0,c
  5285  0055FE  EF03  F02B         	goto	u7821
  5286  005602  EF05  F02B         	goto	u7820
  5287  005606                     u7821:
  5288  005606  EF07  F02B         	goto	l7413
  5289  00560A                     u7820:
  5290  00560A  0E01               	movlw	1
  5291  00560C  6E07               	movwf	_isdigit$2278^0,c
  5292  00560E                     l7413:
  5293  00560E  C007  F006         	movff	_isdigit$2278,??_isdigit
  5294  005612  3006               	rrcf	??_isdigit^0,w,c
  5295  005614  0012               	return		;funcret
  5296  005616                     __end_of_isdigit:
  5297                           	callstack 0
  5298                           
  5299 ;; *************** function _fround *****************
  5300 ;; Defined at:
  5301 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  prec            1    wreg     unsigned char 
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;  prec            1   69[COMRAM] unsigned char 
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  4   57[COMRAM] unsigned char 
  5308 ;; Registers used:
  5309 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5315 ;;      Params:         4       0       0       0       0       0       0
  5316 ;;      Locals:         9       0       0       0       0       0       0
  5317 ;;      Temps:          0       0       0       0       0       0       0
  5318 ;;      Totals:        13       0       0       0       0       0       0
  5319 ;;Total ram usage:       13 bytes
  5320 ;; Hardware stack levels used:    1
  5321 ;; Hardware stack levels required when called:    3
  5322 ;; This function calls:
  5323 ;;		___flmul
  5324 ;;		___lwdiv
  5325 ;;		___lwmod
  5326 ;; This function is called by:
  5327 ;;		_sprintf
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           	psect	text6
  5332  003002                     __ptext6:
  5333                           	callstack 0
  5334  003002                     _fround:
  5335                           	callstack 26
  5336                           
  5337                           ;incstack = 0
  5338                           ;fround@prec stored from wreg
  5339  003002  6E46               	movwf	fround@prec^0,c
  5340  003004                     
  5341                           ;doprnt.c: 421: if(prec>=110)
  5342  003004  0E6D               	movlw	109
  5343  003006  6446               	cpfsgt	fround@prec^0,c
  5344  003008  EF08  F018         	goto	u7741
  5345  00300C  EF0A  F018         	goto	u7740
  5346  003010                     u7741:
  5347  003010  EFB7  F018         	goto	l7357
  5348  003014                     u7740:
  5349  003014                     
  5350                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  5351  003014  0E00               	movlw	0
  5352  003016  6E25               	movwf	___flmul@a^0,c
  5353  003018  0E00               	movlw	0
  5354  00301A  6E26               	movwf	(___flmul@a+1)^0,c
  5355  00301C  0E00               	movlw	0
  5356  00301E  6E27               	movwf	(___flmul@a+2)^0,c
  5357  003020  0E3F               	movlw	63
  5358  003022  6E28               	movwf	(___flmul@a+3)^0,c
  5359  003024  0E00               	movlw	0
  5360  003026  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  5361  003028  0E64               	movlw	100
  5362  00302A  6E0E               	movwf	___lwdiv@divisor^0,c
  5363  00302C  C046  F00C         	movff	fround@prec,___lwdiv@dividend
  5364  003030  6A0D               	clrf	(___lwdiv@dividend+1)^0,c
  5365  003032  ECDB  F029         	call	___lwdiv	;wreg free
  5366  003036  90D8               	bcf	status,0,c
  5367  003038  360C               	rlcf	?___lwdiv^0,f,c
  5368  00303A  360D               	rlcf	(?___lwdiv+1)^0,f,c
  5369  00303C  90D8               	bcf	status,0,c
  5370  00303E  360C               	rlcf	?___lwdiv^0,f,c
  5371  003040  360D               	rlcf	(?___lwdiv+1)^0,f,c
  5372  003042  0E48               	movlw	72
  5373  003044  260C               	addwf	?___lwdiv^0,f,c
  5374  003046  0E00               	movlw	0
  5375  003048  220D               	addwfc	(?___lwdiv+1)^0,f,c
  5376  00304A  0E35               	movlw	low __npowers_
  5377  00304C  240C               	addwf	?___lwdiv^0,w,c
  5378  00304E  6EF6               	movwf	tblptrl,c
  5379  003050  0E06               	movlw	high __npowers_
  5380  003052  200D               	addwfc	(?___lwdiv+1)^0,w,c
  5381  003054  6EF7               	movwf	tblptrh,c
  5382  003056                     	if	0	;There are less than 3 active tblptr bytes
  5383  003056                     	endif
  5384  003056  0009               	tblrd		*+
  5385  003058  CFF5 F021          	movff	tablat,___flmul@b
  5386  00305C  0009               	tblrd		*+
  5387  00305E  CFF5 F022          	movff	tablat,___flmul@b+1
  5388  003062  0009               	tblrd		*+
  5389  003064  CFF5 F023          	movff	tablat,___flmul@b+2
  5390  003068  000A               	tblrd		*-
  5391  00306A  CFF5 F024          	movff	tablat,___flmul@b+3
  5392  00306E  EC19  F012         	call	___flmul	;wreg free
  5393  003072  C021  F042         	movff	?___flmul,_fround$2475
  5394  003076  C022  F043         	movff	?___flmul+1,_fround$2475+1
  5395  00307A  C023  F044         	movff	?___flmul+2,_fround$2475+2
  5396  00307E  C024  F045         	movff	?___flmul+3,_fround$2475+3
  5397                           
  5398                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  5399  003082  0E00               	movlw	0
  5400  003084  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  5401  003086  0E0A               	movlw	10
  5402  003088  6E0E               	movwf	___lwdiv@divisor^0,c
  5403  00308A  0E00               	movlw	0
  5404  00308C  6E09               	movwf	(___lwmod@divisor+1)^0,c
  5405  00308E  0E64               	movlw	100
  5406  003090  6E08               	movwf	___lwmod@divisor^0,c
  5407  003092  C046  F006         	movff	fround@prec,___lwmod@dividend
  5408  003096  6A07               	clrf	(___lwmod@dividend+1)^0,c
  5409  003098  EC81  F02A         	call	___lwmod	;wreg free
  5410  00309C  C006  F00C         	movff	?___lwmod,___lwdiv@dividend
  5411  0030A0  C007  F00D         	movff	?___lwmod+1,___lwdiv@dividend+1
  5412  0030A4  ECDB  F029         	call	___lwdiv	;wreg free
  5413  0030A8  90D8               	bcf	status,0,c
  5414  0030AA  360C               	rlcf	?___lwdiv^0,f,c
  5415  0030AC  360D               	rlcf	(?___lwdiv+1)^0,f,c
  5416  0030AE  90D8               	bcf	status,0,c
  5417  0030B0  360C               	rlcf	?___lwdiv^0,f,c
  5418  0030B2  360D               	rlcf	(?___lwdiv+1)^0,f,c
  5419  0030B4  0E24               	movlw	36
  5420  0030B6  260C               	addwf	?___lwdiv^0,f,c
  5421  0030B8  0E00               	movlw	0
  5422  0030BA  220D               	addwfc	(?___lwdiv+1)^0,f,c
  5423  0030BC  0E35               	movlw	low __npowers_
  5424  0030BE  240C               	addwf	?___lwdiv^0,w,c
  5425  0030C0  6EF6               	movwf	tblptrl,c
  5426  0030C2  0E06               	movlw	high __npowers_
  5427  0030C4  200D               	addwfc	(?___lwdiv+1)^0,w,c
  5428  0030C6  6EF7               	movwf	tblptrh,c
  5429  0030C8                     	if	0	;There are less than 3 active tblptr bytes
  5430  0030C8                     	endif
  5431  0030C8  0009               	tblrd		*+
  5432  0030CA  CFF5 F025          	movff	tablat,___flmul@a
  5433  0030CE  0009               	tblrd		*+
  5434  0030D0  CFF5 F026          	movff	tablat,___flmul@a+1
  5435  0030D4  0009               	tblrd		*+
  5436  0030D6  CFF5 F027          	movff	tablat,___flmul@a+2
  5437  0030DA  000A               	tblrd		*-
  5438  0030DC  CFF5 F028          	movff	tablat,___flmul@a+3
  5439  0030E0  C042  F021         	movff	_fround$2475,___flmul@b
  5440  0030E4  C043  F022         	movff	_fround$2475+1,___flmul@b+1
  5441  0030E8  C044  F023         	movff	_fround$2475+2,___flmul@b+2
  5442  0030EC  C045  F024         	movff	_fround$2475+3,___flmul@b+3
  5443  0030F0  EC19  F012         	call	___flmul	;wreg free
  5444  0030F4  C021  F03E         	movff	?___flmul,_fround$2476
  5445  0030F8  C022  F03F         	movff	?___flmul+1,_fround$2476+1
  5446  0030FC  C023  F040         	movff	?___flmul+2,_fround$2476+2
  5447  003100  C024  F041         	movff	?___flmul+3,_fround$2476+3
  5448                           
  5449                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  5450  003104  C03E  F021         	movff	_fround$2476,___flmul@b
  5451  003108  C03F  F022         	movff	_fround$2476+1,___flmul@b+1
  5452  00310C  C040  F023         	movff	_fround$2476+2,___flmul@b+2
  5453  003110  C041  F024         	movff	_fround$2476+3,___flmul@b+3
  5454  003114  0E00               	movlw	0
  5455  003116  6E09               	movwf	(___lwmod@divisor+1)^0,c
  5456  003118  0E0A               	movlw	10
  5457  00311A  6E08               	movwf	___lwmod@divisor^0,c
  5458  00311C  C046  F006         	movff	fround@prec,___lwmod@dividend
  5459  003120  6A07               	clrf	(___lwmod@dividend+1)^0,c
  5460  003122  EC81  F02A         	call	___lwmod	;wreg free
  5461  003126  90D8               	bcf	status,0,c
  5462  003128  3606               	rlcf	?___lwmod^0,f,c
  5463  00312A  3607               	rlcf	(?___lwmod+1)^0,f,c
  5464  00312C  90D8               	bcf	status,0,c
  5465  00312E  3606               	rlcf	?___lwmod^0,f,c
  5466  003130  3607               	rlcf	(?___lwmod+1)^0,f,c
  5467  003132  0E35               	movlw	low __npowers_
  5468  003134  2406               	addwf	?___lwmod^0,w,c
  5469  003136  6EF6               	movwf	tblptrl,c
  5470  003138  0E06               	movlw	high __npowers_
  5471  00313A  2007               	addwfc	(?___lwmod+1)^0,w,c
  5472  00313C  6EF7               	movwf	tblptrh,c
  5473  00313E                     	if	0	;There are less than 3 active tblptr bytes
  5474  00313E                     	endif
  5475  00313E  0009               	tblrd		*+
  5476  003140  CFF5 F025          	movff	tablat,___flmul@a
  5477  003144  0009               	tblrd		*+
  5478  003146  CFF5 F026          	movff	tablat,___flmul@a+1
  5479  00314A  0009               	tblrd		*+
  5480  00314C  CFF5 F027          	movff	tablat,___flmul@a+2
  5481  003150  000A               	tblrd		*-
  5482  003152  CFF5 F028          	movff	tablat,___flmul@a+3
  5483  003156  EC19  F012         	call	___flmul	;wreg free
  5484  00315A  C021  F03A         	movff	?___flmul,?_fround
  5485  00315E  C022  F03B         	movff	?___flmul+1,?_fround+1
  5486  003162  C023  F03C         	movff	?___flmul+2,?_fround+2
  5487  003166  C024  F03D         	movff	?___flmul+3,?_fround+3
  5488  00316A  EF51  F019         	goto	l551
  5489  00316E                     l7357:
  5490                           
  5491                           ;doprnt.c: 423: else if(prec > 10)
  5492  00316E  0E0A               	movlw	10
  5493  003170  6446               	cpfsgt	fround@prec^0,c
  5494  003172  EFBD  F018         	goto	u7751
  5495  003176  EFBF  F018         	goto	u7750
  5496  00317A                     u7751:
  5497  00317A  EF2B  F019         	goto	l7363
  5498  00317E                     u7750:
  5499  00317E                     
  5500                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5501  00317E  0E00               	movlw	0
  5502  003180  6E25               	movwf	___flmul@a^0,c
  5503  003182  0E00               	movlw	0
  5504  003184  6E26               	movwf	(___flmul@a+1)^0,c
  5505  003186  0E00               	movlw	0
  5506  003188  6E27               	movwf	(___flmul@a+2)^0,c
  5507  00318A  0E3F               	movlw	63
  5508  00318C  6E28               	movwf	(___flmul@a+3)^0,c
  5509  00318E  0E00               	movlw	0
  5510  003190  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  5511  003192  0E0A               	movlw	10
  5512  003194  6E0E               	movwf	___lwdiv@divisor^0,c
  5513  003196  C046  F00C         	movff	fround@prec,___lwdiv@dividend
  5514  00319A  6A0D               	clrf	(___lwdiv@dividend+1)^0,c
  5515  00319C  ECDB  F029         	call	___lwdiv	;wreg free
  5516  0031A0  90D8               	bcf	status,0,c
  5517  0031A2  360C               	rlcf	?___lwdiv^0,f,c
  5518  0031A4  360D               	rlcf	(?___lwdiv+1)^0,f,c
  5519  0031A6  90D8               	bcf	status,0,c
  5520  0031A8  360C               	rlcf	?___lwdiv^0,f,c
  5521  0031AA  360D               	rlcf	(?___lwdiv+1)^0,f,c
  5522  0031AC  0E24               	movlw	36
  5523  0031AE  260C               	addwf	?___lwdiv^0,f,c
  5524  0031B0  0E00               	movlw	0
  5525  0031B2  220D               	addwfc	(?___lwdiv+1)^0,f,c
  5526  0031B4  0E35               	movlw	low __npowers_
  5527  0031B6  240C               	addwf	?___lwdiv^0,w,c
  5528  0031B8  6EF6               	movwf	tblptrl,c
  5529  0031BA  0E06               	movlw	high __npowers_
  5530  0031BC  200D               	addwfc	(?___lwdiv+1)^0,w,c
  5531  0031BE  6EF7               	movwf	tblptrh,c
  5532  0031C0                     	if	0	;There are less than 3 active tblptr bytes
  5533  0031C0                     	endif
  5534  0031C0  0009               	tblrd		*+
  5535  0031C2  CFF5 F021          	movff	tablat,___flmul@b
  5536  0031C6  0009               	tblrd		*+
  5537  0031C8  CFF5 F022          	movff	tablat,___flmul@b+1
  5538  0031CC  0009               	tblrd		*+
  5539  0031CE  CFF5 F023          	movff	tablat,___flmul@b+2
  5540  0031D2  000A               	tblrd		*-
  5541  0031D4  CFF5 F024          	movff	tablat,___flmul@b+3
  5542  0031D8  EC19  F012         	call	___flmul	;wreg free
  5543  0031DC  C021  F042         	movff	?___flmul,_fround$2475
  5544  0031E0  C022  F043         	movff	?___flmul+1,_fround$2475+1
  5545  0031E4  C023  F044         	movff	?___flmul+2,_fround$2475+2
  5546  0031E8  C024  F045         	movff	?___flmul+3,_fround$2475+3
  5547                           
  5548                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5549  0031EC  C042  F021         	movff	_fround$2475,___flmul@b
  5550  0031F0  C043  F022         	movff	_fround$2475+1,___flmul@b+1
  5551  0031F4  C044  F023         	movff	_fround$2475+2,___flmul@b+2
  5552  0031F8  C045  F024         	movff	_fround$2475+3,___flmul@b+3
  5553  0031FC  0E00               	movlw	0
  5554  0031FE  6E09               	movwf	(___lwmod@divisor+1)^0,c
  5555  003200  0E0A               	movlw	10
  5556  003202  6E08               	movwf	___lwmod@divisor^0,c
  5557  003204  C046  F006         	movff	fround@prec,___lwmod@dividend
  5558  003208  6A07               	clrf	(___lwmod@dividend+1)^0,c
  5559  00320A  EC81  F02A         	call	___lwmod	;wreg free
  5560  00320E  90D8               	bcf	status,0,c
  5561  003210  3606               	rlcf	?___lwmod^0,f,c
  5562  003212  3607               	rlcf	(?___lwmod+1)^0,f,c
  5563  003214  90D8               	bcf	status,0,c
  5564  003216  3606               	rlcf	?___lwmod^0,f,c
  5565  003218  3607               	rlcf	(?___lwmod+1)^0,f,c
  5566  00321A  0E35               	movlw	low __npowers_
  5567  00321C  2406               	addwf	?___lwmod^0,w,c
  5568  00321E  6EF6               	movwf	tblptrl,c
  5569  003220  0E06               	movlw	high __npowers_
  5570  003222  2007               	addwfc	(?___lwmod+1)^0,w,c
  5571  003224  6EF7               	movwf	tblptrh,c
  5572  003226                     	if	0	;There are less than 3 active tblptr bytes
  5573  003226                     	endif
  5574  003226  0009               	tblrd		*+
  5575  003228  CFF5 F025          	movff	tablat,___flmul@a
  5576  00322C  0009               	tblrd		*+
  5577  00322E  CFF5 F026          	movff	tablat,___flmul@a+1
  5578  003232  0009               	tblrd		*+
  5579  003234  CFF5 F027          	movff	tablat,___flmul@a+2
  5580  003238  000A               	tblrd		*-
  5581  00323A  CFF5 F028          	movff	tablat,___flmul@a+3
  5582  00323E  EC19  F012         	call	___flmul	;wreg free
  5583  003242  C021  F03A         	movff	?___flmul,?_fround
  5584  003246  C022  F03B         	movff	?___flmul+1,?_fround+1
  5585  00324A  C023  F03C         	movff	?___flmul+2,?_fround+2
  5586  00324E  C024  F03D         	movff	?___flmul+3,?_fround+3
  5587  003252  EF51  F019         	goto	l551
  5588  003256                     l7363:
  5589                           
  5590                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  5591  003256  5046               	movf	fround@prec^0,w,c
  5592  003258  0D04               	mullw	4
  5593  00325A  0E35               	movlw	low __npowers_
  5594  00325C  24F3               	addwf	243,w,c
  5595  00325E  6EF6               	movwf	tblptrl,c
  5596  003260  0E06               	movlw	high __npowers_
  5597  003262  20F4               	addwfc	244,w,c
  5598  003264  6EF7               	movwf	tblptrh,c
  5599  003266                     	if	0	;There are less than 3 active tblptr bytes
  5600  003266                     	endif
  5601  003266  0009               	tblrd		*+
  5602  003268  CFF5 F021          	movff	tablat,___flmul@b
  5603  00326C  0009               	tblrd		*+
  5604  00326E  CFF5 F022          	movff	tablat,___flmul@b+1
  5605  003272  0009               	tblrd		*+
  5606  003274  CFF5 F023          	movff	tablat,___flmul@b+2
  5607  003278  000A               	tblrd		*-
  5608  00327A  CFF5 F024          	movff	tablat,___flmul@b+3
  5609  00327E  0E00               	movlw	0
  5610  003280  6E25               	movwf	___flmul@a^0,c
  5611  003282  0E00               	movlw	0
  5612  003284  6E26               	movwf	(___flmul@a+1)^0,c
  5613  003286  0E00               	movlw	0
  5614  003288  6E27               	movwf	(___flmul@a+2)^0,c
  5615  00328A  0E3F               	movlw	63
  5616  00328C  6E28               	movwf	(___flmul@a+3)^0,c
  5617  00328E  EC19  F012         	call	___flmul	;wreg free
  5618  003292  C021  F03A         	movff	?___flmul,?_fround
  5619  003296  C022  F03B         	movff	?___flmul+1,?_fround+1
  5620  00329A  C023  F03C         	movff	?___flmul+2,?_fround+2
  5621  00329E  C024  F03D         	movff	?___flmul+3,?_fround+3
  5622  0032A2                     l551:
  5623  0032A2  0012               	return		;funcret
  5624  0032A4                     __end_of_fround:
  5625                           	callstack 0
  5626                           
  5627 ;; *************** function ___lwmod *****************
  5628 ;; Defined at:
  5629 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;  dividend        2    5[COMRAM] unsigned int 
  5632 ;;  divisor         2    7[COMRAM] unsigned int 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;  counter         1    9[COMRAM] unsigned char 
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  2    5[COMRAM] unsigned int 
  5637 ;; Registers used:
  5638 ;;		wreg, status,2, status,0
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5644 ;;      Params:         4       0       0       0       0       0       0
  5645 ;;      Locals:         1       0       0       0       0       0       0
  5646 ;;      Temps:          0       0       0       0       0       0       0
  5647 ;;      Totals:         5       0       0       0       0       0       0
  5648 ;;Total ram usage:        5 bytes
  5649 ;; Hardware stack levels used:    1
  5650 ;; Hardware stack levels required when called:    2
  5651 ;; This function calls:
  5652 ;;		Nothing
  5653 ;; This function is called by:
  5654 ;;		_fround
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658                           	psect	text7
  5659  005502                     __ptext7:
  5660                           	callstack 0
  5661  005502                     ___lwmod:
  5662                           	callstack 26
  5663  005502  5008               	movf	___lwmod@divisor^0,w,c
  5664  005504  1009               	iorwf	(___lwmod@divisor+1)^0,w,c
  5665  005506  B4D8               	btfsc	status,2,c
  5666  005508  EF88  F02A         	goto	u7251
  5667  00550C  EF8A  F02A         	goto	u7250
  5668  005510                     u7251:
  5669  005510  EFAE  F02A         	goto	l1194
  5670  005514                     u7250:
  5671  005514  0E01               	movlw	1
  5672  005516  6E0A               	movwf	___lwmod@counter^0,c
  5673  005518  EF92  F02A         	goto	l6839
  5674  00551C                     l6837:
  5675  00551C  90D8               	bcf	status,0,c
  5676  00551E  3608               	rlcf	___lwmod@divisor^0,f,c
  5677  005520  3609               	rlcf	(___lwmod@divisor+1)^0,f,c
  5678  005522  2A0A               	incf	___lwmod@counter^0,f,c
  5679  005524                     l6839:
  5680  005524  AE09               	btfss	(___lwmod@divisor+1)^0,7,c
  5681  005526  EF97  F02A         	goto	u7261
  5682  00552A  EF99  F02A         	goto	u7260
  5683  00552E                     u7261:
  5684  00552E  EF8E  F02A         	goto	l6837
  5685  005532                     u7260:
  5686  005532                     l6841:
  5687  005532  5008               	movf	___lwmod@divisor^0,w,c
  5688  005534  5C06               	subwf	___lwmod@dividend^0,w,c
  5689  005536  5009               	movf	(___lwmod@divisor+1)^0,w,c
  5690  005538  5807               	subwfb	(___lwmod@dividend+1)^0,w,c
  5691  00553A  A0D8               	btfss	status,0,c
  5692  00553C  EFA2  F02A         	goto	u7271
  5693  005540  EFA4  F02A         	goto	u7270
  5694  005544                     u7271:
  5695  005544  EFA8  F02A         	goto	l6845
  5696  005548                     u7270:
  5697  005548  5008               	movf	___lwmod@divisor^0,w,c
  5698  00554A  5E06               	subwf	___lwmod@dividend^0,f,c
  5699  00554C  5009               	movf	(___lwmod@divisor+1)^0,w,c
  5700  00554E  5A07               	subwfb	(___lwmod@dividend+1)^0,f,c
  5701  005550                     l6845:
  5702  005550  90D8               	bcf	status,0,c
  5703  005552  3209               	rrcf	(___lwmod@divisor+1)^0,f,c
  5704  005554  3208               	rrcf	___lwmod@divisor^0,f,c
  5705  005556  2E0A               	decfsz	___lwmod@counter^0,f,c
  5706  005558  EF99  F02A         	goto	l6841
  5707  00555C                     l1194:
  5708  00555C  C006  F006         	movff	___lwmod@dividend,?___lwmod
  5709  005560  C007  F007         	movff	___lwmod@dividend+1,?___lwmod+1
  5710  005564  0012               	return		;funcret
  5711  005566                     __end_of___lwmod:
  5712                           	callstack 0
  5713                           
  5714 ;; *************** function ___lwdiv *****************
  5715 ;; Defined at:
  5716 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  dividend        2   11[COMRAM] unsigned int 
  5719 ;;  divisor         2   13[COMRAM] unsigned int 
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;  quotient        2   16[COMRAM] unsigned int 
  5722 ;;  counter         1   15[COMRAM] unsigned char 
  5723 ;; Return value:  Size  Location     Type
  5724 ;;                  2   11[COMRAM] unsigned int 
  5725 ;; Registers used:
  5726 ;;		wreg, status,2, status,0
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5732 ;;      Params:         4       0       0       0       0       0       0
  5733 ;;      Locals:         3       0       0       0       0       0       0
  5734 ;;      Temps:          0       0       0       0       0       0       0
  5735 ;;      Totals:         7       0       0       0       0       0       0
  5736 ;;Total ram usage:        7 bytes
  5737 ;; Hardware stack levels used:    1
  5738 ;; Hardware stack levels required when called:    2
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_main
  5743 ;;		_fround
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text8
  5748  0053B6                     __ptext8:
  5749                           	callstack 0
  5750  0053B6                     ___lwdiv:
  5751                           	callstack 26
  5752  0053B6  0E00               	movlw	0
  5753  0053B8  6E12               	movwf	(___lwdiv@quotient+1)^0,c
  5754  0053BA  0E00               	movlw	0
  5755  0053BC  6E11               	movwf	___lwdiv@quotient^0,c
  5756  0053BE  500E               	movf	___lwdiv@divisor^0,w,c
  5757  0053C0  100F               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5758  0053C2  B4D8               	btfsc	status,2,c
  5759  0053C4  EFE6  F029         	goto	u7221
  5760  0053C8  EFE8  F029         	goto	u7220
  5761  0053CC                     u7221:
  5762  0053CC  EF10  F02A         	goto	l1184
  5763  0053D0                     u7220:
  5764  0053D0  0E01               	movlw	1
  5765  0053D2  6E10               	movwf	___lwdiv@counter^0,c
  5766  0053D4  EFF0  F029         	goto	l6819
  5767  0053D8                     l6817:
  5768  0053D8  90D8               	bcf	status,0,c
  5769  0053DA  360E               	rlcf	___lwdiv@divisor^0,f,c
  5770  0053DC  360F               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5771  0053DE  2A10               	incf	___lwdiv@counter^0,f,c
  5772  0053E0                     l6819:
  5773  0053E0  AE0F               	btfss	(___lwdiv@divisor+1)^0,7,c
  5774  0053E2  EFF5  F029         	goto	u7231
  5775  0053E6  EFF7  F029         	goto	u7230
  5776  0053EA                     u7231:
  5777  0053EA  EFEC  F029         	goto	l6817
  5778  0053EE                     u7230:
  5779  0053EE                     l6821:
  5780  0053EE  90D8               	bcf	status,0,c
  5781  0053F0  3611               	rlcf	___lwdiv@quotient^0,f,c
  5782  0053F2  3612               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5783  0053F4  500E               	movf	___lwdiv@divisor^0,w,c
  5784  0053F6  5C0C               	subwf	___lwdiv@dividend^0,w,c
  5785  0053F8  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  5786  0053FA  580D               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5787  0053FC  A0D8               	btfss	status,0,c
  5788  0053FE  EF03  F02A         	goto	u7241
  5789  005402  EF05  F02A         	goto	u7240
  5790  005406                     u7241:
  5791  005406  EF0A  F02A         	goto	l6829
  5792  00540A                     u7240:
  5793  00540A  500E               	movf	___lwdiv@divisor^0,w,c
  5794  00540C  5E0C               	subwf	___lwdiv@dividend^0,f,c
  5795  00540E  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  5796  005410  5A0D               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5797  005412  8011               	bsf	___lwdiv@quotient^0,0,c
  5798  005414                     l6829:
  5799  005414  90D8               	bcf	status,0,c
  5800  005416  320F               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5801  005418  320E               	rrcf	___lwdiv@divisor^0,f,c
  5802  00541A  2E10               	decfsz	___lwdiv@counter^0,f,c
  5803  00541C  EFF7  F029         	goto	l6821
  5804  005420                     l1184:
  5805  005420  C011  F00C         	movff	___lwdiv@quotient,?___lwdiv
  5806  005424  C012  F00D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5807  005428  0012               	return		;funcret
  5808  00542A                     __end_of___lwdiv:
  5809                           	callstack 0
  5810                           
  5811 ;; *************** function ___flmul *****************
  5812 ;; Defined at:
  5813 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;  b               4   32[COMRAM] unsigned int 
  5816 ;;  a               4   36[COMRAM] unsigned int 
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;  prod            4   51[COMRAM] struct .
  5819 ;;  grs             4   46[COMRAM] unsigned long 
  5820 ;;  temp            2   55[COMRAM] struct .
  5821 ;;  bexp            1   50[COMRAM] unsigned char 
  5822 ;;  aexp            1   45[COMRAM] unsigned char 
  5823 ;;  sign            1   44[COMRAM] unsigned char 
  5824 ;; Return value:  Size  Location     Type
  5825 ;;                  4   32[COMRAM] unsigned char 
  5826 ;; Registers used:
  5827 ;;		wreg, status,2, status,0, prodl, prodh
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 0/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5833 ;;      Params:         8       0       0       0       0       0       0
  5834 ;;      Locals:        13       0       0       0       0       0       0
  5835 ;;      Temps:          4       0       0       0       0       0       0
  5836 ;;      Totals:        25       0       0       0       0       0       0
  5837 ;;Total ram usage:       25 bytes
  5838 ;; Hardware stack levels used:    1
  5839 ;; Hardware stack levels required when called:    2
  5840 ;; This function calls:
  5841 ;;		Nothing
  5842 ;; This function is called by:
  5843 ;;		_main
  5844 ;;		_fround
  5845 ;;		_scale
  5846 ;;		_sprintf
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           	psect	text9
  5851  002432                     __ptext9:
  5852                           	callstack 0
  5853  002432                     ___flmul:
  5854                           	callstack 26
  5855  002432  5024               	movf	(___flmul@b+3)^0,w,c
  5856  002434  0B80               	andlw	128
  5857  002436  6E2D               	movwf	___flmul@sign^0,c
  5858  002438  5024               	movf	(___flmul@b+3)^0,w,c
  5859  00243A  2424               	addwf	(___flmul@b+3)^0,w,c
  5860  00243C  6E33               	movwf	___flmul@bexp^0,c
  5861  00243E  AE23               	btfss	(___flmul@b+2)^0,7,c
  5862  002440  EF24  F012         	goto	u6911
  5863  002444  EF26  F012         	goto	u6910
  5864  002448                     u6911:
  5865  002448  EF27  F012         	goto	l6607
  5866  00244C                     u6910:
  5867  00244C  8033               	bsf	___flmul@bexp^0,0,c
  5868  00244E                     l6607:
  5869  00244E  5033               	movf	___flmul@bexp^0,w,c
  5870  002450  B4D8               	btfsc	status,2,c
  5871  002452  EF2D  F012         	goto	u6921
  5872  002456  EF2F  F012         	goto	u6920
  5873  00245A                     u6921:
  5874  00245A  EF42  F012         	goto	l6615
  5875  00245E                     u6920:
  5876  00245E  2833               	incf	___flmul@bexp^0,w,c
  5877  002460  A4D8               	btfss	status,2,c
  5878  002462  EF35  F012         	goto	u6931
  5879  002466  EF37  F012         	goto	u6930
  5880  00246A                     u6931:
  5881  00246A  EF3F  F012         	goto	l6613
  5882  00246E                     u6930:
  5883  00246E  0E00               	movlw	0
  5884  002470  6E21               	movwf	___flmul@b^0,c
  5885  002472  0E00               	movlw	0
  5886  002474  6E22               	movwf	(___flmul@b+1)^0,c
  5887  002476  0E00               	movlw	0
  5888  002478  6E23               	movwf	(___flmul@b+2)^0,c
  5889  00247A  0E00               	movlw	0
  5890  00247C  6E24               	movwf	(___flmul@b+3)^0,c
  5891  00247E                     l6613:
  5892  00247E  8E23               	bsf	(___flmul@b+2)^0,7,c
  5893  002480  EF4A  F012         	goto	l6617
  5894  002484                     l6615:
  5895  002484  0E00               	movlw	0
  5896  002486  6E21               	movwf	___flmul@b^0,c
  5897  002488  0E00               	movlw	0
  5898  00248A  6E22               	movwf	(___flmul@b+1)^0,c
  5899  00248C  0E00               	movlw	0
  5900  00248E  6E23               	movwf	(___flmul@b+2)^0,c
  5901  002490  0E00               	movlw	0
  5902  002492  6E24               	movwf	(___flmul@b+3)^0,c
  5903  002494                     l6617:
  5904  002494  5028               	movf	(___flmul@a+3)^0,w,c
  5905  002496  0B80               	andlw	128
  5906  002498  1A2D               	xorwf	___flmul@sign^0,f,c
  5907  00249A  5028               	movf	(___flmul@a+3)^0,w,c
  5908  00249C  2428               	addwf	(___flmul@a+3)^0,w,c
  5909  00249E  6E2E               	movwf	___flmul@aexp^0,c
  5910  0024A0  AE27               	btfss	(___flmul@a+2)^0,7,c
  5911  0024A2  EF55  F012         	goto	u6941
  5912  0024A6  EF57  F012         	goto	u6940
  5913  0024AA                     u6941:
  5914  0024AA  EF58  F012         	goto	l6625
  5915  0024AE                     u6940:
  5916  0024AE  802E               	bsf	___flmul@aexp^0,0,c
  5917  0024B0                     l6625:
  5918  0024B0  502E               	movf	___flmul@aexp^0,w,c
  5919  0024B2  B4D8               	btfsc	status,2,c
  5920  0024B4  EF5E  F012         	goto	u6951
  5921  0024B8  EF60  F012         	goto	u6950
  5922  0024BC                     u6951:
  5923  0024BC  EF73  F012         	goto	l6633
  5924  0024C0                     u6950:
  5925  0024C0  282E               	incf	___flmul@aexp^0,w,c
  5926  0024C2  A4D8               	btfss	status,2,c
  5927  0024C4  EF66  F012         	goto	u6961
  5928  0024C8  EF68  F012         	goto	u6960
  5929  0024CC                     u6961:
  5930  0024CC  EF70  F012         	goto	l6631
  5931  0024D0                     u6960:
  5932  0024D0  0E00               	movlw	0
  5933  0024D2  6E25               	movwf	___flmul@a^0,c
  5934  0024D4  0E00               	movlw	0
  5935  0024D6  6E26               	movwf	(___flmul@a+1)^0,c
  5936  0024D8  0E00               	movlw	0
  5937  0024DA  6E27               	movwf	(___flmul@a+2)^0,c
  5938  0024DC  0E00               	movlw	0
  5939  0024DE  6E28               	movwf	(___flmul@a+3)^0,c
  5940  0024E0                     l6631:
  5941  0024E0  8E27               	bsf	(___flmul@a+2)^0,7,c
  5942  0024E2  EF7B  F012         	goto	l1307
  5943  0024E6                     l6633:
  5944  0024E6  0E00               	movlw	0
  5945  0024E8  6E25               	movwf	___flmul@a^0,c
  5946  0024EA  0E00               	movlw	0
  5947  0024EC  6E26               	movwf	(___flmul@a+1)^0,c
  5948  0024EE  0E00               	movlw	0
  5949  0024F0  6E27               	movwf	(___flmul@a+2)^0,c
  5950  0024F2  0E00               	movlw	0
  5951  0024F4  6E28               	movwf	(___flmul@a+3)^0,c
  5952  0024F6                     l1307:
  5953  0024F6  502E               	movf	___flmul@aexp^0,w,c
  5954  0024F8  B4D8               	btfsc	status,2,c
  5955  0024FA  EF81  F012         	goto	u6971
  5956  0024FE  EF83  F012         	goto	u6970
  5957  002502                     u6971:
  5958  002502  EF8B  F012         	goto	l6637
  5959  002506                     u6970:
  5960  002506  5033               	movf	___flmul@bexp^0,w,c
  5961  002508  A4D8               	btfss	status,2,c
  5962  00250A  EF89  F012         	goto	u6981
  5963  00250E  EF8B  F012         	goto	u6980
  5964  002512                     u6981:
  5965  002512  EF95  F012         	goto	l6641
  5966  002516                     u6980:
  5967  002516                     l6637:
  5968  002516  0E00               	movlw	0
  5969  002518  6E21               	movwf	?___flmul^0,c
  5970  00251A  0E00               	movlw	0
  5971  00251C  6E22               	movwf	(?___flmul+1)^0,c
  5972  00251E  0E00               	movlw	0
  5973  002520  6E23               	movwf	(?___flmul+2)^0,c
  5974  002522  0E00               	movlw	0
  5975  002524  6E24               	movwf	(?___flmul+3)^0,c
  5976  002526  EF2D  F014         	goto	l1311
  5977  00252A                     l6641:
  5978  00252A  5027               	movf	(___flmul@a+2)^0,w,c
  5979  00252C  0221               	mulwf	___flmul@b^0,c
  5980  00252E  CFF3 F038          	movff	prodl,___flmul@temp
  5981  002532  CFF4 F039          	movff	prodh,___flmul@temp+1
  5982  002536  5038               	movf	___flmul@temp^0,w,c
  5983  002538  6E2F               	movwf	___flmul@grs^0,c
  5984  00253A  6A30               	clrf	(___flmul@grs+1)^0,c
  5985  00253C  6A31               	clrf	(___flmul@grs+2)^0,c
  5986  00253E  6A32               	clrf	(___flmul@grs+3)^0,c
  5987  002540  5039               	movf	(___flmul@temp+1)^0,w,c
  5988  002542  6E34               	movwf	___flmul@prod^0,c
  5989  002544  6A35               	clrf	(___flmul@prod+1)^0,c
  5990  002546  6A36               	clrf	(___flmul@prod+2)^0,c
  5991  002548  6A37               	clrf	(___flmul@prod+3)^0,c
  5992  00254A  5026               	movf	(___flmul@a+1)^0,w,c
  5993  00254C  0222               	mulwf	(___flmul@b+1)^0,c
  5994  00254E  CFF3 F038          	movff	prodl,___flmul@temp
  5995  002552  CFF4 F039          	movff	prodh,___flmul@temp+1
  5996  002556  5038               	movf	___flmul@temp^0,w,c
  5997  002558  262F               	addwf	___flmul@grs^0,f,c
  5998  00255A  0E00               	movlw	0
  5999  00255C  2230               	addwfc	(___flmul@grs+1)^0,f,c
  6000  00255E  2231               	addwfc	(___flmul@grs+2)^0,f,c
  6001  002560  2232               	addwfc	(___flmul@grs+3)^0,f,c
  6002  002562  5039               	movf	(___flmul@temp+1)^0,w,c
  6003  002564  2634               	addwf	___flmul@prod^0,f,c
  6004  002566  0E00               	movlw	0
  6005  002568  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6006  00256A  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6007  00256C  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6008  00256E  5025               	movf	___flmul@a^0,w,c
  6009  002570  0223               	mulwf	(___flmul@b+2)^0,c
  6010  002572  CFF3 F038          	movff	prodl,___flmul@temp
  6011  002576  CFF4 F039          	movff	prodh,___flmul@temp+1
  6012  00257A  5038               	movf	___flmul@temp^0,w,c
  6013  00257C  262F               	addwf	___flmul@grs^0,f,c
  6014  00257E  0E00               	movlw	0
  6015  002580  2230               	addwfc	(___flmul@grs+1)^0,f,c
  6016  002582  2231               	addwfc	(___flmul@grs+2)^0,f,c
  6017  002584  2232               	addwfc	(___flmul@grs+3)^0,f,c
  6018  002586  5039               	movf	(___flmul@temp+1)^0,w,c
  6019  002588  2634               	addwf	___flmul@prod^0,f,c
  6020  00258A  0E00               	movlw	0
  6021  00258C  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6022  00258E  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6023  002590  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6024  002592  C031  F032         	movff	___flmul@grs+2,___flmul@grs+3
  6025  002596  C030  F031         	movff	___flmul@grs+1,___flmul@grs+2
  6026  00259A  C02F  F030         	movff	___flmul@grs,___flmul@grs+1
  6027  00259E  6A2F               	clrf	___flmul@grs^0,c
  6028  0025A0  5025               	movf	___flmul@a^0,w,c
  6029  0025A2  0222               	mulwf	(___flmul@b+1)^0,c
  6030  0025A4  CFF3 F038          	movff	prodl,___flmul@temp
  6031  0025A8  CFF4 F039          	movff	prodh,___flmul@temp+1
  6032  0025AC  5038               	movf	___flmul@temp^0,w,c
  6033  0025AE  262F               	addwf	___flmul@grs^0,f,c
  6034  0025B0  5039               	movf	(___flmul@temp+1)^0,w,c
  6035  0025B2  2230               	addwfc	(___flmul@grs+1)^0,f,c
  6036  0025B4  0E00               	movlw	0
  6037  0025B6  2231               	addwfc	(___flmul@grs+2)^0,f,c
  6038  0025B8  0E00               	movlw	0
  6039  0025BA  2232               	addwfc	(___flmul@grs+3)^0,f,c
  6040  0025BC  5026               	movf	(___flmul@a+1)^0,w,c
  6041  0025BE  0221               	mulwf	___flmul@b^0,c
  6042  0025C0  CFF3 F038          	movff	prodl,___flmul@temp
  6043  0025C4  CFF4 F039          	movff	prodh,___flmul@temp+1
  6044  0025C8  5038               	movf	___flmul@temp^0,w,c
  6045  0025CA  262F               	addwf	___flmul@grs^0,f,c
  6046  0025CC  5039               	movf	(___flmul@temp+1)^0,w,c
  6047  0025CE  2230               	addwfc	(___flmul@grs+1)^0,f,c
  6048  0025D0  0E00               	movlw	0
  6049  0025D2  2231               	addwfc	(___flmul@grs+2)^0,f,c
  6050  0025D4  0E00               	movlw	0
  6051  0025D6  2232               	addwfc	(___flmul@grs+3)^0,f,c
  6052  0025D8  C031  F032         	movff	___flmul@grs+2,___flmul@grs+3
  6053  0025DC  C030  F031         	movff	___flmul@grs+1,___flmul@grs+2
  6054  0025E0  C02F  F030         	movff	___flmul@grs,___flmul@grs+1
  6055  0025E4  6A2F               	clrf	___flmul@grs^0,c
  6056  0025E6  5025               	movf	___flmul@a^0,w,c
  6057  0025E8  0221               	mulwf	___flmul@b^0,c
  6058  0025EA  CFF3 F038          	movff	prodl,___flmul@temp
  6059  0025EE  CFF4 F039          	movff	prodh,___flmul@temp+1
  6060  0025F2  5038               	movf	___flmul@temp^0,w,c
  6061  0025F4  262F               	addwf	___flmul@grs^0,f,c
  6062  0025F6  5039               	movf	(___flmul@temp+1)^0,w,c
  6063  0025F8  2230               	addwfc	(___flmul@grs+1)^0,f,c
  6064  0025FA  0E00               	movlw	0
  6065  0025FC  2231               	addwfc	(___flmul@grs+2)^0,f,c
  6066  0025FE  0E00               	movlw	0
  6067  002600  2232               	addwfc	(___flmul@grs+3)^0,f,c
  6068  002602  5027               	movf	(___flmul@a+2)^0,w,c
  6069  002604  0222               	mulwf	(___flmul@b+1)^0,c
  6070  002606  CFF3 F038          	movff	prodl,___flmul@temp
  6071  00260A  CFF4 F039          	movff	prodh,___flmul@temp+1
  6072  00260E  5038               	movf	___flmul@temp^0,w,c
  6073  002610  2634               	addwf	___flmul@prod^0,f,c
  6074  002612  5039               	movf	(___flmul@temp+1)^0,w,c
  6075  002614  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6076  002616  0E00               	movlw	0
  6077  002618  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6078  00261A  0E00               	movlw	0
  6079  00261C  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6080  00261E  5026               	movf	(___flmul@a+1)^0,w,c
  6081  002620  0223               	mulwf	(___flmul@b+2)^0,c
  6082  002622  CFF3 F038          	movff	prodl,___flmul@temp
  6083  002626  CFF4 F039          	movff	prodh,___flmul@temp+1
  6084  00262A  5038               	movf	___flmul@temp^0,w,c
  6085  00262C  2634               	addwf	___flmul@prod^0,f,c
  6086  00262E  5039               	movf	(___flmul@temp+1)^0,w,c
  6087  002630  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6088  002632  0E00               	movlw	0
  6089  002634  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6090  002636  0E00               	movlw	0
  6091  002638  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6092  00263A  5027               	movf	(___flmul@a+2)^0,w,c
  6093  00263C  0223               	mulwf	(___flmul@b+2)^0,c
  6094  00263E  CFF3 F038          	movff	prodl,___flmul@temp
  6095  002642  CFF4 F039          	movff	prodh,___flmul@temp+1
  6096  002646  5038               	movf	___flmul@temp^0,w,c
  6097  002648  6E29               	movwf	??___flmul^0,c
  6098  00264A  5039               	movf	(___flmul@temp+1)^0,w,c
  6099  00264C  6E2A               	movwf	(??___flmul+1)^0,c
  6100  00264E  6A2B               	clrf	(??___flmul+2)^0,c
  6101  002650  6A2C               	clrf	(??___flmul+3)^0,c
  6102  002652  C02B  F02C         	movff	??___flmul+2,??___flmul+3
  6103  002656  C02A  F02B         	movff	??___flmul+1,??___flmul+2
  6104  00265A  C029  F02A         	movff	??___flmul,??___flmul+1
  6105  00265E  6A29               	clrf	??___flmul^0,c
  6106  002660  5029               	movf	??___flmul^0,w,c
  6107  002662  2634               	addwf	___flmul@prod^0,f,c
  6108  002664  502A               	movf	(??___flmul+1)^0,w,c
  6109  002666  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6110  002668  502B               	movf	(??___flmul+2)^0,w,c
  6111  00266A  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6112  00266C  502C               	movf	(??___flmul+3)^0,w,c
  6113  00266E  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6114  002670  C02F  F029         	movff	___flmul@grs,??___flmul
  6115  002674  C030  F02A         	movff	___flmul@grs+1,??___flmul+1
  6116  002678  C031  F02B         	movff	___flmul@grs+2,??___flmul+2
  6117  00267C  C032  F02C         	movff	___flmul@grs+3,??___flmul+3
  6118  002680  0E19               	movlw	25
  6119  002682  EF48  F013         	goto	u6990
  6120  002686                     u6995:
  6121  002686  90D8               	bcf	status,0,c
  6122  002688  322C               	rrcf	(??___flmul+3)^0,f,c
  6123  00268A  322B               	rrcf	(??___flmul+2)^0,f,c
  6124  00268C  322A               	rrcf	(??___flmul+1)^0,f,c
  6125  00268E  3229               	rrcf	??___flmul^0,f,c
  6126  002690                     u6990:
  6127  002690  2EE8               	decfsz	wreg,f,c
  6128  002692  EF43  F013         	goto	u6995
  6129  002696  5029               	movf	??___flmul^0,w,c
  6130  002698  2634               	addwf	___flmul@prod^0,f,c
  6131  00269A  502A               	movf	(??___flmul+1)^0,w,c
  6132  00269C  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6133  00269E  502B               	movf	(??___flmul+2)^0,w,c
  6134  0026A0  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6135  0026A2  502C               	movf	(??___flmul+3)^0,w,c
  6136  0026A4  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6137  0026A6  C031  F032         	movff	___flmul@grs+2,___flmul@grs+3
  6138  0026AA  C030  F031         	movff	___flmul@grs+1,___flmul@grs+2
  6139  0026AE  C02F  F030         	movff	___flmul@grs,___flmul@grs+1
  6140  0026B2  6A2F               	clrf	___flmul@grs^0,c
  6141  0026B4  502E               	movf	___flmul@aexp^0,w,c
  6142  0026B6  C033  F029         	movff	___flmul@bexp,??___flmul
  6143  0026BA  6A2A               	clrf	(??___flmul+1)^0,c
  6144  0026BC  2629               	addwf	??___flmul^0,f,c
  6145  0026BE  0E00               	movlw	0
  6146  0026C0  222A               	addwfc	(??___flmul+1)^0,f,c
  6147  0026C2  0E82               	movlw	130
  6148  0026C4  2429               	addwf	??___flmul^0,w,c
  6149  0026C6  6E38               	movwf	___flmul@temp^0,c
  6150  0026C8  0EFF               	movlw	255
  6151  0026CA  202A               	addwfc	(??___flmul+1)^0,w,c
  6152  0026CC  6E39               	movwf	(___flmul@temp+1)^0,c
  6153  0026CE  EF7E  F013         	goto	l6689
  6154  0026D2                     l6683:
  6155  0026D2  90D8               	bcf	status,0,c
  6156  0026D4  3634               	rlcf	___flmul@prod^0,f,c
  6157  0026D6  3635               	rlcf	(___flmul@prod+1)^0,f,c
  6158  0026D8  3636               	rlcf	(___flmul@prod+2)^0,f,c
  6159  0026DA  3637               	rlcf	(___flmul@prod+3)^0,f,c
  6160  0026DC  AE32               	btfss	(___flmul@grs+3)^0,7,c
  6161  0026DE  EF73  F013         	goto	u7001
  6162  0026E2  EF75  F013         	goto	u7000
  6163  0026E6                     u7001:
  6164  0026E6  EF76  F013         	goto	l1314
  6165  0026EA                     u7000:
  6166  0026EA  8034               	bsf	___flmul@prod^0,0,c
  6167  0026EC                     l1314:
  6168  0026EC  90D8               	bcf	status,0,c
  6169  0026EE  362F               	rlcf	___flmul@grs^0,f,c
  6170  0026F0  3630               	rlcf	(___flmul@grs+1)^0,f,c
  6171  0026F2  3631               	rlcf	(___flmul@grs+2)^0,f,c
  6172  0026F4  3632               	rlcf	(___flmul@grs+3)^0,f,c
  6173  0026F6  0638               	decf	___flmul@temp^0,f,c
  6174  0026F8  A0D8               	btfss	status,0,c
  6175  0026FA  0639               	decf	(___flmul@temp+1)^0,f,c
  6176  0026FC                     l6689:
  6177  0026FC  AE36               	btfss	(___flmul@prod+2)^0,7,c
  6178  0026FE  EF83  F013         	goto	u7011
  6179  002702  EF85  F013         	goto	u7010
  6180  002706                     u7011:
  6181  002706  EF69  F013         	goto	l6683
  6182  00270A                     u7010:
  6183  00270A  0E00               	movlw	0
  6184  00270C  6E2E               	movwf	___flmul@aexp^0,c
  6185  00270E  AE32               	btfss	(___flmul@grs+3)^0,7,c
  6186  002710  EF8C  F013         	goto	u7021
  6187  002714  EF8E  F013         	goto	u7020
  6188  002718                     u7021:
  6189  002718  EFB2  F013         	goto	l1316
  6190  00271C                     u7020:
  6191  00271C  0EFF               	movlw	255
  6192  00271E  142F               	andwf	___flmul@grs^0,w,c
  6193  002720  6E29               	movwf	??___flmul^0,c
  6194  002722  0EFF               	movlw	255
  6195  002724  1430               	andwf	(___flmul@grs+1)^0,w,c
  6196  002726  6E2A               	movwf	(??___flmul+1)^0,c
  6197  002728  0EFF               	movlw	255
  6198  00272A  1431               	andwf	(___flmul@grs+2)^0,w,c
  6199  00272C  6E2B               	movwf	(??___flmul+2)^0,c
  6200  00272E  0E7F               	movlw	127
  6201  002730  1432               	andwf	(___flmul@grs+3)^0,w,c
  6202  002732  6E2C               	movwf	(??___flmul+3)^0,c
  6203  002734  5029               	movf	??___flmul^0,w,c
  6204  002736  102A               	iorwf	(??___flmul+1)^0,w,c
  6205  002738  102B               	iorwf	(??___flmul+2)^0,w,c
  6206  00273A  102C               	iorwf	(??___flmul+3)^0,w,c
  6207  00273C  B4D8               	btfsc	status,2,c
  6208  00273E  EFA3  F013         	goto	u7031
  6209  002742  EFA5  F013         	goto	u7030
  6210  002746                     u7031:
  6211  002746  EFA9  F013         	goto	l1317
  6212  00274A                     u7030:
  6213  00274A                     l6697:
  6214  00274A  0E01               	movlw	1
  6215  00274C  6E2E               	movwf	___flmul@aexp^0,c
  6216  00274E  EFB2  F013         	goto	l1316
  6217  002752                     l1317:
  6218  002752  A034               	btfss	___flmul@prod^0,0,c
  6219  002754  EFAE  F013         	goto	u7041
  6220  002758  EFB0  F013         	goto	u7040
  6221  00275C                     u7041:
  6222  00275C  EFB2  F013         	goto	l1316
  6223  002760                     u7040:
  6224  002760  EFA5  F013         	goto	l6697
  6225  002764                     l1316:
  6226  002764  502E               	movf	___flmul@aexp^0,w,c
  6227  002766  B4D8               	btfsc	status,2,c
  6228  002768  EFB8  F013         	goto	u7051
  6229  00276C  EFBA  F013         	goto	u7050
  6230  002770                     u7051:
  6231  002770  EFDE  F013         	goto	l6709
  6232  002774                     u7050:
  6233  002774  0E01               	movlw	1
  6234  002776  2634               	addwf	___flmul@prod^0,f,c
  6235  002778  0E00               	movlw	0
  6236  00277A  2235               	addwfc	(___flmul@prod+1)^0,f,c
  6237  00277C  2236               	addwfc	(___flmul@prod+2)^0,f,c
  6238  00277E  2237               	addwfc	(___flmul@prod+3)^0,f,c
  6239  002780  A037               	btfss	(___flmul@prod+3)^0,0,c
  6240  002782  EFC5  F013         	goto	u7061
  6241  002786  EFC7  F013         	goto	u7060
  6242  00278A                     u7061:
  6243  00278A  EFDE  F013         	goto	l6709
  6244  00278E                     u7060:
  6245  00278E  C034  F029         	movff	___flmul@prod,??___flmul
  6246  002792  C035  F02A         	movff	___flmul@prod+1,??___flmul+1
  6247  002796  C036  F02B         	movff	___flmul@prod+2,??___flmul+2
  6248  00279A  C037  F02C         	movff	___flmul@prod+3,??___flmul+3
  6249  00279E  342C               	rlcf	(??___flmul+3)^0,w,c
  6250  0027A0  322C               	rrcf	(??___flmul+3)^0,f,c
  6251  0027A2  322B               	rrcf	(??___flmul+2)^0,f,c
  6252  0027A4  322A               	rrcf	(??___flmul+1)^0,f,c
  6253  0027A6  3229               	rrcf	??___flmul^0,f,c
  6254  0027A8  C029  F034         	movff	??___flmul,___flmul@prod
  6255  0027AC  C02A  F035         	movff	??___flmul+1,___flmul@prod+1
  6256  0027B0  C02B  F036         	movff	??___flmul+2,___flmul@prod+2
  6257  0027B4  C02C  F037         	movff	??___flmul+3,___flmul@prod+3
  6258  0027B8  4A38               	infsnz	___flmul@temp^0,f,c
  6259  0027BA  2A39               	incf	(___flmul@temp+1)^0,f,c
  6260  0027BC                     l6709:
  6261  0027BC  BE39               	btfsc	(___flmul@temp+1)^0,7,c
  6262  0027BE  EFE9  F013         	goto	u7071
  6263  0027C2  5039               	movf	(___flmul@temp+1)^0,w,c
  6264  0027C4  E108               	bnz	u7070
  6265  0027C6  2838               	incf	___flmul@temp^0,w,c
  6266  0027C8  A0D8               	btfss	status,0,c
  6267  0027CA  EFE9  F013         	goto	u7071
  6268  0027CE  EFEB  F013         	goto	u7070
  6269  0027D2                     u7071:
  6270  0027D2  EFF5  F013         	goto	l6713
  6271  0027D6                     u7070:
  6272  0027D6  0E00               	movlw	0
  6273  0027D8  6E34               	movwf	___flmul@prod^0,c
  6274  0027DA  0E00               	movlw	0
  6275  0027DC  6E35               	movwf	(___flmul@prod+1)^0,c
  6276  0027DE  0E80               	movlw	128
  6277  0027E0  6E36               	movwf	(___flmul@prod+2)^0,c
  6278  0027E2  0E7F               	movlw	127
  6279  0027E4  6E37               	movwf	(___flmul@prod+3)^0,c
  6280  0027E6  EF23  F014         	goto	l6725
  6281  0027EA                     l6713:
  6282  0027EA  BE39               	btfsc	(___flmul@temp+1)^0,7,c
  6283  0027EC  EF02  F014         	goto	u7080
  6284  0027F0  5039               	movf	(___flmul@temp+1)^0,w,c
  6285  0027F2  E106               	bnz	u7081
  6286  0027F4  0438               	decf	___flmul@temp^0,w,c
  6287  0027F6  B0D8               	btfsc	status,0,c
  6288  0027F8  EF00  F014         	goto	u7081
  6289  0027FC  EF02  F014         	goto	u7080
  6290  002800                     u7081:
  6291  002800  EF0E  F014         	goto	l1324
  6292  002804                     u7080:
  6293  002804  0E00               	movlw	0
  6294  002806  6E34               	movwf	___flmul@prod^0,c
  6295  002808  0E00               	movlw	0
  6296  00280A  6E35               	movwf	(___flmul@prod+1)^0,c
  6297  00280C  0E00               	movlw	0
  6298  00280E  6E36               	movwf	(___flmul@prod+2)^0,c
  6299  002810  0E00               	movlw	0
  6300  002812  6E37               	movwf	(___flmul@prod+3)^0,c
  6301  002814  0E00               	movlw	0
  6302  002816  6E2D               	movwf	___flmul@sign^0,c
  6303  002818  EF23  F014         	goto	l6725
  6304  00281C                     l1324:
  6305  00281C  C038  F033         	movff	___flmul@temp,___flmul@bexp
  6306  002820  0EFF               	movlw	255
  6307  002822  1634               	andwf	___flmul@prod^0,f,c
  6308  002824  0EFF               	movlw	255
  6309  002826  1635               	andwf	(___flmul@prod+1)^0,f,c
  6310  002828  0E7F               	movlw	127
  6311  00282A  1636               	andwf	(___flmul@prod+2)^0,f,c
  6312  00282C  0E00               	movlw	0
  6313  00282E  1637               	andwf	(___flmul@prod+3)^0,f,c
  6314  002830  A033               	btfss	___flmul@bexp^0,0,c
  6315  002832  EF1D  F014         	goto	u7091
  6316  002836  EF1F  F014         	goto	u7090
  6317  00283A                     u7091:
  6318  00283A  EF20  F014         	goto	l6723
  6319  00283E                     u7090:
  6320  00283E  8E36               	bsf	(___flmul@prod+2)^0,7,c
  6321  002840                     l6723:
  6322  002840  90D8               	bcf	status,0,c
  6323  002842  3033               	rrcf	___flmul@bexp^0,w,c
  6324  002844  6E37               	movwf	(___flmul@prod+3)^0,c
  6325  002846                     l6725:
  6326  002846  502D               	movf	___flmul@sign^0,w,c
  6327  002848  1237               	iorwf	(___flmul@prod+3)^0,f,c
  6328  00284A  C034  F021         	movff	___flmul@prod,?___flmul
  6329  00284E  C035  F022         	movff	___flmul@prod+1,?___flmul+1
  6330  002852  C036  F023         	movff	___flmul@prod+2,?___flmul+2
  6331  002856  C037  F024         	movff	___flmul@prod+3,?___flmul+3
  6332  00285A                     l1311:
  6333  00285A  0012               	return		;funcret
  6334  00285C                     __end_of___flmul:
  6335                           	callstack 0
  6336                           
  6337 ;; *************** function __tdiv_to_l_ *****************
  6338 ;; Defined at:
  6339 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;  f1              4    5[COMRAM] float 
  6342 ;;  f2              4    9[COMRAM] float 
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;  quot            4   16[COMRAM] unsigned long 
  6345 ;;  exp1            1   21[COMRAM] unsigned char 
  6346 ;;  cntr            1   20[COMRAM] unsigned char 
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  4    5[COMRAM] unsigned long 
  6349 ;; Registers used:
  6350 ;;		wreg, status,2, status,0
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6356 ;;      Params:         8       0       0       0       0       0       0
  6357 ;;      Locals:         6       0       0       0       0       0       0
  6358 ;;      Temps:          3       0       0       0       0       0       0
  6359 ;;      Totals:        17       0       0       0       0       0       0
  6360 ;;Total ram usage:       17 bytes
  6361 ;; Hardware stack levels used:    1
  6362 ;; Hardware stack levels required when called:    2
  6363 ;; This function calls:
  6364 ;;		Nothing
  6365 ;; This function is called by:
  6366 ;;		_sprintf
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           	psect	text10
  6371  003DD6                     __ptext10:
  6372                           	callstack 0
  6373  003DD6                     __tdiv_to_l_:
  6374                           	callstack 27
  6375  003DD6  C008  F00E         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6376  003DDA  6A0F               	clrf	(??__tdiv_to_l_+1)^0,c
  6377  003DDC  6A10               	clrf	(??__tdiv_to_l_+2)^0,c
  6378  003DDE  3407               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  6379  003DE0  360E               	rlcf	??__tdiv_to_l_^0,f,c
  6380  003DE2  E301               	bnc	u7831
  6381  003DE4  800F               	bsf	(??__tdiv_to_l_+1)^0,0,c
  6382  003DE6                     u7831:
  6383  003DE6  500E               	movf	??__tdiv_to_l_^0,w,c
  6384  003DE8  6E16               	movwf	__tdiv_to_l_@exp1^0,c
  6385  003DEA  5016               	movf	__tdiv_to_l_@exp1^0,w,c
  6386  003DEC  A4D8               	btfss	status,2,c
  6387  003DEE  EFFB  F01E         	goto	u7841
  6388  003DF2  EFFD  F01E         	goto	u7840
  6389  003DF6                     u7841:
  6390  003DF6  EF07  F01F         	goto	l7423
  6391  003DFA                     u7840:
  6392  003DFA                     l7419:
  6393  003DFA  0E00               	movlw	0
  6394  003DFC  6E06               	movwf	?__tdiv_to_l_^0,c
  6395  003DFE  0E00               	movlw	0
  6396  003E00  6E07               	movwf	(?__tdiv_to_l_+1)^0,c
  6397  003E02  0E00               	movlw	0
  6398  003E04  6E08               	movwf	(?__tdiv_to_l_+2)^0,c
  6399  003E06  0E00               	movlw	0
  6400  003E08  6E09               	movwf	(?__tdiv_to_l_+3)^0,c
  6401  003E0A  EF95  F01F         	goto	l1034
  6402  003E0E                     l7423:
  6403  003E0E  C00C  F00E         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6404  003E12  6A0F               	clrf	(??__tdiv_to_l_+1)^0,c
  6405  003E14  6A10               	clrf	(??__tdiv_to_l_+2)^0,c
  6406  003E16  340B               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  6407  003E18  360E               	rlcf	??__tdiv_to_l_^0,f,c
  6408  003E1A  E301               	bnc	u7851
  6409  003E1C  800F               	bsf	(??__tdiv_to_l_+1)^0,0,c
  6410  003E1E                     u7851:
  6411  003E1E  500E               	movf	??__tdiv_to_l_^0,w,c
  6412  003E20  6E15               	movwf	__tdiv_to_l_@cntr^0,c
  6413  003E22  5015               	movf	__tdiv_to_l_@cntr^0,w,c
  6414  003E24  A4D8               	btfss	status,2,c
  6415  003E26  EF17  F01F         	goto	u7861
  6416  003E2A  EF19  F01F         	goto	u7860
  6417  003E2E                     u7861:
  6418  003E2E  EF1B  F01F         	goto	l7429
  6419  003E32                     u7860:
  6420  003E32  EFFD  F01E         	goto	l7419
  6421  003E36                     l7429:
  6422  003E36  8E07               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  6423  003E38  0EFF               	movlw	255
  6424  003E3A  1606               	andwf	__tdiv_to_l_@f1^0,f,c
  6425  003E3C  0EFF               	movlw	255
  6426  003E3E  1607               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  6427  003E40  0E00               	movlw	0
  6428  003E42  1608               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  6429  003E44  8E0B               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  6430  003E46  0EFF               	movlw	255
  6431  003E48  160A               	andwf	__tdiv_to_l_@f2^0,f,c
  6432  003E4A  0EFF               	movlw	255
  6433  003E4C  160B               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  6434  003E4E  0E00               	movlw	0
  6435  003E50  160C               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  6436  003E52  0E00               	movlw	0
  6437  003E54  6E11               	movwf	__tdiv_to_l_@quot^0,c
  6438  003E56  0E00               	movlw	0
  6439  003E58  6E12               	movwf	(__tdiv_to_l_@quot+1)^0,c
  6440  003E5A  0E00               	movlw	0
  6441  003E5C  6E13               	movwf	(__tdiv_to_l_@quot+2)^0,c
  6442  003E5E  0E00               	movlw	0
  6443  003E60  6E14               	movwf	(__tdiv_to_l_@quot+3)^0,c
  6444  003E62  0E7F               	movlw	127
  6445  003E64  5E16               	subwf	__tdiv_to_l_@exp1^0,f,c
  6446  003E66  5015               	movf	__tdiv_to_l_@cntr^0,w,c
  6447  003E68  0F98               	addlw	152
  6448  003E6A  5E16               	subwf	__tdiv_to_l_@exp1^0,f,c
  6449  003E6C  0E18               	movlw	24
  6450  003E6E  6E15               	movwf	__tdiv_to_l_@cntr^0,c
  6451  003E70                     l1036:
  6452  003E70  90D8               	bcf	status,0,c
  6453  003E72  3611               	rlcf	__tdiv_to_l_@quot^0,f,c
  6454  003E74  3612               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  6455  003E76  3613               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  6456  003E78  3614               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  6457  003E7A  500A               	movf	__tdiv_to_l_@f2^0,w,c
  6458  003E7C  5C06               	subwf	__tdiv_to_l_@f1^0,w,c
  6459  003E7E  500B               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  6460  003E80  5807               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  6461  003E82  500C               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  6462  003E84  5808               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  6463  003E86  A0D8               	btfss	status,0,c
  6464  003E88  EF48  F01F         	goto	u7871
  6465  003E8C  EF4A  F01F         	goto	u7870
  6466  003E90                     u7871:
  6467  003E90  EF51  F01F         	goto	l1037
  6468  003E94                     u7870:
  6469  003E94  500A               	movf	__tdiv_to_l_@f2^0,w,c
  6470  003E96  5E06               	subwf	__tdiv_to_l_@f1^0,f,c
  6471  003E98  500B               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  6472  003E9A  5A07               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  6473  003E9C  500C               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  6474  003E9E  5A08               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  6475  003EA0  8011               	bsf	__tdiv_to_l_@quot^0,0,c
  6476  003EA2                     l1037:
  6477  003EA2  90D8               	bcf	status,0,c
  6478  003EA4  3606               	rlcf	__tdiv_to_l_@f1^0,f,c
  6479  003EA6  3607               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  6480  003EA8  3608               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  6481  003EAA  2E15               	decfsz	__tdiv_to_l_@cntr^0,f,c
  6482  003EAC  EF38  F01F         	goto	l1036
  6483  003EB0  BE16               	btfsc	__tdiv_to_l_@exp1^0,7,c
  6484  003EB2  EF5F  F01F         	goto	u7880
  6485  003EB6  EF5D  F01F         	goto	u7881
  6486  003EBA                     u7881:
  6487  003EBA  EF75  F01F         	goto	l7463
  6488  003EBE                     u7880:
  6489  003EBE  5016               	movf	__tdiv_to_l_@exp1^0,w,c
  6490  003EC0  0A80               	xorlw	128
  6491  003EC2  0F97               	addlw	151
  6492  003EC4  B0D8               	btfsc	status,0,c
  6493  003EC6  EF67  F01F         	goto	u7891
  6494  003ECA  EF69  F01F         	goto	u7890
  6495  003ECE                     u7891:
  6496  003ECE  EF6B  F01F         	goto	l7459
  6497  003ED2                     u7890:
  6498  003ED2  EFFD  F01E         	goto	l7419
  6499  003ED6                     l7459:
  6500  003ED6  90D8               	bcf	status,0,c
  6501  003ED8  3214               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  6502  003EDA  3213               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  6503  003EDC  3212               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  6504  003EDE  3211               	rrcf	__tdiv_to_l_@quot^0,f,c
  6505  003EE0  3E16               	incfsz	__tdiv_to_l_@exp1^0,f,c
  6506  003EE2  EF6B  F01F         	goto	l7459
  6507  003EE6  EF8D  F01F         	goto	l1043
  6508  003EEA                     l7463:
  6509  003EEA  0E17               	movlw	23
  6510  003EEC  6416               	cpfsgt	__tdiv_to_l_@exp1^0,c
  6511  003EEE  EF7B  F01F         	goto	u7901
  6512  003EF2  EF7D  F01F         	goto	u7900
  6513  003EF6                     u7901:
  6514  003EF6  EF85  F01F         	goto	l7471
  6515  003EFA                     u7900:
  6516  003EFA  EFFD  F01E         	goto	l7419
  6517  003EFE                     l7469:
  6518  003EFE  90D8               	bcf	status,0,c
  6519  003F00  3611               	rlcf	__tdiv_to_l_@quot^0,f,c
  6520  003F02  3612               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  6521  003F04  3613               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  6522  003F06  3614               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  6523  003F08  0616               	decf	__tdiv_to_l_@exp1^0,f,c
  6524  003F0A                     l7471:
  6525  003F0A  5016               	movf	__tdiv_to_l_@exp1^0,w,c
  6526  003F0C  A4D8               	btfss	status,2,c
  6527  003F0E  EF8B  F01F         	goto	u7911
  6528  003F12  EF8D  F01F         	goto	u7910
  6529  003F16                     u7911:
  6530  003F16  EF7F  F01F         	goto	l7469
  6531  003F1A                     u7910:
  6532  003F1A                     l1043:
  6533  003F1A  C011  F006         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6534  003F1E  C012  F007         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6535  003F22  C013  F008         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6536  003F26  C014  F009         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6537  003F2A                     l1034:
  6538  003F2A  0012               	return		;funcret
  6539  003F2C                     __end_of__tdiv_to_l_:
  6540                           	callstack 0
  6541                           
  6542 ;; *************** function __div_to_l_ *****************
  6543 ;; Defined at:
  6544 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  f1              4    5[COMRAM] unsigned long 
  6547 ;;  f2              4    9[COMRAM] unsigned long 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  quot            4   13[COMRAM] unsigned long 
  6550 ;;  exp1            1   18[COMRAM] unsigned char 
  6551 ;;  cntr            1   17[COMRAM] unsigned char 
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  4    5[COMRAM] unsigned long 
  6554 ;; Registers used:
  6555 ;;		wreg, status,2, status,0
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6561 ;;      Params:         8       0       0       0       0       0       0
  6562 ;;      Locals:         6       0       0       0       0       0       0
  6563 ;;      Temps:          0       0       0       0       0       0       0
  6564 ;;      Totals:        14       0       0       0       0       0       0
  6565 ;;Total ram usage:       14 bytes
  6566 ;; Hardware stack levels used:    1
  6567 ;; Hardware stack levels required when called:    2
  6568 ;; This function calls:
  6569 ;;		Nothing
  6570 ;; This function is called by:
  6571 ;;		_sprintf
  6572 ;; This function uses a non-reentrant model
  6573 ;;
  6574                           
  6575                           	psect	text11
  6576  003F2C                     __ptext11:
  6577                           	callstack 0
  6578  003F2C                     __div_to_l_:
  6579                           	callstack 27
  6580  003F2C  3408               	rlcf	(__div_to_l_@f1+2)^0,w,c
  6581  003F2E  3409               	rlcf	(__div_to_l_@f1+3)^0,w,c
  6582  003F30  6E13               	movwf	__div_to_l_@exp1^0,c
  6583  003F32  5013               	movf	__div_to_l_@exp1^0,w,c
  6584  003F34  A4D8               	btfss	status,2,c
  6585  003F36  EF9F  F01F         	goto	u7921
  6586  003F3A  EFA1  F01F         	goto	u7920
  6587  003F3E                     u7921:
  6588  003F3E  EFAB  F01F         	goto	l7479
  6589  003F42                     u7920:
  6590  003F42                     l7475:
  6591  003F42  0E00               	movlw	0
  6592  003F44  6E06               	movwf	?__div_to_l_^0,c
  6593  003F46  0E00               	movlw	0
  6594  003F48  6E07               	movwf	(?__div_to_l_+1)^0,c
  6595  003F4A  0E00               	movlw	0
  6596  003F4C  6E08               	movwf	(?__div_to_l_+2)^0,c
  6597  003F4E  0E00               	movlw	0
  6598  003F50  6E09               	movwf	(?__div_to_l_+3)^0,c
  6599  003F52  EF3B  F020         	goto	l925
  6600  003F56                     l7479:
  6601  003F56  340C               	rlcf	(__div_to_l_@f2+2)^0,w,c
  6602  003F58  340D               	rlcf	(__div_to_l_@f2+3)^0,w,c
  6603  003F5A  6E12               	movwf	__div_to_l_@cntr^0,c
  6604  003F5C  5012               	movf	__div_to_l_@cntr^0,w,c
  6605  003F5E  A4D8               	btfss	status,2,c
  6606  003F60  EFB4  F01F         	goto	u7931
  6607  003F64  EFB6  F01F         	goto	u7930
  6608  003F68                     u7931:
  6609  003F68  EFB8  F01F         	goto	l7485
  6610  003F6C                     u7930:
  6611  003F6C  EFA1  F01F         	goto	l7475
  6612  003F70                     l7485:
  6613  003F70  8E08               	bsf	(__div_to_l_@f1+2)^0,7,c
  6614  003F72  0EFF               	movlw	255
  6615  003F74  1606               	andwf	__div_to_l_@f1^0,f,c
  6616  003F76  0EFF               	movlw	255
  6617  003F78  1607               	andwf	(__div_to_l_@f1+1)^0,f,c
  6618  003F7A  0EFF               	movlw	255
  6619  003F7C  1608               	andwf	(__div_to_l_@f1+2)^0,f,c
  6620  003F7E  0E00               	movlw	0
  6621  003F80  1609               	andwf	(__div_to_l_@f1+3)^0,f,c
  6622  003F82  8E0C               	bsf	(__div_to_l_@f2+2)^0,7,c
  6623  003F84  0EFF               	movlw	255
  6624  003F86  160A               	andwf	__div_to_l_@f2^0,f,c
  6625  003F88  0EFF               	movlw	255
  6626  003F8A  160B               	andwf	(__div_to_l_@f2+1)^0,f,c
  6627  003F8C  0EFF               	movlw	255
  6628  003F8E  160C               	andwf	(__div_to_l_@f2+2)^0,f,c
  6629  003F90  0E00               	movlw	0
  6630  003F92  160D               	andwf	(__div_to_l_@f2+3)^0,f,c
  6631  003F94  0E00               	movlw	0
  6632  003F96  6E0E               	movwf	__div_to_l_@quot^0,c
  6633  003F98  0E00               	movlw	0
  6634  003F9A  6E0F               	movwf	(__div_to_l_@quot+1)^0,c
  6635  003F9C  0E00               	movlw	0
  6636  003F9E  6E10               	movwf	(__div_to_l_@quot+2)^0,c
  6637  003FA0  0E00               	movlw	0
  6638  003FA2  6E11               	movwf	(__div_to_l_@quot+3)^0,c
  6639  003FA4  0E7F               	movlw	127
  6640  003FA6  5E13               	subwf	__div_to_l_@exp1^0,f,c
  6641  003FA8  5012               	movf	__div_to_l_@cntr^0,w,c
  6642  003FAA  0FA0               	addlw	160
  6643  003FAC  5E13               	subwf	__div_to_l_@exp1^0,f,c
  6644  003FAE  0E20               	movlw	32
  6645  003FB0  6E12               	movwf	__div_to_l_@cntr^0,c
  6646  003FB2                     l7499:
  6647  003FB2  90D8               	bcf	status,0,c
  6648  003FB4  360E               	rlcf	__div_to_l_@quot^0,f,c
  6649  003FB6  360F               	rlcf	(__div_to_l_@quot+1)^0,f,c
  6650  003FB8  3610               	rlcf	(__div_to_l_@quot+2)^0,f,c
  6651  003FBA  3611               	rlcf	(__div_to_l_@quot+3)^0,f,c
  6652  003FBC  500A               	movf	__div_to_l_@f2^0,w,c
  6653  003FBE  5C06               	subwf	__div_to_l_@f1^0,w,c
  6654  003FC0  500B               	movf	(__div_to_l_@f2+1)^0,w,c
  6655  003FC2  5807               	subwfb	(__div_to_l_@f1+1)^0,w,c
  6656  003FC4  500C               	movf	(__div_to_l_@f2+2)^0,w,c
  6657  003FC6  5808               	subwfb	(__div_to_l_@f1+2)^0,w,c
  6658  003FC8  500D               	movf	(__div_to_l_@f2+3)^0,w,c
  6659  003FCA  5809               	subwfb	(__div_to_l_@f1+3)^0,w,c
  6660  003FCC  A0D8               	btfss	status,0,c
  6661  003FCE  EFEB  F01F         	goto	u7941
  6662  003FD2  EFED  F01F         	goto	u7940
  6663  003FD6                     u7941:
  6664  003FD6  EFF6  F01F         	goto	l7507
  6665  003FDA                     u7940:
  6666  003FDA  500A               	movf	__div_to_l_@f2^0,w,c
  6667  003FDC  5E06               	subwf	__div_to_l_@f1^0,f,c
  6668  003FDE  500B               	movf	(__div_to_l_@f2+1)^0,w,c
  6669  003FE0  5A07               	subwfb	(__div_to_l_@f1+1)^0,f,c
  6670  003FE2  500C               	movf	(__div_to_l_@f2+2)^0,w,c
  6671  003FE4  5A08               	subwfb	(__div_to_l_@f1+2)^0,f,c
  6672  003FE6  500D               	movf	(__div_to_l_@f2+3)^0,w,c
  6673  003FE8  5A09               	subwfb	(__div_to_l_@f1+3)^0,f,c
  6674  003FEA  800E               	bsf	__div_to_l_@quot^0,0,c
  6675  003FEC                     l7507:
  6676  003FEC  90D8               	bcf	status,0,c
  6677  003FEE  3606               	rlcf	__div_to_l_@f1^0,f,c
  6678  003FF0  3607               	rlcf	(__div_to_l_@f1+1)^0,f,c
  6679  003FF2  3608               	rlcf	(__div_to_l_@f1+2)^0,f,c
  6680  003FF4  3609               	rlcf	(__div_to_l_@f1+3)^0,f,c
  6681  003FF6  2E12               	decfsz	__div_to_l_@cntr^0,f,c
  6682  003FF8  EFD9  F01F         	goto	l7499
  6683  003FFC  BE13               	btfsc	__div_to_l_@exp1^0,7,c
  6684  003FFE  EF05  F020         	goto	u7950
  6685  004002  EF03  F020         	goto	u7951
  6686  004006                     u7951:
  6687  004006  EF1B  F020         	goto	l7523
  6688  00400A                     u7950:
  6689  00400A  5013               	movf	__div_to_l_@exp1^0,w,c
  6690  00400C  0A80               	xorlw	128
  6691  00400E  0F9F               	addlw	159
  6692  004010  B0D8               	btfsc	status,0,c
  6693  004012  EF0D  F020         	goto	u7961
  6694  004016  EF0F  F020         	goto	u7960
  6695  00401A                     u7961:
  6696  00401A  EF11  F020         	goto	l7519
  6697  00401E                     u7960:
  6698  00401E  EFA1  F01F         	goto	l7475
  6699  004022                     l7519:
  6700  004022  90D8               	bcf	status,0,c
  6701  004024  3211               	rrcf	(__div_to_l_@quot+3)^0,f,c
  6702  004026  3210               	rrcf	(__div_to_l_@quot+2)^0,f,c
  6703  004028  320F               	rrcf	(__div_to_l_@quot+1)^0,f,c
  6704  00402A  320E               	rrcf	__div_to_l_@quot^0,f,c
  6705  00402C  3E13               	incfsz	__div_to_l_@exp1^0,f,c
  6706  00402E  EF11  F020         	goto	l7519
  6707  004032  EF33  F020         	goto	l934
  6708  004036                     l7523:
  6709  004036  0E1F               	movlw	31
  6710  004038  6413               	cpfsgt	__div_to_l_@exp1^0,c
  6711  00403A  EF21  F020         	goto	u7971
  6712  00403E  EF23  F020         	goto	u7970
  6713  004042                     u7971:
  6714  004042  EF2B  F020         	goto	l7531
  6715  004046                     u7970:
  6716  004046  EFA1  F01F         	goto	l7475
  6717  00404A                     l7529:
  6718  00404A  90D8               	bcf	status,0,c
  6719  00404C  360E               	rlcf	__div_to_l_@quot^0,f,c
  6720  00404E  360F               	rlcf	(__div_to_l_@quot+1)^0,f,c
  6721  004050  3610               	rlcf	(__div_to_l_@quot+2)^0,f,c
  6722  004052  3611               	rlcf	(__div_to_l_@quot+3)^0,f,c
  6723  004054  0613               	decf	__div_to_l_@exp1^0,f,c
  6724  004056                     l7531:
  6725  004056  5013               	movf	__div_to_l_@exp1^0,w,c
  6726  004058  A4D8               	btfss	status,2,c
  6727  00405A  EF31  F020         	goto	u7981
  6728  00405E  EF33  F020         	goto	u7980
  6729  004062                     u7981:
  6730  004062  EF25  F020         	goto	l7529
  6731  004066                     u7980:
  6732  004066                     l934:
  6733  004066  C00E  F006         	movff	__div_to_l_@quot,?__div_to_l_
  6734  00406A  C00F  F007         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  6735  00406E  C010  F008         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  6736  004072  C011  F009         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  6737  004076                     l925:
  6738  004076  0012               	return		;funcret
  6739  004078                     __end_of__div_to_l_:
  6740                           	callstack 0
  6741                           
  6742 ;; *************** function ___xxtofl *****************
  6743 ;; Defined at:
  6744 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  6745 ;; Parameters:    Size  Location     Type
  6746 ;;  sign            1    wreg     unsigned char 
  6747 ;;  val             4   18[COMRAM] long 
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;  sign            1   26[COMRAM] unsigned char 
  6750 ;;  arg             4   28[COMRAM] unsigned long 
  6751 ;;  exp             1   27[COMRAM] unsigned char 
  6752 ;; Return value:  Size  Location     Type
  6753 ;;                  4   18[COMRAM] unsigned char 
  6754 ;; Registers used:
  6755 ;;		wreg, status,2, status,0
  6756 ;; Tracked objects:
  6757 ;;		On entry : 0/0
  6758 ;;		On exit  : 0/0
  6759 ;;		Unchanged: 0/0
  6760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6761 ;;      Params:         4       0       0       0       0       0       0
  6762 ;;      Locals:         6       0       0       0       0       0       0
  6763 ;;      Temps:          4       0       0       0       0       0       0
  6764 ;;      Totals:        14       0       0       0       0       0       0
  6765 ;;Total ram usage:       14 bytes
  6766 ;; Hardware stack levels used:    1
  6767 ;; Hardware stack levels required when called:    2
  6768 ;; This function calls:
  6769 ;;		Nothing
  6770 ;; This function is called by:
  6771 ;;		_main
  6772 ;;		_sprintf
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           	psect	text12
  6777  003A84                     __ptext12:
  6778                           	callstack 0
  6779  003A84                     ___xxtofl:
  6780                           	callstack 27
  6781                           
  6782                           ;incstack = 0
  6783                           ;___xxtofl@sign stored from wreg
  6784  003A84  6E1B               	movwf	___xxtofl@sign^0,c
  6785  003A86  501B               	movf	___xxtofl@sign^0,w,c
  6786  003A88  B4D8               	btfsc	status,2,c
  6787  003A8A  EF49  F01D         	goto	u8291
  6788  003A8E  EF4B  F01D         	goto	u8290
  6789  003A92                     u8291:
  6790  003A92  EF6D  F01D         	goto	l1348
  6791  003A96                     u8290:
  6792  003A96  BE16               	btfsc	(___xxtofl@val+3)^0,7,c
  6793  003A98  EF52  F01D         	goto	u8300
  6794  003A9C  EF50  F01D         	goto	u8301
  6795  003AA0                     u8301:
  6796  003AA0  EF6D  F01D         	goto	l1348
  6797  003AA4                     u8300:
  6798  003AA4  C013  F017         	movff	___xxtofl@val,??___xxtofl
  6799  003AA8  C014  F018         	movff	___xxtofl@val+1,??___xxtofl+1
  6800  003AAC  C015  F019         	movff	___xxtofl@val+2,??___xxtofl+2
  6801  003AB0  C016  F01A         	movff	___xxtofl@val+3,??___xxtofl+3
  6802  003AB4  1E17               	comf	??___xxtofl^0,f,c
  6803  003AB6  1E18               	comf	(??___xxtofl+1)^0,f,c
  6804  003AB8  1E19               	comf	(??___xxtofl+2)^0,f,c
  6805  003ABA  1E1A               	comf	(??___xxtofl+3)^0,f,c
  6806  003ABC  2A17               	incf	??___xxtofl^0,f,c
  6807  003ABE  0E00               	movlw	0
  6808  003AC0  2218               	addwfc	(??___xxtofl+1)^0,f,c
  6809  003AC2  2219               	addwfc	(??___xxtofl+2)^0,f,c
  6810  003AC4  221A               	addwfc	(??___xxtofl+3)^0,f,c
  6811  003AC6  C017  F01D         	movff	??___xxtofl,___xxtofl@arg
  6812  003ACA  C018  F01E         	movff	??___xxtofl+1,___xxtofl@arg+1
  6813  003ACE  C019  F01F         	movff	??___xxtofl+2,___xxtofl@arg+2
  6814  003AD2  C01A  F020         	movff	??___xxtofl+3,___xxtofl@arg+3
  6815  003AD6  EF75  F01D         	goto	l7733
  6816  003ADA                     l1348:
  6817  003ADA  C013  F01D         	movff	___xxtofl@val,___xxtofl@arg
  6818  003ADE  C014  F01E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6819  003AE2  C015  F01F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6820  003AE6  C016  F020         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6821  003AEA                     l7733:
  6822  003AEA  5013               	movf	___xxtofl@val^0,w,c
  6823  003AEC  1014               	iorwf	(___xxtofl@val+1)^0,w,c
  6824  003AEE  1015               	iorwf	(___xxtofl@val+2)^0,w,c
  6825  003AF0  1016               	iorwf	(___xxtofl@val+3)^0,w,c
  6826  003AF2  A4D8               	btfss	status,2,c
  6827  003AF4  EF7E  F01D         	goto	u8311
  6828  003AF8  EF80  F01D         	goto	u8310
  6829  003AFC                     u8311:
  6830  003AFC  EF8A  F01D         	goto	l7739
  6831  003B00                     u8310:
  6832  003B00  0E00               	movlw	0
  6833  003B02  6E13               	movwf	?___xxtofl^0,c
  6834  003B04  0E00               	movlw	0
  6835  003B06  6E14               	movwf	(?___xxtofl+1)^0,c
  6836  003B08  0E00               	movlw	0
  6837  003B0A  6E15               	movwf	(?___xxtofl+2)^0,c
  6838  003B0C  0E00               	movlw	0
  6839  003B0E  6E16               	movwf	(?___xxtofl+3)^0,c
  6840  003B10  EF1B  F01E         	goto	l1351
  6841  003B14                     l7739:
  6842  003B14  0E96               	movlw	150
  6843  003B16  6E1C               	movwf	___xxtofl@exp^0,c
  6844  003B18  EF94  F01D         	goto	l7743
  6845  003B1C                     l7741:
  6846  003B1C  2A1C               	incf	___xxtofl@exp^0,f,c
  6847  003B1E  90D8               	bcf	status,0,c
  6848  003B20  3220               	rrcf	(___xxtofl@arg+3)^0,f,c
  6849  003B22  321F               	rrcf	(___xxtofl@arg+2)^0,f,c
  6850  003B24  321E               	rrcf	(___xxtofl@arg+1)^0,f,c
  6851  003B26  321D               	rrcf	___xxtofl@arg^0,f,c
  6852  003B28                     l7743:
  6853  003B28  0E00               	movlw	0
  6854  003B2A  141D               	andwf	___xxtofl@arg^0,w,c
  6855  003B2C  6E17               	movwf	??___xxtofl^0,c
  6856  003B2E  0E00               	movlw	0
  6857  003B30  141E               	andwf	(___xxtofl@arg+1)^0,w,c
  6858  003B32  6E18               	movwf	(??___xxtofl+1)^0,c
  6859  003B34  0E00               	movlw	0
  6860  003B36  141F               	andwf	(___xxtofl@arg+2)^0,w,c
  6861  003B38  6E19               	movwf	(??___xxtofl+2)^0,c
  6862  003B3A  0EFE               	movlw	254
  6863  003B3C  1420               	andwf	(___xxtofl@arg+3)^0,w,c
  6864  003B3E  6E1A               	movwf	(??___xxtofl+3)^0,c
  6865  003B40  5017               	movf	??___xxtofl^0,w,c
  6866  003B42  1018               	iorwf	(??___xxtofl+1)^0,w,c
  6867  003B44  1019               	iorwf	(??___xxtofl+2)^0,w,c
  6868  003B46  101A               	iorwf	(??___xxtofl+3)^0,w,c
  6869  003B48  A4D8               	btfss	status,2,c
  6870  003B4A  EFA9  F01D         	goto	u8321
  6871  003B4E  EFAB  F01D         	goto	u8320
  6872  003B52                     u8321:
  6873  003B52  EF8E  F01D         	goto	l7741
  6874  003B56                     u8320:
  6875  003B56  EFB9  F01D         	goto	l1355
  6876  003B5A                     l7745:
  6877  003B5A  2A1C               	incf	___xxtofl@exp^0,f,c
  6878  003B5C  0E01               	movlw	1
  6879  003B5E  261D               	addwf	___xxtofl@arg^0,f,c
  6880  003B60  0E00               	movlw	0
  6881  003B62  221E               	addwfc	(___xxtofl@arg+1)^0,f,c
  6882  003B64  221F               	addwfc	(___xxtofl@arg+2)^0,f,c
  6883  003B66  2220               	addwfc	(___xxtofl@arg+3)^0,f,c
  6884  003B68  90D8               	bcf	status,0,c
  6885  003B6A  3220               	rrcf	(___xxtofl@arg+3)^0,f,c
  6886  003B6C  321F               	rrcf	(___xxtofl@arg+2)^0,f,c
  6887  003B6E  321E               	rrcf	(___xxtofl@arg+1)^0,f,c
  6888  003B70  321D               	rrcf	___xxtofl@arg^0,f,c
  6889  003B72                     l1355:
  6890  003B72  0E00               	movlw	0
  6891  003B74  141D               	andwf	___xxtofl@arg^0,w,c
  6892  003B76  6E17               	movwf	??___xxtofl^0,c
  6893  003B78  0E00               	movlw	0
  6894  003B7A  141E               	andwf	(___xxtofl@arg+1)^0,w,c
  6895  003B7C  6E18               	movwf	(??___xxtofl+1)^0,c
  6896  003B7E  0E00               	movlw	0
  6897  003B80  141F               	andwf	(___xxtofl@arg+2)^0,w,c
  6898  003B82  6E19               	movwf	(??___xxtofl+2)^0,c
  6899  003B84  0EFF               	movlw	255
  6900  003B86  1420               	andwf	(___xxtofl@arg+3)^0,w,c
  6901  003B88  6E1A               	movwf	(??___xxtofl+3)^0,c
  6902  003B8A  5017               	movf	??___xxtofl^0,w,c
  6903  003B8C  1018               	iorwf	(??___xxtofl+1)^0,w,c
  6904  003B8E  1019               	iorwf	(??___xxtofl+2)^0,w,c
  6905  003B90  101A               	iorwf	(??___xxtofl+3)^0,w,c
  6906  003B92  A4D8               	btfss	status,2,c
  6907  003B94  EFCE  F01D         	goto	u8331
  6908  003B98  EFD0  F01D         	goto	u8330
  6909  003B9C                     u8331:
  6910  003B9C  EFAD  F01D         	goto	l7745
  6911  003BA0                     u8330:
  6912  003BA0  EFD8  F01D         	goto	l7753
  6913  003BA4                     l7751:
  6914  003BA4  061C               	decf	___xxtofl@exp^0,f,c
  6915  003BA6  90D8               	bcf	status,0,c
  6916  003BA8  361D               	rlcf	___xxtofl@arg^0,f,c
  6917  003BAA  361E               	rlcf	(___xxtofl@arg+1)^0,f,c
  6918  003BAC  361F               	rlcf	(___xxtofl@arg+2)^0,f,c
  6919  003BAE  3620               	rlcf	(___xxtofl@arg+3)^0,f,c
  6920  003BB0                     l7753:
  6921  003BB0  BE1F               	btfsc	(___xxtofl@arg+2)^0,7,c
  6922  003BB2  EFDD  F01D         	goto	u8341
  6923  003BB6  EFDF  F01D         	goto	u8340
  6924  003BBA                     u8341:
  6925  003BBA  EFE7  F01D         	goto	l1362
  6926  003BBE                     u8340:
  6927  003BBE  0E02               	movlw	2
  6928  003BC0  601C               	cpfslt	___xxtofl@exp^0,c
  6929  003BC2  EFE5  F01D         	goto	u8351
  6930  003BC6  EFE7  F01D         	goto	u8350
  6931  003BCA                     u8351:
  6932  003BCA  EFD2  F01D         	goto	l7751
  6933  003BCE                     u8350:
  6934  003BCE                     l1362:
  6935  003BCE  B01C               	btfsc	___xxtofl@exp^0,0,c
  6936  003BD0  EFEC  F01D         	goto	u8361
  6937  003BD4  EFEE  F01D         	goto	u8360
  6938  003BD8                     u8361:
  6939  003BD8  EFEF  F01D         	goto	l7759
  6940  003BDC                     u8360:
  6941  003BDC  9E1F               	bcf	(___xxtofl@arg+2)^0,7,c
  6942  003BDE                     l7759:
  6943  003BDE  90D8               	bcf	status,0,c
  6944  003BE0  321C               	rrcf	___xxtofl@exp^0,f,c
  6945  003BE2  C01C  F017         	movff	___xxtofl@exp,??___xxtofl
  6946  003BE6  6A18               	clrf	(??___xxtofl+1)^0,c
  6947  003BE8  6A19               	clrf	(??___xxtofl+2)^0,c
  6948  003BEA  6A1A               	clrf	(??___xxtofl+3)^0,c
  6949  003BEC  C017  F01A         	movff	??___xxtofl,??___xxtofl+3
  6950  003BF0  6A19               	clrf	(??___xxtofl+2)^0,c
  6951  003BF2  6A18               	clrf	(??___xxtofl+1)^0,c
  6952  003BF4  6A17               	clrf	??___xxtofl^0,c
  6953  003BF6  5017               	movf	??___xxtofl^0,w,c
  6954  003BF8  121D               	iorwf	___xxtofl@arg^0,f,c
  6955  003BFA  5018               	movf	(??___xxtofl+1)^0,w,c
  6956  003BFC  121E               	iorwf	(___xxtofl@arg+1)^0,f,c
  6957  003BFE  5019               	movf	(??___xxtofl+2)^0,w,c
  6958  003C00  121F               	iorwf	(___xxtofl@arg+2)^0,f,c
  6959  003C02  501A               	movf	(??___xxtofl+3)^0,w,c
  6960  003C04  1220               	iorwf	(___xxtofl@arg+3)^0,f,c
  6961  003C06  501B               	movf	___xxtofl@sign^0,w,c
  6962  003C08  B4D8               	btfsc	status,2,c
  6963  003C0A  EF09  F01E         	goto	u8371
  6964  003C0E  EF0B  F01E         	goto	u8370
  6965  003C12                     u8371:
  6966  003C12  EF13  F01E         	goto	l7769
  6967  003C16                     u8370:
  6968  003C16  BE16               	btfsc	(___xxtofl@val+3)^0,7,c
  6969  003C18  EF12  F01E         	goto	u8380
  6970  003C1C  EF10  F01E         	goto	u8381
  6971  003C20                     u8381:
  6972  003C20  EF13  F01E         	goto	l7769
  6973  003C24                     u8380:
  6974  003C24  8E20               	bsf	(___xxtofl@arg+3)^0,7,c
  6975  003C26                     l7769:
  6976  003C26  C01D  F013         	movff	___xxtofl@arg,?___xxtofl
  6977  003C2A  C01E  F014         	movff	___xxtofl@arg+1,?___xxtofl+1
  6978  003C2E  C01F  F015         	movff	___xxtofl@arg+2,?___xxtofl+2
  6979  003C32  C020  F016         	movff	___xxtofl@arg+3,?___xxtofl+3
  6980  003C36                     l1351:
  6981  003C36  0012               	return		;funcret
  6982  003C38                     __end_of___xxtofl:
  6983                           	callstack 0
  6984                           
  6985 ;; *************** function ___wmul *****************
  6986 ;; Defined at:
  6987 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;  multiplier      2    5[COMRAM] unsigned int 
  6990 ;;  multiplicand    2    7[COMRAM] unsigned int 
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;  product         2    9[COMRAM] unsigned int 
  6993 ;; Return value:  Size  Location     Type
  6994 ;;                  2    5[COMRAM] unsigned int 
  6995 ;; Registers used:
  6996 ;;		wreg, status,2, status,0, prodl, prodh
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7002 ;;      Params:         4       0       0       0       0       0       0
  7003 ;;      Locals:         2       0       0       0       0       0       0
  7004 ;;      Temps:          0       0       0       0       0       0       0
  7005 ;;      Totals:         6       0       0       0       0       0       0
  7006 ;;Total ram usage:        6 bytes
  7007 ;; Hardware stack levels used:    1
  7008 ;; Hardware stack levels required when called:    2
  7009 ;; This function calls:
  7010 ;;		Nothing
  7011 ;; This function is called by:
  7012 ;;		_main
  7013 ;;		_sprintf
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           	psect	text13
  7018  005672                     __ptext13:
  7019                           	callstack 0
  7020  005672                     ___wmul:
  7021                           	callstack 27
  7022  005672  5006               	movf	___wmul@multiplier^0,w,c
  7023  005674  0208               	mulwf	___wmul@multiplicand^0,c
  7024  005676  CFF3 F00A          	movff	prodl,___wmul@product
  7025  00567A  CFF4 F00B          	movff	prodh,___wmul@product+1
  7026  00567E  5006               	movf	___wmul@multiplier^0,w,c
  7027  005680  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  7028  005682  50F3               	movf	243,w,c
  7029  005684  260B               	addwf	(___wmul@product+1)^0,f,c
  7030  005686  5007               	movf	(___wmul@multiplier+1)^0,w,c
  7031  005688  0208               	mulwf	___wmul@multiplicand^0,c
  7032  00568A  50F3               	movf	243,w,c
  7033  00568C  260B               	addwf	(___wmul@product+1)^0,f,c
  7034  00568E  C00A  F006         	movff	___wmul@product,?___wmul
  7035  005692  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  7036  005696  0012               	return		;funcret
  7037  005698                     __end_of___wmul:
  7038                           	callstack 0
  7039                           
  7040 ;; *************** function ___llmod *****************
  7041 ;; Defined at:
  7042 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  dividend        4   30[COMRAM] unsigned long 
  7045 ;;  divisor         4   34[COMRAM] unsigned long 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  counter         1   38[COMRAM] unsigned char 
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  4   30[COMRAM] unsigned long 
  7050 ;; Registers used:
  7051 ;;		wreg, status,2, status,0
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7057 ;;      Params:         8       0       0       0       0       0       0
  7058 ;;      Locals:         1       0       0       0       0       0       0
  7059 ;;      Temps:          0       0       0       0       0       0       0
  7060 ;;      Totals:         9       0       0       0       0       0       0
  7061 ;;Total ram usage:        9 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; Hardware stack levels required when called:    2
  7064 ;; This function calls:
  7065 ;;		Nothing
  7066 ;; This function is called by:
  7067 ;;		_sprintf
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071                           	psect	text14
  7072  005238                     __ptext14:
  7073                           	callstack 0
  7074  005238                     ___llmod:
  7075                           	callstack 27
  7076  005238  5023               	movf	___llmod@divisor^0,w,c
  7077  00523A  1024               	iorwf	(___llmod@divisor+1)^0,w,c
  7078  00523C  1025               	iorwf	(___llmod@divisor+2)^0,w,c
  7079  00523E  1026               	iorwf	(___llmod@divisor+3)^0,w,c
  7080  005240  B4D8               	btfsc	status,2,c
  7081  005242  EF25  F029         	goto	u8261
  7082  005246  EF27  F029         	goto	u8260
  7083  00524A                     u8261:
  7084  00524A  EF57  F029         	goto	l1113
  7085  00524E                     u8260:
  7086  00524E  0E01               	movlw	1
  7087  005250  6E27               	movwf	___llmod@counter^0,c
  7088  005252  EF31  F029         	goto	l7717
  7089  005256                     l7715:
  7090  005256  90D8               	bcf	status,0,c
  7091  005258  3623               	rlcf	___llmod@divisor^0,f,c
  7092  00525A  3624               	rlcf	(___llmod@divisor+1)^0,f,c
  7093  00525C  3625               	rlcf	(___llmod@divisor+2)^0,f,c
  7094  00525E  3626               	rlcf	(___llmod@divisor+3)^0,f,c
  7095  005260  2A27               	incf	___llmod@counter^0,f,c
  7096  005262                     l7717:
  7097  005262  AE26               	btfss	(___llmod@divisor+3)^0,7,c
  7098  005264  EF36  F029         	goto	u8271
  7099  005268  EF38  F029         	goto	u8270
  7100  00526C                     u8271:
  7101  00526C  EF2B  F029         	goto	l7715
  7102  005270                     u8270:
  7103  005270                     l7719:
  7104  005270  5023               	movf	___llmod@divisor^0,w,c
  7105  005272  5C1F               	subwf	___llmod@dividend^0,w,c
  7106  005274  5024               	movf	(___llmod@divisor+1)^0,w,c
  7107  005276  5820               	subwfb	(___llmod@dividend+1)^0,w,c
  7108  005278  5025               	movf	(___llmod@divisor+2)^0,w,c
  7109  00527A  5821               	subwfb	(___llmod@dividend+2)^0,w,c
  7110  00527C  5026               	movf	(___llmod@divisor+3)^0,w,c
  7111  00527E  5822               	subwfb	(___llmod@dividend+3)^0,w,c
  7112  005280  A0D8               	btfss	status,0,c
  7113  005282  EF45  F029         	goto	u8281
  7114  005286  EF47  F029         	goto	u8280
  7115  00528A                     u8281:
  7116  00528A  EF4F  F029         	goto	l7723
  7117  00528E                     u8280:
  7118  00528E  5023               	movf	___llmod@divisor^0,w,c
  7119  005290  5E1F               	subwf	___llmod@dividend^0,f,c
  7120  005292  5024               	movf	(___llmod@divisor+1)^0,w,c
  7121  005294  5A20               	subwfb	(___llmod@dividend+1)^0,f,c
  7122  005296  5025               	movf	(___llmod@divisor+2)^0,w,c
  7123  005298  5A21               	subwfb	(___llmod@dividend+2)^0,f,c
  7124  00529A  5026               	movf	(___llmod@divisor+3)^0,w,c
  7125  00529C  5A22               	subwfb	(___llmod@dividend+3)^0,f,c
  7126  00529E                     l7723:
  7127  00529E  90D8               	bcf	status,0,c
  7128  0052A0  3226               	rrcf	(___llmod@divisor+3)^0,f,c
  7129  0052A2  3225               	rrcf	(___llmod@divisor+2)^0,f,c
  7130  0052A4  3224               	rrcf	(___llmod@divisor+1)^0,f,c
  7131  0052A6  3223               	rrcf	___llmod@divisor^0,f,c
  7132  0052A8  2E27               	decfsz	___llmod@counter^0,f,c
  7133  0052AA  EF38  F029         	goto	l7719
  7134  0052AE                     l1113:
  7135  0052AE  C01F  F01F         	movff	___llmod@dividend,?___llmod
  7136  0052B2  C020  F020         	movff	___llmod@dividend+1,?___llmod+1
  7137  0052B6  C021  F021         	movff	___llmod@dividend+2,?___llmod+2
  7138  0052BA  C022  F022         	movff	___llmod@dividend+3,?___llmod+3
  7139  0052BE  0012               	return		;funcret
  7140  0052C0                     __end_of___llmod:
  7141                           	callstack 0
  7142                           
  7143 ;; *************** function ___fltol *****************
  7144 ;; Defined at:
  7145 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;  f1              4   82[COMRAM] unsigned long 
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;  exp1            1   91[COMRAM] unsigned char 
  7150 ;;  sign1           1   90[COMRAM] unsigned char 
  7151 ;; Return value:  Size  Location     Type
  7152 ;;                  4   82[COMRAM] long 
  7153 ;; Registers used:
  7154 ;;		wreg, status,2, status,0
  7155 ;; Tracked objects:
  7156 ;;		On entry : 0/0
  7157 ;;		On exit  : 0/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7160 ;;      Params:         4       0       0       0       0       0       0
  7161 ;;      Locals:         2       0       0       0       0       0       0
  7162 ;;      Temps:          4       0       0       0       0       0       0
  7163 ;;      Totals:        10       0       0       0       0       0       0
  7164 ;;Total ram usage:       10 bytes
  7165 ;; Hardware stack levels used:    1
  7166 ;; Hardware stack levels required when called:    2
  7167 ;; This function calls:
  7168 ;;		Nothing
  7169 ;; This function is called by:
  7170 ;;		_main
  7171 ;;		_sprintf
  7172 ;; This function uses a non-reentrant model
  7173 ;;
  7174                           
  7175                           	psect	text15
  7176  00486C                     __ptext15:
  7177                           	callstack 0
  7178  00486C                     ___fltol:
  7179                           	callstack 27
  7180  00486C  3455               	rlcf	(___fltol@f1+2)^0,w,c
  7181  00486E  3456               	rlcf	(___fltol@f1+3)^0,w,c
  7182  004870  6E5C               	movwf	___fltol@exp1^0,c
  7183  004872  505C               	movf	___fltol@exp1^0,w,c
  7184  004874  A4D8               	btfss	status,2,c
  7185  004876  EF3F  F024         	goto	u8191
  7186  00487A  EF41  F024         	goto	u8190
  7187  00487E                     u8191:
  7188  00487E  EF4B  F024         	goto	l7673
  7189  004882                     u8190:
  7190  004882                     l7669:
  7191  004882  0E00               	movlw	0
  7192  004884  6E53               	movwf	?___fltol^0,c
  7193  004886  0E00               	movlw	0
  7194  004888  6E54               	movwf	(?___fltol+1)^0,c
  7195  00488A  0E00               	movlw	0
  7196  00488C  6E55               	movwf	(?___fltol+2)^0,c
  7197  00488E  0E00               	movlw	0
  7198  004890  6E56               	movwf	(?___fltol+3)^0,c
  7199  004892  EFB8  F024         	goto	l977
  7200  004896                     l7673:
  7201  004896  C053  F057         	movff	___fltol@f1,??___fltol
  7202  00489A  C054  F058         	movff	___fltol@f1+1,??___fltol+1
  7203  00489E  C055  F059         	movff	___fltol@f1+2,??___fltol+2
  7204  0048A2  C056  F05A         	movff	___fltol@f1+3,??___fltol+3
  7205  0048A6  0E20               	movlw	32
  7206  0048A8  EF5B  F024         	goto	u8200
  7207  0048AC                     u8205:
  7208  0048AC  90D8               	bcf	status,0,c
  7209  0048AE  325A               	rrcf	(??___fltol+3)^0,f,c
  7210  0048B0  3259               	rrcf	(??___fltol+2)^0,f,c
  7211  0048B2  3258               	rrcf	(??___fltol+1)^0,f,c
  7212  0048B4  3257               	rrcf	??___fltol^0,f,c
  7213  0048B6                     u8200:
  7214  0048B6  2EE8               	decfsz	wreg,f,c
  7215  0048B8  EF56  F024         	goto	u8205
  7216  0048BC  5057               	movf	??___fltol^0,w,c
  7217  0048BE  6E5B               	movwf	___fltol@sign1^0,c
  7218  0048C0  8E55               	bsf	(___fltol@f1+2)^0,7,c
  7219  0048C2  0EFF               	movlw	255
  7220  0048C4  1653               	andwf	___fltol@f1^0,f,c
  7221  0048C6  0EFF               	movlw	255
  7222  0048C8  1654               	andwf	(___fltol@f1+1)^0,f,c
  7223  0048CA  0EFF               	movlw	255
  7224  0048CC  1655               	andwf	(___fltol@f1+2)^0,f,c
  7225  0048CE  0E00               	movlw	0
  7226  0048D0  1656               	andwf	(___fltol@f1+3)^0,f,c
  7227  0048D2  0E96               	movlw	150
  7228  0048D4  5E5C               	subwf	___fltol@exp1^0,f,c
  7229  0048D6  BE5C               	btfsc	___fltol@exp1^0,7,c
  7230  0048D8  EF72  F024         	goto	u8210
  7231  0048DC  EF70  F024         	goto	u8211
  7232  0048E0                     u8211:
  7233  0048E0  EF88  F024         	goto	l7693
  7234  0048E4                     u8210:
  7235  0048E4  505C               	movf	___fltol@exp1^0,w,c
  7236  0048E6  0A80               	xorlw	128
  7237  0048E8  0F97               	addlw	151
  7238  0048EA  B0D8               	btfsc	status,0,c
  7239  0048EC  EF7A  F024         	goto	u8221
  7240  0048F0  EF7C  F024         	goto	u8220
  7241  0048F4                     u8221:
  7242  0048F4  EF7E  F024         	goto	l7689
  7243  0048F8                     u8220:
  7244  0048F8  EF41  F024         	goto	l7669
  7245  0048FC                     l7689:
  7246  0048FC  90D8               	bcf	status,0,c
  7247  0048FE  3256               	rrcf	(___fltol@f1+3)^0,f,c
  7248  004900  3255               	rrcf	(___fltol@f1+2)^0,f,c
  7249  004902  3254               	rrcf	(___fltol@f1+1)^0,f,c
  7250  004904  3253               	rrcf	___fltol@f1^0,f,c
  7251  004906  3E5C               	incfsz	___fltol@exp1^0,f,c
  7252  004908  EF7E  F024         	goto	l7689
  7253  00490C  EFA0  F024         	goto	l7703
  7254  004910                     l7693:
  7255  004910  0E1F               	movlw	31
  7256  004912  645C               	cpfsgt	___fltol@exp1^0,c
  7257  004914  EF8E  F024         	goto	u8231
  7258  004918  EF90  F024         	goto	u8230
  7259  00491C                     u8231:
  7260  00491C  EF98  F024         	goto	l7701
  7261  004920                     u8230:
  7262  004920  EF41  F024         	goto	l7669
  7263  004924                     l7699:
  7264  004924  90D8               	bcf	status,0,c
  7265  004926  3653               	rlcf	___fltol@f1^0,f,c
  7266  004928  3654               	rlcf	(___fltol@f1+1)^0,f,c
  7267  00492A  3655               	rlcf	(___fltol@f1+2)^0,f,c
  7268  00492C  3656               	rlcf	(___fltol@f1+3)^0,f,c
  7269  00492E  065C               	decf	___fltol@exp1^0,f,c
  7270  004930                     l7701:
  7271  004930  505C               	movf	___fltol@exp1^0,w,c
  7272  004932  A4D8               	btfss	status,2,c
  7273  004934  EF9E  F024         	goto	u8241
  7274  004938  EFA0  F024         	goto	u8240
  7275  00493C                     u8241:
  7276  00493C  EF92  F024         	goto	l7699
  7277  004940                     u8240:
  7278  004940                     l7703:
  7279  004940  505B               	movf	___fltol@sign1^0,w,c
  7280  004942  B4D8               	btfsc	status,2,c
  7281  004944  EFA6  F024         	goto	u8251
  7282  004948  EFA8  F024         	goto	u8250
  7283  00494C                     u8251:
  7284  00494C  EFB0  F024         	goto	l7707
  7285  004950                     u8250:
  7286  004950  1E56               	comf	(___fltol@f1+3)^0,f,c
  7287  004952  1E55               	comf	(___fltol@f1+2)^0,f,c
  7288  004954  1E54               	comf	(___fltol@f1+1)^0,f,c
  7289  004956  6C53               	negf	___fltol@f1^0,c
  7290  004958  0E00               	movlw	0
  7291  00495A  2254               	addwfc	(___fltol@f1+1)^0,f,c
  7292  00495C  2255               	addwfc	(___fltol@f1+2)^0,f,c
  7293  00495E  2256               	addwfc	(___fltol@f1+3)^0,f,c
  7294  004960                     l7707:
  7295  004960  C053  F053         	movff	___fltol@f1,?___fltol
  7296  004964  C054  F054         	movff	___fltol@f1+1,?___fltol+1
  7297  004968  C055  F055         	movff	___fltol@f1+2,?___fltol+2
  7298  00496C  C056  F056         	movff	___fltol@f1+3,?___fltol+3
  7299  004970                     l977:
  7300  004970  0012               	return		;funcret
  7301  004972                     __end_of___fltol:
  7302                           	callstack 0
  7303                           
  7304 ;; *************** function ___flsub *****************
  7305 ;; Defined at:
  7306 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7307 ;; Parameters:    Size  Location     Type
  7308 ;;  b               4   86[COMRAM] long 
  7309 ;;  a               4   90[COMRAM] long 
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;		None
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  4   86[COMRAM] long 
  7314 ;; Registers used:
  7315 ;;		wreg, status,2, status,0, cstack
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7321 ;;      Params:         8       0       0       0       0       0       0
  7322 ;;      Locals:         0       0       0       0       0       0       0
  7323 ;;      Temps:          0       0       0       0       0       0       0
  7324 ;;      Totals:         8       0       0       0       0       0       0
  7325 ;;Total ram usage:        8 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; Hardware stack levels required when called:    3
  7328 ;; This function calls:
  7329 ;;		___fladd
  7330 ;; This function is called by:
  7331 ;;		_main
  7332 ;;		_sprintf
  7333 ;; This function uses a non-reentrant model
  7334 ;;
  7335                           
  7336                           	psect	text16
  7337  005566                     __ptext16:
  7338                           	callstack 0
  7339  005566                     ___flsub:
  7340                           	callstack 26
  7341  005566  0E00               	movlw	0
  7342  005568  1A5B               	xorwf	___flsub@a^0,f,c
  7343  00556A  0E00               	movlw	0
  7344  00556C  1A5C               	xorwf	(___flsub@a+1)^0,f,c
  7345  00556E  0E00               	movlw	0
  7346  005570  1A5D               	xorwf	(___flsub@a+2)^0,f,c
  7347  005572  0E80               	movlw	128
  7348  005574  1A5E               	xorwf	(___flsub@a+3)^0,f,c
  7349  005576  C057  F047         	movff	___flsub@b,___fladd@b
  7350  00557A  C058  F048         	movff	___flsub@b+1,___fladd@b+1
  7351  00557E  C059  F049         	movff	___flsub@b+2,___fladd@b+2
  7352  005582  C05A  F04A         	movff	___flsub@b+3,___fladd@b+3
  7353  005586  C05B  F04B         	movff	___flsub@a,___fladd@a
  7354  00558A  C05C  F04C         	movff	___flsub@a+1,___fladd@a+1
  7355  00558E  C05D  F04D         	movff	___flsub@a+2,___fladd@a+2
  7356  005592  C05E  F04E         	movff	___flsub@a+3,___fladd@a+3
  7357  005596  ECB9  F00F         	call	___fladd	;wreg free
  7358  00559A  C047  F057         	movff	?___fladd,?___flsub
  7359  00559E  C048  F058         	movff	?___fladd+1,?___flsub+1
  7360  0055A2  C049  F059         	movff	?___fladd+2,?___flsub+2
  7361  0055A6  C04A  F05A         	movff	?___fladd+3,?___flsub+3
  7362  0055AA  0012               	return		;funcret
  7363  0055AC                     __end_of___flsub:
  7364                           	callstack 0
  7365                           
  7366 ;; *************** function ___fladd *****************
  7367 ;; Defined at:
  7368 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;  b               4   70[COMRAM] long 
  7371 ;;  a               4   74[COMRAM] long 
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;  grs             1   85[COMRAM] unsigned char 
  7374 ;;  bexp            1   84[COMRAM] unsigned char 
  7375 ;;  aexp            1   83[COMRAM] unsigned char 
  7376 ;;  signs           1   82[COMRAM] unsigned char 
  7377 ;; Return value:  Size  Location     Type
  7378 ;;                  4   70[COMRAM] unsigned char 
  7379 ;; Registers used:
  7380 ;;		wreg, status,2, status,0
  7381 ;; Tracked objects:
  7382 ;;		On entry : 0/0
  7383 ;;		On exit  : 0/0
  7384 ;;		Unchanged: 0/0
  7385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7386 ;;      Params:         8       0       0       0       0       0       0
  7387 ;;      Locals:         4       0       0       0       0       0       0
  7388 ;;      Temps:          4       0       0       0       0       0       0
  7389 ;;      Totals:        16       0       0       0       0       0       0
  7390 ;;Total ram usage:       16 bytes
  7391 ;; Hardware stack levels used:    1
  7392 ;; Hardware stack levels required when called:    2
  7393 ;; This function calls:
  7394 ;;		Nothing
  7395 ;; This function is called by:
  7396 ;;		_main
  7397 ;;		_sprintf
  7398 ;;		___flsub
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text17
  7403  001F72                     __ptext17:
  7404                           	callstack 0
  7405  001F72                     ___fladd:
  7406                           	callstack 26
  7407  001F72  504A               	movf	(___fladd@b+3)^0,w,c
  7408  001F74  0B80               	andlw	128
  7409  001F76  6E53               	movwf	___fladd@signs^0,c
  7410  001F78  504A               	movf	(___fladd@b+3)^0,w,c
  7411  001F7A  244A               	addwf	(___fladd@b+3)^0,w,c
  7412  001F7C  6E55               	movwf	___fladd@bexp^0,c
  7413  001F7E  AE49               	btfss	(___fladd@b+2)^0,7,c
  7414  001F80  EFC4  F00F         	goto	u6521
  7415  001F84  EFC6  F00F         	goto	u6520
  7416  001F88                     u6521:
  7417  001F88  EFC7  F00F         	goto	l6405
  7418  001F8C                     u6520:
  7419  001F8C  8055               	bsf	___fladd@bexp^0,0,c
  7420  001F8E                     l6405:
  7421  001F8E  5055               	movf	___fladd@bexp^0,w,c
  7422  001F90  B4D8               	btfsc	status,2,c
  7423  001F92  EFCD  F00F         	goto	u6531
  7424  001F96  EFCF  F00F         	goto	u6530
  7425  001F9A                     u6531:
  7426  001F9A  EFE4  F00F         	goto	l6415
  7427  001F9E                     u6530:
  7428  001F9E  2855               	incf	___fladd@bexp^0,w,c
  7429  001FA0  A4D8               	btfss	status,2,c
  7430  001FA2  EFD5  F00F         	goto	u6541
  7431  001FA6  EFD7  F00F         	goto	u6540
  7432  001FAA                     u6541:
  7433  001FAA  EFDF  F00F         	goto	l6411
  7434  001FAE                     u6540:
  7435  001FAE  0E00               	movlw	0
  7436  001FB0  6E47               	movwf	___fladd@b^0,c
  7437  001FB2  0E00               	movlw	0
  7438  001FB4  6E48               	movwf	(___fladd@b+1)^0,c
  7439  001FB6  0E00               	movlw	0
  7440  001FB8  6E49               	movwf	(___fladd@b+2)^0,c
  7441  001FBA  0E00               	movlw	0
  7442  001FBC  6E4A               	movwf	(___fladd@b+3)^0,c
  7443  001FBE                     l6411:
  7444  001FBE  8E49               	bsf	(___fladd@b+2)^0,7,c
  7445  001FC0  0E00               	movlw	0
  7446  001FC2  6E4A               	movwf	(___fladd@b+3)^0,c
  7447  001FC4  EFEC  F00F         	goto	l6417
  7448  001FC8                     l6415:
  7449  001FC8  0E00               	movlw	0
  7450  001FCA  6E47               	movwf	___fladd@b^0,c
  7451  001FCC  0E00               	movlw	0
  7452  001FCE  6E48               	movwf	(___fladd@b+1)^0,c
  7453  001FD0  0E00               	movlw	0
  7454  001FD2  6E49               	movwf	(___fladd@b+2)^0,c
  7455  001FD4  0E00               	movlw	0
  7456  001FD6  6E4A               	movwf	(___fladd@b+3)^0,c
  7457  001FD8                     l6417:
  7458  001FD8  504E               	movf	(___fladd@a+3)^0,w,c
  7459  001FDA  0B80               	andlw	128
  7460  001FDC  6E54               	movwf	___fladd@aexp^0,c
  7461  001FDE  5053               	movf	___fladd@signs^0,w,c
  7462  001FE0  1854               	xorwf	___fladd@aexp^0,w,c
  7463  001FE2  B4D8               	btfsc	status,2,c
  7464  001FE4  EFF6  F00F         	goto	u6551
  7465  001FE8  EFF8  F00F         	goto	u6550
  7466  001FEC                     u6551:
  7467  001FEC  EFF9  F00F         	goto	l6423
  7468  001FF0                     u6550:
  7469  001FF0  8C53               	bsf	___fladd@signs^0,6,c
  7470  001FF2                     l6423:
  7471  001FF2  504E               	movf	(___fladd@a+3)^0,w,c
  7472  001FF4  244E               	addwf	(___fladd@a+3)^0,w,c
  7473  001FF6  6E54               	movwf	___fladd@aexp^0,c
  7474  001FF8  AE4D               	btfss	(___fladd@a+2)^0,7,c
  7475  001FFA  EF01  F010         	goto	u6561
  7476  001FFE  EF03  F010         	goto	u6560
  7477  002002                     u6561:
  7478  002002  EF04  F010         	goto	l6429
  7479  002006                     u6560:
  7480  002006  8054               	bsf	___fladd@aexp^0,0,c
  7481  002008                     l6429:
  7482  002008  5054               	movf	___fladd@aexp^0,w,c
  7483  00200A  B4D8               	btfsc	status,2,c
  7484  00200C  EF0A  F010         	goto	u6571
  7485  002010  EF0C  F010         	goto	u6570
  7486  002014                     u6571:
  7487  002014  EF21  F010         	goto	l6439
  7488  002018                     u6570:
  7489  002018  2854               	incf	___fladd@aexp^0,w,c
  7490  00201A  A4D8               	btfss	status,2,c
  7491  00201C  EF12  F010         	goto	u6581
  7492  002020  EF14  F010         	goto	u6580
  7493  002024                     u6581:
  7494  002024  EF1C  F010         	goto	l6435
  7495  002028                     u6580:
  7496  002028  0E00               	movlw	0
  7497  00202A  6E4B               	movwf	___fladd@a^0,c
  7498  00202C  0E00               	movlw	0
  7499  00202E  6E4C               	movwf	(___fladd@a+1)^0,c
  7500  002030  0E00               	movlw	0
  7501  002032  6E4D               	movwf	(___fladd@a+2)^0,c
  7502  002034  0E00               	movlw	0
  7503  002036  6E4E               	movwf	(___fladd@a+3)^0,c
  7504  002038                     l6435:
  7505  002038  8E4D               	bsf	(___fladd@a+2)^0,7,c
  7506  00203A  0E00               	movlw	0
  7507  00203C  6E4E               	movwf	(___fladd@a+3)^0,c
  7508  00203E  EF29  F010         	goto	l6441
  7509  002042                     l6439:
  7510  002042  0E00               	movlw	0
  7511  002044  6E4B               	movwf	___fladd@a^0,c
  7512  002046  0E00               	movlw	0
  7513  002048  6E4C               	movwf	(___fladd@a+1)^0,c
  7514  00204A  0E00               	movlw	0
  7515  00204C  6E4D               	movwf	(___fladd@a+2)^0,c
  7516  00204E  0E00               	movlw	0
  7517  002050  6E4E               	movwf	(___fladd@a+3)^0,c
  7518  002052                     l6441:
  7519  002052  5055               	movf	___fladd@bexp^0,w,c
  7520  002054  5C54               	subwf	___fladd@aexp^0,w,c
  7521  002056  B0D8               	btfsc	status,0,c
  7522  002058  EF30  F010         	goto	u6591
  7523  00205C  EF32  F010         	goto	u6590
  7524  002060                     u6591:
  7525  002060  EF59  F010         	goto	l6477
  7526  002064                     u6590:
  7527  002064  AC53               	btfss	___fladd@signs^0,6,c
  7528  002066  EF37  F010         	goto	u6601
  7529  00206A  EF39  F010         	goto	u6600
  7530  00206E                     u6601:
  7531  00206E  EF3B  F010         	goto	l6447
  7532  002072                     u6600:
  7533  002072  0E80               	movlw	128
  7534  002074  1A53               	xorwf	___fladd@signs^0,f,c
  7535  002076                     l6447:
  7536  002076  C055  F056         	movff	___fladd@bexp,___fladd@grs
  7537  00207A  C054  F055         	movff	___fladd@aexp,___fladd@bexp
  7538  00207E  C056  F054         	movff	___fladd@grs,___fladd@aexp
  7539  002082  C047  F056         	movff	___fladd@b,___fladd@grs
  7540  002086  C04B  F047         	movff	___fladd@a,___fladd@b
  7541  00208A  C056  F04B         	movff	___fladd@grs,___fladd@a
  7542  00208E  C048  F056         	movff	___fladd@b+1,___fladd@grs
  7543  002092  C04C  F048         	movff	___fladd@a+1,___fladd@b+1
  7544  002096  C056  F04C         	movff	___fladd@grs,___fladd@a+1
  7545  00209A  C049  F056         	movff	___fladd@b+2,___fladd@grs
  7546  00209E  C04D  F049         	movff	___fladd@a+2,___fladd@b+2
  7547  0020A2  C056  F04D         	movff	___fladd@grs,___fladd@a+2
  7548  0020A6  C04A  F056         	movff	___fladd@b+3,___fladd@grs
  7549  0020AA  C04E  F04A         	movff	___fladd@a+3,___fladd@b+3
  7550  0020AE  C056  F04E         	movff	___fladd@grs,___fladd@a+3
  7551  0020B2                     l6477:
  7552  0020B2  0E00               	movlw	0
  7553  0020B4  6E56               	movwf	___fladd@grs^0,c
  7554  0020B6  5055               	movf	___fladd@bexp^0,w,c
  7555  0020B8  C054  F04F         	movff	___fladd@aexp,??___fladd
  7556  0020BC  6A50               	clrf	(??___fladd+1)^0,c
  7557  0020BE  5E4F               	subwf	??___fladd^0,f,c
  7558  0020C0  0E00               	movlw	0
  7559  0020C2  5A50               	subwfb	(??___fladd+1)^0,f,c
  7560  0020C4  BE50               	btfsc	(??___fladd+1)^0,7,c
  7561  0020C6  EF6E  F010         	goto	u6611
  7562  0020CA  5050               	movf	(??___fladd+1)^0,w,c
  7563  0020CC  E109               	bnz	u6610
  7564  0020CE  0E1A               	movlw	26
  7565  0020D0  5C4F               	subwf	??___fladd^0,w,c
  7566  0020D2  A0D8               	btfss	status,0,c
  7567  0020D4  EF6E  F010         	goto	u6611
  7568  0020D8  EF70  F010         	goto	u6610
  7569  0020DC                     u6611:
  7570  0020DC  EFA7  F010         	goto	l1222
  7571  0020E0                     u6610:
  7572  0020E0  5047               	movf	___fladd@b^0,w,c
  7573  0020E2  1048               	iorwf	(___fladd@b+1)^0,w,c
  7574  0020E4  1049               	iorwf	(___fladd@b+2)^0,w,c
  7575  0020E6  104A               	iorwf	(___fladd@b+3)^0,w,c
  7576  0020E8  A4D8               	btfss	status,2,c
  7577  0020EA  EF79  F010         	goto	u6621
  7578  0020EE  EF7C  F010         	goto	u6620
  7579  0020F2                     u6621:
  7580  0020F2  0E01               	movlw	1
  7581  0020F4  EF7D  F010         	goto	u6630
  7582  0020F8                     u6620:
  7583  0020F8  0E00               	movlw	0
  7584  0020FA                     u6630:
  7585  0020FA  6E56               	movwf	___fladd@grs^0,c
  7586  0020FC  0E00               	movlw	0
  7587  0020FE  6E47               	movwf	___fladd@b^0,c
  7588  002100  0E00               	movlw	0
  7589  002102  6E48               	movwf	(___fladd@b+1)^0,c
  7590  002104  0E00               	movlw	0
  7591  002106  6E49               	movwf	(___fladd@b+2)^0,c
  7592  002108  0E00               	movlw	0
  7593  00210A  6E4A               	movwf	(___fladd@b+3)^0,c
  7594  00210C  C054  F055         	movff	___fladd@aexp,___fladd@bexp
  7595  002110  EFB0  F010         	goto	l1221
  7596  002114                     l1223:
  7597  002114  A056               	btfss	___fladd@grs^0,0,c
  7598  002116  EF8F  F010         	goto	u6641
  7599  00211A  EF91  F010         	goto	u6640
  7600  00211E                     u6641:
  7601  00211E  EF97  F010         	goto	l6489
  7602  002122                     u6640:
  7603  002122  90D8               	bcf	status,0,c
  7604  002124  3056               	rrcf	___fladd@grs^0,w,c
  7605  002126  0901               	iorlw	1
  7606  002128  6E56               	movwf	___fladd@grs^0,c
  7607  00212A  EF99  F010         	goto	l6491
  7608  00212E                     l6489:
  7609  00212E  90D8               	bcf	status,0,c
  7610  002130  3256               	rrcf	___fladd@grs^0,f,c
  7611  002132                     l6491:
  7612  002132  A047               	btfss	___fladd@b^0,0,c
  7613  002134  EF9E  F010         	goto	u6651
  7614  002138  EFA0  F010         	goto	u6650
  7615  00213C                     u6651:
  7616  00213C  EFA1  F010         	goto	l6495
  7617  002140                     u6650:
  7618  002140  8E56               	bsf	___fladd@grs^0,7,c
  7619  002142                     l6495:
  7620  002142  344A               	rlcf	(___fladd@b+3)^0,w,c
  7621  002144  324A               	rrcf	(___fladd@b+3)^0,f,c
  7622  002146  3249               	rrcf	(___fladd@b+2)^0,f,c
  7623  002148  3248               	rrcf	(___fladd@b+1)^0,f,c
  7624  00214A  3247               	rrcf	___fladd@b^0,f,c
  7625  00214C  2A55               	incf	___fladd@bexp^0,f,c
  7626  00214E                     l1222:
  7627  00214E  5054               	movf	___fladd@aexp^0,w,c
  7628  002150  5C55               	subwf	___fladd@bexp^0,w,c
  7629  002152  A0D8               	btfss	status,0,c
  7630  002154  EFAE  F010         	goto	u6661
  7631  002158  EFB0  F010         	goto	u6660
  7632  00215C                     u6661:
  7633  00215C  EF8A  F010         	goto	l1223
  7634  002160                     u6660:
  7635  002160                     l1221:
  7636  002160  BC53               	btfsc	___fladd@signs^0,6,c
  7637  002162  EFB5  F010         	goto	u6671
  7638  002166  EFB7  F010         	goto	u6670
  7639  00216A                     u6671:
  7640  00216A  EFF7  F010         	goto	l6523
  7641  00216E                     u6670:
  7642  00216E  5055               	movf	___fladd@bexp^0,w,c
  7643  002170  A4D8               	btfss	status,2,c
  7644  002172  EFBD  F010         	goto	u6681
  7645  002176  EFBF  F010         	goto	u6680
  7646  00217A                     u6681:
  7647  00217A  EFC9  F010         	goto	l6505
  7648  00217E                     u6680:
  7649  00217E  0E00               	movlw	0
  7650  002180  6E47               	movwf	?___fladd^0,c
  7651  002182  0E00               	movlw	0
  7652  002184  6E48               	movwf	(?___fladd+1)^0,c
  7653  002186  0E00               	movlw	0
  7654  002188  6E49               	movwf	(?___fladd+2)^0,c
  7655  00218A  0E00               	movlw	0
  7656  00218C  6E4A               	movwf	(?___fladd+3)^0,c
  7657  00218E  EF18  F012         	goto	l1230
  7658  002192                     l6505:
  7659  002192  504B               	movf	___fladd@a^0,w,c
  7660  002194  2647               	addwf	___fladd@b^0,f,c
  7661  002196  504C               	movf	(___fladd@a+1)^0,w,c
  7662  002198  2248               	addwfc	(___fladd@b+1)^0,f,c
  7663  00219A  504D               	movf	(___fladd@a+2)^0,w,c
  7664  00219C  2249               	addwfc	(___fladd@b+2)^0,f,c
  7665  00219E  504E               	movf	(___fladd@a+3)^0,w,c
  7666  0021A0  224A               	addwfc	(___fladd@b+3)^0,f,c
  7667  0021A2  A04A               	btfss	(___fladd@b+3)^0,0,c
  7668  0021A4  EFD6  F010         	goto	u6691
  7669  0021A8  EFD8  F010         	goto	u6690
  7670  0021AC                     u6691:
  7671  0021AC  EF84  F011         	goto	l6559
  7672  0021B0                     u6690:
  7673  0021B0  A056               	btfss	___fladd@grs^0,0,c
  7674  0021B2  EFDD  F010         	goto	u6701
  7675  0021B6  EFDF  F010         	goto	u6700
  7676  0021BA                     u6701:
  7677  0021BA  EFE5  F010         	goto	l6513
  7678  0021BE                     u6700:
  7679  0021BE  90D8               	bcf	status,0,c
  7680  0021C0  3056               	rrcf	___fladd@grs^0,w,c
  7681  0021C2  0901               	iorlw	1
  7682  0021C4  6E56               	movwf	___fladd@grs^0,c
  7683  0021C6  EFE7  F010         	goto	l6515
  7684  0021CA                     l6513:
  7685  0021CA  90D8               	bcf	status,0,c
  7686  0021CC  3256               	rrcf	___fladd@grs^0,f,c
  7687  0021CE                     l6515:
  7688  0021CE  A047               	btfss	___fladd@b^0,0,c
  7689  0021D0  EFEC  F010         	goto	u6711
  7690  0021D4  EFEE  F010         	goto	u6710
  7691  0021D8                     u6711:
  7692  0021D8  EFEF  F010         	goto	l6519
  7693  0021DC                     u6710:
  7694  0021DC  8E56               	bsf	___fladd@grs^0,7,c
  7695  0021DE                     l6519:
  7696  0021DE  344A               	rlcf	(___fladd@b+3)^0,w,c
  7697  0021E0  324A               	rrcf	(___fladd@b+3)^0,f,c
  7698  0021E2  3249               	rrcf	(___fladd@b+2)^0,f,c
  7699  0021E4  3248               	rrcf	(___fladd@b+1)^0,f,c
  7700  0021E6  3247               	rrcf	___fladd@b^0,f,c
  7701  0021E8  2A55               	incf	___fladd@bexp^0,f,c
  7702  0021EA  EF84  F011         	goto	l6559
  7703  0021EE                     l6523:
  7704  0021EE  504B               	movf	___fladd@a^0,w,c
  7705  0021F0  5C47               	subwf	___fladd@b^0,w,c
  7706  0021F2  504C               	movf	(___fladd@a+1)^0,w,c
  7707  0021F4  5848               	subwfb	(___fladd@b+1)^0,w,c
  7708  0021F6  504D               	movf	(___fladd@a+2)^0,w,c
  7709  0021F8  5849               	subwfb	(___fladd@b+2)^0,w,c
  7710  0021FA  504A               	movf	(___fladd@b+3)^0,w,c
  7711  0021FC  0A80               	xorlw	128
  7712  0021FE  6E4F               	movwf	??___fladd^0,c
  7713  002200  504E               	movf	(___fladd@a+3)^0,w,c
  7714  002202  0A80               	xorlw	128
  7715  002204  584F               	subwfb	??___fladd^0,w,c
  7716  002206  B0D8               	btfsc	status,0,c
  7717  002208  EF08  F011         	goto	u6721
  7718  00220C  EF0A  F011         	goto	u6720
  7719  002210                     u6721:
  7720  002210  EF35  F011         	goto	l6533
  7721  002214                     u6720:
  7722  002214  5047               	movf	___fladd@b^0,w,c
  7723  002216  5C4B               	subwf	___fladd@a^0,w,c
  7724  002218  6E4F               	movwf	??___fladd^0,c
  7725  00221A  5048               	movf	(___fladd@b+1)^0,w,c
  7726  00221C  584C               	subwfb	(___fladd@a+1)^0,w,c
  7727  00221E  6E50               	movwf	(??___fladd+1)^0,c
  7728  002220  5049               	movf	(___fladd@b+2)^0,w,c
  7729  002222  584D               	subwfb	(___fladd@a+2)^0,w,c
  7730  002224  6E51               	movwf	(??___fladd+2)^0,c
  7731  002226  504A               	movf	(___fladd@b+3)^0,w,c
  7732  002228  584E               	subwfb	(___fladd@a+3)^0,w,c
  7733  00222A  6E52               	movwf	(??___fladd+3)^0,c
  7734  00222C  0EFF               	movlw	255
  7735  00222E  244F               	addwf	??___fladd^0,w,c
  7736  002230  6E47               	movwf	___fladd@b^0,c
  7737  002232  0EFF               	movlw	255
  7738  002234  2050               	addwfc	(??___fladd+1)^0,w,c
  7739  002236  6E48               	movwf	(___fladd@b+1)^0,c
  7740  002238  0EFF               	movlw	255
  7741  00223A  2051               	addwfc	(??___fladd+2)^0,w,c
  7742  00223C  6E49               	movwf	(___fladd@b+2)^0,c
  7743  00223E  0EFF               	movlw	255
  7744  002240  2052               	addwfc	(??___fladd+3)^0,w,c
  7745  002242  6E4A               	movwf	(___fladd@b+3)^0,c
  7746  002244  0E80               	movlw	128
  7747  002246  1A53               	xorwf	___fladd@signs^0,f,c
  7748  002248  6C56               	negf	___fladd@grs^0,c
  7749  00224A  5056               	movf	___fladd@grs^0,w,c
  7750  00224C  A4D8               	btfss	status,2,c
  7751  00224E  EF2B  F011         	goto	u6731
  7752  002252  EF2D  F011         	goto	u6730
  7753  002256                     u6731:
  7754  002256  EF3D  F011         	goto	l1238
  7755  00225A                     u6730:
  7756  00225A  0E01               	movlw	1
  7757  00225C  2647               	addwf	___fladd@b^0,f,c
  7758  00225E  0E00               	movlw	0
  7759  002260  2248               	addwfc	(___fladd@b+1)^0,f,c
  7760  002262  2249               	addwfc	(___fladd@b+2)^0,f,c
  7761  002264  224A               	addwfc	(___fladd@b+3)^0,f,c
  7762  002266  EF3D  F011         	goto	l1238
  7763  00226A                     l6533:
  7764  00226A  504B               	movf	___fladd@a^0,w,c
  7765  00226C  5E47               	subwf	___fladd@b^0,f,c
  7766  00226E  504C               	movf	(___fladd@a+1)^0,w,c
  7767  002270  5A48               	subwfb	(___fladd@b+1)^0,f,c
  7768  002272  504D               	movf	(___fladd@a+2)^0,w,c
  7769  002274  5A49               	subwfb	(___fladd@b+2)^0,f,c
  7770  002276  504E               	movf	(___fladd@a+3)^0,w,c
  7771  002278  5A4A               	subwfb	(___fladd@b+3)^0,f,c
  7772  00227A                     l1238:
  7773  00227A  5047               	movf	___fladd@b^0,w,c
  7774  00227C  1048               	iorwf	(___fladd@b+1)^0,w,c
  7775  00227E  1049               	iorwf	(___fladd@b+2)^0,w,c
  7776  002280  104A               	iorwf	(___fladd@b+3)^0,w,c
  7777  002282  A4D8               	btfss	status,2,c
  7778  002284  EF46  F011         	goto	u6741
  7779  002288  EF48  F011         	goto	u6740
  7780  00228C                     u6741:
  7781  00228C  EF7D  F011         	goto	l6557
  7782  002290                     u6740:
  7783  002290  5056               	movf	___fladd@grs^0,w,c
  7784  002292  A4D8               	btfss	status,2,c
  7785  002294  EF4E  F011         	goto	u6751
  7786  002298  EF50  F011         	goto	u6750
  7787  00229C                     u6751:
  7788  00229C  EF7D  F011         	goto	l6557
  7789  0022A0                     u6750:
  7790  0022A0  0E00               	movlw	0
  7791  0022A2  6E47               	movwf	?___fladd^0,c
  7792  0022A4  0E00               	movlw	0
  7793  0022A6  6E48               	movwf	(?___fladd+1)^0,c
  7794  0022A8  0E00               	movlw	0
  7795  0022AA  6E49               	movwf	(?___fladd+2)^0,c
  7796  0022AC  0E00               	movlw	0
  7797  0022AE  6E4A               	movwf	(?___fladd+3)^0,c
  7798  0022B0  EF18  F012         	goto	l1230
  7799  0022B4                     l6541:
  7800  0022B4  90D8               	bcf	status,0,c
  7801  0022B6  3647               	rlcf	___fladd@b^0,f,c
  7802  0022B8  3648               	rlcf	(___fladd@b+1)^0,f,c
  7803  0022BA  3649               	rlcf	(___fladd@b+2)^0,f,c
  7804  0022BC  364A               	rlcf	(___fladd@b+3)^0,f,c
  7805  0022BE  AE56               	btfss	___fladd@grs^0,7,c
  7806  0022C0  EF64  F011         	goto	u6761
  7807  0022C4  EF66  F011         	goto	u6760
  7808  0022C8                     u6761:
  7809  0022C8  EF67  F011         	goto	l6547
  7810  0022CC                     u6760:
  7811  0022CC  8047               	bsf	___fladd@b^0,0,c
  7812  0022CE                     l6547:
  7813  0022CE  A056               	btfss	___fladd@grs^0,0,c
  7814  0022D0  EF6C  F011         	goto	u6771
  7815  0022D4  EF6E  F011         	goto	u6770
  7816  0022D8                     u6771:
  7817  0022D8  EF72  F011         	goto	l6551
  7818  0022DC                     u6770:
  7819  0022DC  80D8               	bsf	status,0,c
  7820  0022DE  3656               	rlcf	___fladd@grs^0,f,c
  7821  0022E0  EF74  F011         	goto	l6553
  7822  0022E4                     l6551:
  7823  0022E4  90D8               	bcf	status,0,c
  7824  0022E6  3656               	rlcf	___fladd@grs^0,f,c
  7825  0022E8                     l6553:
  7826  0022E8  5055               	movf	___fladd@bexp^0,w,c
  7827  0022EA  B4D8               	btfsc	status,2,c
  7828  0022EC  EF7A  F011         	goto	u6781
  7829  0022F0  EF7C  F011         	goto	u6780
  7830  0022F4                     u6781:
  7831  0022F4  EF7D  F011         	goto	l6557
  7832  0022F8                     u6780:
  7833  0022F8  0655               	decf	___fladd@bexp^0,f,c
  7834  0022FA                     l6557:
  7835  0022FA  AE49               	btfss	(___fladd@b+2)^0,7,c
  7836  0022FC  EF82  F011         	goto	u6791
  7837  002300  EF84  F011         	goto	u6790
  7838  002304                     u6791:
  7839  002304  EF5A  F011         	goto	l6541
  7840  002308                     u6790:
  7841  002308                     l6559:
  7842  002308  0E00               	movlw	0
  7843  00230A  6E54               	movwf	___fladd@aexp^0,c
  7844  00230C  AE56               	btfss	___fladd@grs^0,7,c
  7845  00230E  EF8B  F011         	goto	u6801
  7846  002312  EF8D  F011         	goto	u6800
  7847  002316                     u6801:
  7848  002316  EFA5  F011         	goto	l1247
  7849  00231A                     u6800:
  7850  00231A  C056  F04F         	movff	___fladd@grs,??___fladd
  7851  00231E  0E7F               	movlw	127
  7852  002320  164F               	andwf	??___fladd^0,f,c
  7853  002322  B4D8               	btfsc	status,2,c
  7854  002324  EF96  F011         	goto	u6811
  7855  002328  EF98  F011         	goto	u6810
  7856  00232C                     u6811:
  7857  00232C  EF9C  F011         	goto	l1248
  7858  002330                     u6810:
  7859  002330                     l6565:
  7860  002330  0E01               	movlw	1
  7861  002332  6E54               	movwf	___fladd@aexp^0,c
  7862  002334  EFA5  F011         	goto	l1247
  7863  002338                     l1248:
  7864  002338  A047               	btfss	___fladd@b^0,0,c
  7865  00233A  EFA1  F011         	goto	u6821
  7866  00233E  EFA3  F011         	goto	u6820
  7867  002342                     u6821:
  7868  002342  EFA5  F011         	goto	l1247
  7869  002346                     u6820:
  7870  002346  EF98  F011         	goto	l6565
  7871  00234A                     l1247:
  7872  00234A  5054               	movf	___fladd@aexp^0,w,c
  7873  00234C  B4D8               	btfsc	status,2,c
  7874  00234E  EFAB  F011         	goto	u6831
  7875  002352  EFAD  F011         	goto	u6830
  7876  002356                     u6831:
  7877  002356  EFD8  F011         	goto	l6577
  7878  00235A                     u6830:
  7879  00235A  0E01               	movlw	1
  7880  00235C  2647               	addwf	___fladd@b^0,f,c
  7881  00235E  0E00               	movlw	0
  7882  002360  2248               	addwfc	(___fladd@b+1)^0,f,c
  7883  002362  2249               	addwfc	(___fladd@b+2)^0,f,c
  7884  002364  224A               	addwfc	(___fladd@b+3)^0,f,c
  7885  002366  A04A               	btfss	(___fladd@b+3)^0,0,c
  7886  002368  EFB8  F011         	goto	u6841
  7887  00236C  EFBA  F011         	goto	u6840
  7888  002370                     u6841:
  7889  002370  EFD8  F011         	goto	l6577
  7890  002374                     u6840:
  7891  002374  C047  F04F         	movff	___fladd@b,??___fladd
  7892  002378  C048  F050         	movff	___fladd@b+1,??___fladd+1
  7893  00237C  C049  F051         	movff	___fladd@b+2,??___fladd+2
  7894  002380  C04A  F052         	movff	___fladd@b+3,??___fladd+3
  7895  002384  3452               	rlcf	(??___fladd+3)^0,w,c
  7896  002386  3252               	rrcf	(??___fladd+3)^0,f,c
  7897  002388  3251               	rrcf	(??___fladd+2)^0,f,c
  7898  00238A  3250               	rrcf	(??___fladd+1)^0,f,c
  7899  00238C  324F               	rrcf	??___fladd^0,f,c
  7900  00238E  C04F  F047         	movff	??___fladd,___fladd@b
  7901  002392  C050  F048         	movff	??___fladd+1,___fladd@b+1
  7902  002396  C051  F049         	movff	??___fladd+2,___fladd@b+2
  7903  00239A  C052  F04A         	movff	??___fladd+3,___fladd@b+3
  7904  00239E  2855               	incf	___fladd@bexp^0,w,c
  7905  0023A0  B4D8               	btfsc	status,2,c
  7906  0023A2  EFD5  F011         	goto	u6851
  7907  0023A6  EFD7  F011         	goto	u6850
  7908  0023AA                     u6851:
  7909  0023AA  EFD8  F011         	goto	l6577
  7910  0023AE                     u6850:
  7911  0023AE  2A55               	incf	___fladd@bexp^0,f,c
  7912  0023B0                     l6577:
  7913  0023B0  2855               	incf	___fladd@bexp^0,w,c
  7914  0023B2  B4D8               	btfsc	status,2,c
  7915  0023B4  EFDE  F011         	goto	u6861
  7916  0023B8  EFE0  F011         	goto	u6860
  7917  0023BC                     u6861:
  7918  0023BC  EFE8  F011         	goto	l6581
  7919  0023C0                     u6860:
  7920  0023C0  5055               	movf	___fladd@bexp^0,w,c
  7921  0023C2  A4D8               	btfss	status,2,c
  7922  0023C4  EFE6  F011         	goto	u6871
  7923  0023C8  EFE8  F011         	goto	u6870
  7924  0023CC                     u6871:
  7925  0023CC  EFFA  F011         	goto	l6585
  7926  0023D0                     u6870:
  7927  0023D0                     l6581:
  7928  0023D0  0E00               	movlw	0
  7929  0023D2  6E47               	movwf	___fladd@b^0,c
  7930  0023D4  0E00               	movlw	0
  7931  0023D6  6E48               	movwf	(___fladd@b+1)^0,c
  7932  0023D8  0E00               	movlw	0
  7933  0023DA  6E49               	movwf	(___fladd@b+2)^0,c
  7934  0023DC  0E00               	movlw	0
  7935  0023DE  6E4A               	movwf	(___fladd@b+3)^0,c
  7936  0023E0  5055               	movf	___fladd@bexp^0,w,c
  7937  0023E2  A4D8               	btfss	status,2,c
  7938  0023E4  EFF6  F011         	goto	u6881
  7939  0023E8  EFF8  F011         	goto	u6880
  7940  0023EC                     u6881:
  7941  0023EC  EFFA  F011         	goto	l6585
  7942  0023F0                     u6880:
  7943  0023F0  0E00               	movlw	0
  7944  0023F2  6E53               	movwf	___fladd@signs^0,c
  7945  0023F4                     l6585:
  7946  0023F4  A055               	btfss	___fladd@bexp^0,0,c
  7947  0023F6  EFFF  F011         	goto	u6891
  7948  0023FA  EF01  F012         	goto	u6890
  7949  0023FE                     u6891:
  7950  0023FE  EF04  F012         	goto	l6589
  7951  002402                     u6890:
  7952  002402  8E49               	bsf	(___fladd@b+2)^0,7,c
  7953  002404  EF05  F012         	goto	l6591
  7954  002408                     l6589:
  7955  002408  9E49               	bcf	(___fladd@b+2)^0,7,c
  7956  00240A                     l6591:
  7957  00240A  90D8               	bcf	status,0,c
  7958  00240C  3055               	rrcf	___fladd@bexp^0,w,c
  7959  00240E  6E4A               	movwf	(___fladd@b+3)^0,c
  7960  002410  AE53               	btfss	___fladd@signs^0,7,c
  7961  002412  EF0D  F012         	goto	u6901
  7962  002416  EF0F  F012         	goto	u6900
  7963  00241A                     u6901:
  7964  00241A  EF10  F012         	goto	l6597
  7965  00241E                     u6900:
  7966  00241E  8E4A               	bsf	(___fladd@b+3)^0,7,c
  7967  002420                     l6597:
  7968  002420  C047  F047         	movff	___fladd@b,?___fladd
  7969  002424  C048  F048         	movff	___fladd@b+1,?___fladd+1
  7970  002428  C049  F049         	movff	___fladd@b+2,?___fladd+2
  7971  00242C  C04A  F04A         	movff	___fladd@b+3,?___fladd+3
  7972  002430                     l1230:
  7973  002430  0012               	return		;funcret
  7974  002432                     __end_of___fladd:
  7975                           	callstack 0
  7976                           
  7977 ;; *************** function ___flneg *****************
  7978 ;; Defined at:
  7979 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;  f1              4    5[COMRAM] unsigned char 
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;		None
  7984 ;; Return value:  Size  Location     Type
  7985 ;;                  4    5[COMRAM] unsigned char 
  7986 ;; Registers used:
  7987 ;;		wreg, status,2, status,0
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7993 ;;      Params:         4       0       0       0       0       0       0
  7994 ;;      Locals:         0       0       0       0       0       0       0
  7995 ;;      Temps:          0       0       0       0       0       0       0
  7996 ;;      Totals:         4       0       0       0       0       0       0
  7997 ;;Total ram usage:        4 bytes
  7998 ;; Hardware stack levels used:    1
  7999 ;; Hardware stack levels required when called:    2
  8000 ;; This function calls:
  8001 ;;		Nothing
  8002 ;; This function is called by:
  8003 ;;		_sprintf
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           	psect	text18
  8008  0055AC                     __ptext18:
  8009                           	callstack 0
  8010  0055AC                     ___flneg:
  8011                           	callstack 27
  8012  0055AC  5006               	movf	___flneg@f1^0,w,c
  8013  0055AE  1007               	iorwf	(___flneg@f1+1)^0,w,c
  8014  0055B0  1008               	iorwf	(___flneg@f1+2)^0,w,c
  8015  0055B2  1009               	iorwf	(___flneg@f1+3)^0,w,c
  8016  0055B4  B4D8               	btfsc	status,2,c
  8017  0055B6  EFDF  F02A         	goto	u8181
  8018  0055BA  EFE1  F02A         	goto	u8180
  8019  0055BE                     u8181:
  8020  0055BE  EFE9  F02A         	goto	l7663
  8021  0055C2                     u8180:
  8022  0055C2  0E00               	movlw	0
  8023  0055C4  1A06               	xorwf	___flneg@f1^0,f,c
  8024  0055C6  0E00               	movlw	0
  8025  0055C8  1A07               	xorwf	(___flneg@f1+1)^0,f,c
  8026  0055CA  0E00               	movlw	0
  8027  0055CC  1A08               	xorwf	(___flneg@f1+2)^0,f,c
  8028  0055CE  0E80               	movlw	128
  8029  0055D0  1A09               	xorwf	(___flneg@f1+3)^0,f,c
  8030  0055D2                     l7663:
  8031  0055D2  C006  F006         	movff	___flneg@f1,?___flneg
  8032  0055D6  C007  F007         	movff	___flneg@f1+1,?___flneg+1
  8033  0055DA  C008  F008         	movff	___flneg@f1+2,?___flneg+2
  8034  0055DE  C009  F009         	movff	___flneg@f1+3,?___flneg+3
  8035  0055E2  0012               	return		;funcret
  8036  0055E4                     __end_of___flneg:
  8037                           	callstack 0
  8038                           
  8039 ;; *************** function ___flge *****************
  8040 ;; Defined at:
  8041 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;  ff1             4   32[COMRAM] unsigned char 
  8044 ;;  ff2             4   36[COMRAM] unsigned char 
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;		None
  8047 ;; Return value:  Size  Location     Type
  8048 ;;		None               void
  8049 ;; Registers used:
  8050 ;;		wreg, status,2, status,0
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8056 ;;      Params:         8       0       0       0       0       0       0
  8057 ;;      Locals:         0       0       0       0       0       0       0
  8058 ;;      Temps:          4       0       0       0       0       0       0
  8059 ;;      Totals:        12       0       0       0       0       0       0
  8060 ;;Total ram usage:       12 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; Hardware stack levels required when called:    2
  8063 ;; This function calls:
  8064 ;;		Nothing
  8065 ;; This function is called by:
  8066 ;;		_main
  8067 ;;		_sprintf
  8068 ;; This function uses a non-reentrant model
  8069 ;;
  8070                           
  8071                           	psect	text19
  8072  004A78                     __ptext19:
  8073                           	callstack 0
  8074  004A78                     ___flge:
  8075                           	callstack 27
  8076  004A78  0E00               	movlw	0
  8077  004A7A  1421               	andwf	___flge@ff1^0,w,c
  8078  004A7C  6E29               	movwf	??___flge^0,c
  8079  004A7E  0E00               	movlw	0
  8080  004A80  1422               	andwf	(___flge@ff1+1)^0,w,c
  8081  004A82  6E2A               	movwf	(??___flge+1)^0,c
  8082  004A84  0E80               	movlw	128
  8083  004A86  1423               	andwf	(___flge@ff1+2)^0,w,c
  8084  004A88  6E2B               	movwf	(??___flge+2)^0,c
  8085  004A8A  0E7F               	movlw	127
  8086  004A8C  1424               	andwf	(___flge@ff1+3)^0,w,c
  8087  004A8E  6E2C               	movwf	(??___flge+3)^0,c
  8088  004A90  5029               	movf	??___flge^0,w,c
  8089  004A92  102A               	iorwf	(??___flge+1)^0,w,c
  8090  004A94  102B               	iorwf	(??___flge+2)^0,w,c
  8091  004A96  102C               	iorwf	(??___flge+3)^0,w,c
  8092  004A98  A4D8               	btfss	status,2,c
  8093  004A9A  EF51  F025         	goto	u8131
  8094  004A9E  EF53  F025         	goto	u8130
  8095  004AA2                     u8131:
  8096  004AA2  EF5B  F025         	goto	l7641
  8097  004AA6                     u8130:
  8098  004AA6  0E00               	movlw	0
  8099  004AA8  6E21               	movwf	___flge@ff1^0,c
  8100  004AAA  0E00               	movlw	0
  8101  004AAC  6E22               	movwf	(___flge@ff1+1)^0,c
  8102  004AAE  0E00               	movlw	0
  8103  004AB0  6E23               	movwf	(___flge@ff1+2)^0,c
  8104  004AB2  0E00               	movlw	0
  8105  004AB4  6E24               	movwf	(___flge@ff1+3)^0,c
  8106  004AB6                     l7641:
  8107  004AB6  0E00               	movlw	0
  8108  004AB8  1425               	andwf	___flge@ff2^0,w,c
  8109  004ABA  6E29               	movwf	??___flge^0,c
  8110  004ABC  0E00               	movlw	0
  8111  004ABE  1426               	andwf	(___flge@ff2+1)^0,w,c
  8112  004AC0  6E2A               	movwf	(??___flge+1)^0,c
  8113  004AC2  0E80               	movlw	128
  8114  004AC4  1427               	andwf	(___flge@ff2+2)^0,w,c
  8115  004AC6  6E2B               	movwf	(??___flge+2)^0,c
  8116  004AC8  0E7F               	movlw	127
  8117  004ACA  1428               	andwf	(___flge@ff2+3)^0,w,c
  8118  004ACC  6E2C               	movwf	(??___flge+3)^0,c
  8119  004ACE  5029               	movf	??___flge^0,w,c
  8120  004AD0  102A               	iorwf	(??___flge+1)^0,w,c
  8121  004AD2  102B               	iorwf	(??___flge+2)^0,w,c
  8122  004AD4  102C               	iorwf	(??___flge+3)^0,w,c
  8123  004AD6  A4D8               	btfss	status,2,c
  8124  004AD8  EF70  F025         	goto	u8141
  8125  004ADC  EF72  F025         	goto	u8140
  8126  004AE0                     u8141:
  8127  004AE0  EF7A  F025         	goto	l7645
  8128  004AE4                     u8140:
  8129  004AE4  0E00               	movlw	0
  8130  004AE6  6E25               	movwf	___flge@ff2^0,c
  8131  004AE8  0E00               	movlw	0
  8132  004AEA  6E26               	movwf	(___flge@ff2+1)^0,c
  8133  004AEC  0E00               	movlw	0
  8134  004AEE  6E27               	movwf	(___flge@ff2+2)^0,c
  8135  004AF0  0E00               	movlw	0
  8136  004AF2  6E28               	movwf	(___flge@ff2+3)^0,c
  8137  004AF4                     l7645:
  8138  004AF4  AE24               	btfss	(___flge@ff1+3)^0,7,c
  8139  004AF6  EF7F  F025         	goto	u8151
  8140  004AFA  EF81  F025         	goto	u8150
  8141  004AFE                     u8151:
  8142  004AFE  EF8A  F025         	goto	l7649
  8143  004B02                     u8150:
  8144  004B02  6C21               	negf	___flge@ff1^0,c
  8145  004B04  1E22               	comf	(___flge@ff1+1)^0,f,c
  8146  004B06  B0D8               	btfsc	status,0,c
  8147  004B08  2A22               	incf	(___flge@ff1+1)^0,f,c
  8148  004B0A  1E23               	comf	(___flge@ff1+2)^0,f,c
  8149  004B0C  B0D8               	btfsc	status,0,c
  8150  004B0E  2A23               	incf	(___flge@ff1+2)^0,f,c
  8151  004B10  0E80               	movlw	128
  8152  004B12  5624               	subfwb	(___flge@ff1+3)^0,f,c
  8153  004B14                     l7649:
  8154  004B14  AE28               	btfss	(___flge@ff2+3)^0,7,c
  8155  004B16  EF8F  F025         	goto	u8161
  8156  004B1A  EF91  F025         	goto	u8160
  8157  004B1E                     u8161:
  8158  004B1E  EF9A  F025         	goto	l949
  8159  004B22                     u8160:
  8160  004B22  6C25               	negf	___flge@ff2^0,c
  8161  004B24  1E26               	comf	(___flge@ff2+1)^0,f,c
  8162  004B26  B0D8               	btfsc	status,0,c
  8163  004B28  2A26               	incf	(___flge@ff2+1)^0,f,c
  8164  004B2A  1E27               	comf	(___flge@ff2+2)^0,f,c
  8165  004B2C  B0D8               	btfsc	status,0,c
  8166  004B2E  2A27               	incf	(___flge@ff2+2)^0,f,c
  8167  004B30  0E80               	movlw	128
  8168  004B32  5628               	subfwb	(___flge@ff2+3)^0,f,c
  8169  004B34                     l949:
  8170  004B34  0E00               	movlw	0
  8171  004B36  1A21               	xorwf	___flge@ff1^0,f,c
  8172  004B38  0E00               	movlw	0
  8173  004B3A  1A22               	xorwf	(___flge@ff1+1)^0,f,c
  8174  004B3C  0E00               	movlw	0
  8175  004B3E  1A23               	xorwf	(___flge@ff1+2)^0,f,c
  8176  004B40  0E80               	movlw	128
  8177  004B42  1A24               	xorwf	(___flge@ff1+3)^0,f,c
  8178  004B44  0E00               	movlw	0
  8179  004B46  1A25               	xorwf	___flge@ff2^0,f,c
  8180  004B48  0E00               	movlw	0
  8181  004B4A  1A26               	xorwf	(___flge@ff2+1)^0,f,c
  8182  004B4C  0E00               	movlw	0
  8183  004B4E  1A27               	xorwf	(___flge@ff2+2)^0,f,c
  8184  004B50  0E80               	movlw	128
  8185  004B52  1A28               	xorwf	(___flge@ff2+3)^0,f,c
  8186  004B54  5025               	movf	___flge@ff2^0,w,c
  8187  004B56  5C21               	subwf	___flge@ff1^0,w,c
  8188  004B58  5026               	movf	(___flge@ff2+1)^0,w,c
  8189  004B5A  5822               	subwfb	(___flge@ff1+1)^0,w,c
  8190  004B5C  5027               	movf	(___flge@ff2+2)^0,w,c
  8191  004B5E  5823               	subwfb	(___flge@ff1+2)^0,w,c
  8192  004B60  5028               	movf	(___flge@ff2+3)^0,w,c
  8193  004B62  5824               	subwfb	(___flge@ff1+3)^0,w,c
  8194  004B64  B0D8               	btfsc	status,0,c
  8195  004B66  EFB7  F025         	goto	u8171
  8196  004B6A  EFB9  F025         	goto	u8170
  8197  004B6E                     u8171:
  8198  004B6E  EFBC  F025         	goto	l7655
  8199  004B72                     u8170:
  8200  004B72  90D8               	bcf	status,0,c
  8201  004B74  EFBD  F025         	goto	l950
  8202  004B78                     l7655:
  8203  004B78  80D8               	bsf	status,0,c
  8204  004B7A                     l950:
  8205  004B7A  0012               	return		;funcret
  8206  004B7C                     __end_of___flge:
  8207                           	callstack 0
  8208                           
  8209 ;; *************** function ___fleq *****************
  8210 ;; Defined at:
  8211 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8212 ;; Parameters:    Size  Location     Type
  8213 ;;  ff1             4    5[COMRAM] unsigned char 
  8214 ;;  ff2             4    9[COMRAM] unsigned char 
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;		None
  8217 ;; Return value:  Size  Location     Type
  8218 ;;		None               void
  8219 ;; Registers used:
  8220 ;;		wreg, status,2, status,0
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/0
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8226 ;;      Params:         8       0       0       0       0       0       0
  8227 ;;      Locals:         0       0       0       0       0       0       0
  8228 ;;      Temps:          4       0       0       0       0       0       0
  8229 ;;      Totals:        12       0       0       0       0       0       0
  8230 ;;Total ram usage:       12 bytes
  8231 ;; Hardware stack levels used:    1
  8232 ;; Hardware stack levels required when called:    2
  8233 ;; This function calls:
  8234 ;;		Nothing
  8235 ;; This function is called by:
  8236 ;;		_main
  8237 ;;		_sprintf
  8238 ;; This function uses a non-reentrant model
  8239 ;;
  8240                           
  8241                           	psect	text20
  8242  005058                     __ptext20:
  8243                           	callstack 0
  8244  005058                     ___fleq:
  8245                           	callstack 27
  8246  005058  0E00               	movlw	0
  8247  00505A  1406               	andwf	___fleq@ff1^0,w,c
  8248  00505C  6E0E               	movwf	??___fleq^0,c
  8249  00505E  0E00               	movlw	0
  8250  005060  1407               	andwf	(___fleq@ff1+1)^0,w,c
  8251  005062  6E0F               	movwf	(??___fleq+1)^0,c
  8252  005064  0E80               	movlw	128
  8253  005066  1408               	andwf	(___fleq@ff1+2)^0,w,c
  8254  005068  6E10               	movwf	(??___fleq+2)^0,c
  8255  00506A  0E7F               	movlw	127
  8256  00506C  1409               	andwf	(___fleq@ff1+3)^0,w,c
  8257  00506E  6E11               	movwf	(??___fleq+3)^0,c
  8258  005070  500E               	movf	??___fleq^0,w,c
  8259  005072  100F               	iorwf	(??___fleq+1)^0,w,c
  8260  005074  1010               	iorwf	(??___fleq+2)^0,w,c
  8261  005076  1011               	iorwf	(??___fleq+3)^0,w,c
  8262  005078  A4D8               	btfss	status,2,c
  8263  00507A  EF41  F028         	goto	u8101
  8264  00507E  EF43  F028         	goto	u8100
  8265  005082                     u8101:
  8266  005082  EF4B  F028         	goto	l7625
  8267  005086                     u8100:
  8268  005086  0E00               	movlw	0
  8269  005088  6E06               	movwf	___fleq@ff1^0,c
  8270  00508A  0E00               	movlw	0
  8271  00508C  6E07               	movwf	(___fleq@ff1+1)^0,c
  8272  00508E  0E00               	movlw	0
  8273  005090  6E08               	movwf	(___fleq@ff1+2)^0,c
  8274  005092  0E00               	movlw	0
  8275  005094  6E09               	movwf	(___fleq@ff1+3)^0,c
  8276  005096                     l7625:
  8277  005096  0E00               	movlw	0
  8278  005098  140A               	andwf	___fleq@ff2^0,w,c
  8279  00509A  6E0E               	movwf	??___fleq^0,c
  8280  00509C  0E00               	movlw	0
  8281  00509E  140B               	andwf	(___fleq@ff2+1)^0,w,c
  8282  0050A0  6E0F               	movwf	(??___fleq+1)^0,c
  8283  0050A2  0E80               	movlw	128
  8284  0050A4  140C               	andwf	(___fleq@ff2+2)^0,w,c
  8285  0050A6  6E10               	movwf	(??___fleq+2)^0,c
  8286  0050A8  0E7F               	movlw	127
  8287  0050AA  140D               	andwf	(___fleq@ff2+3)^0,w,c
  8288  0050AC  6E11               	movwf	(??___fleq+3)^0,c
  8289  0050AE  500E               	movf	??___fleq^0,w,c
  8290  0050B0  100F               	iorwf	(??___fleq+1)^0,w,c
  8291  0050B2  1010               	iorwf	(??___fleq+2)^0,w,c
  8292  0050B4  1011               	iorwf	(??___fleq+3)^0,w,c
  8293  0050B6  A4D8               	btfss	status,2,c
  8294  0050B8  EF60  F028         	goto	u8111
  8295  0050BC  EF62  F028         	goto	u8110
  8296  0050C0                     u8111:
  8297  0050C0  EF6A  F028         	goto	l7629
  8298  0050C4                     u8110:
  8299  0050C4  0E00               	movlw	0
  8300  0050C6  6E0A               	movwf	___fleq@ff2^0,c
  8301  0050C8  0E00               	movlw	0
  8302  0050CA  6E0B               	movwf	(___fleq@ff2+1)^0,c
  8303  0050CC  0E00               	movlw	0
  8304  0050CE  6E0C               	movwf	(___fleq@ff2+2)^0,c
  8305  0050D0  0E00               	movlw	0
  8306  0050D2  6E0D               	movwf	(___fleq@ff2+3)^0,c
  8307  0050D4                     l7629:
  8308  0050D4  500A               	movf	___fleq@ff2^0,w,c
  8309  0050D6  1806               	xorwf	___fleq@ff1^0,w,c
  8310  0050D8  E10F               	bnz	u8120
  8311  0050DA  500B               	movf	(___fleq@ff2+1)^0,w,c
  8312  0050DC  1807               	xorwf	(___fleq@ff1+1)^0,w,c
  8313  0050DE  E10C               	bnz	u8120
  8314  0050E0  500C               	movf	(___fleq@ff2+2)^0,w,c
  8315  0050E2  1808               	xorwf	(___fleq@ff1+2)^0,w,c
  8316  0050E4  E109               	bnz	u8120
  8317  0050E6  500D               	movf	(___fleq@ff2+3)^0,w,c
  8318  0050E8  1809               	xorwf	(___fleq@ff1+3)^0,w,c
  8319  0050EA  B4D8               	btfsc	status,2,c
  8320  0050EC  EF7A  F028         	goto	u8121
  8321  0050F0  EF7C  F028         	goto	u8120
  8322  0050F4                     u8121:
  8323  0050F4  EF7F  F028         	goto	l7633
  8324  0050F8                     u8120:
  8325  0050F8  90D8               	bcf	status,0,c
  8326  0050FA  EF80  F028         	goto	l943
  8327  0050FE                     l7633:
  8328  0050FE  80D8               	bsf	status,0,c
  8329  005100                     l943:
  8330  005100  0012               	return		;funcret
  8331  005102                     __end_of___fleq:
  8332                           	callstack 0
  8333                           
  8334 ;; *************** function _decodeIt *****************
  8335 ;; Defined at:
  8336 ;;		line 47 in file "modbus.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;		None
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;		None
  8341 ;; Return value:  Size  Location     Type
  8342 ;;                  1    wreg      void 
  8343 ;; Registers used:
  8344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8345 ;; Tracked objects:
  8346 ;;		On entry : 0/0
  8347 ;;		On exit  : 0/0
  8348 ;;		Unchanged: 0/0
  8349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8350 ;;      Params:         0       0       0       0       0       0       0
  8351 ;;      Locals:         0       0       0       0       0       0       0
  8352 ;;      Temps:          0       0       0       0       0       0       0
  8353 ;;      Totals:         0       0       0       0       0       0       0
  8354 ;;Total ram usage:        0 bytes
  8355 ;; Hardware stack levels used:    1
  8356 ;; Hardware stack levels required when called:    6
  8357 ;; This function calls:
  8358 ;;		_checkCRC
  8359 ;;		_readCoil
  8360 ;;		_readInputCoil
  8361 ;;		_readInputReg
  8362 ;;		_readReg
  8363 ;;		_writeCoil
  8364 ;;		_writeReg
  8365 ;; This function is called by:
  8366 ;;		_main
  8367 ;; This function uses a non-reentrant model
  8368 ;;
  8369                           
  8370                           	psect	text21
  8371  004D5E                     __ptext21:
  8372                           	callstack 0
  8373  004D5E                     _decodeIt:
  8374                           	callstack 24
  8375  004D5E                     
  8376                           ;modbus.c: 49: if(received[0] == 1){
  8377  004D5E  0102               	movlb	2	; () banked
  8378  004D60  0500               	decf	_received& (0+255),w,b	;volatile
  8379  004D62  A4D8               	btfss	status,2,c
  8380  004D64  EFB6  F026         	goto	u8511
  8381  004D68  EFB8  F026         	goto	u8510
  8382  004D6C                     u8511:
  8383  004D6C  EF13  F027         	goto	l355
  8384  004D70                     u8510:
  8385  004D70                     
  8386                           ; BSR set to: 2
  8387                           ;modbus.c: 50: if(checkCRC()){
  8388  004D70  EC02  F022         	call	_checkCRC	;wreg free
  8389  004D74  0900               	iorlw	0
  8390  004D76  B4D8               	btfsc	status,2,c
  8391  004D78  EFC0  F026         	goto	u8521
  8392  004D7C  EFC2  F026         	goto	u8520
  8393  004D80                     u8521:
  8394  004D80  EF13  F027         	goto	l355
  8395  004D84                     u8520:
  8396  004D84                     
  8397                           ;modbus.c: 51: if(received[1] == 0x01){
  8398  004D84  0102               	movlb	2	; () banked
  8399  004D86  0501               	decf	(_received+1)& (0+255),w,b	;volatile
  8400  004D88  A4D8               	btfss	status,2,c
  8401  004D8A  EFC9  F026         	goto	u8531
  8402  004D8E  EFCB  F026         	goto	u8530
  8403  004D92                     u8531:
  8404  004D92  EFCF  F026         	goto	l7919
  8405  004D96                     u8530:
  8406  004D96                     
  8407                           ; BSR set to: 2
  8408                           ;modbus.c: 52: readCoil();
  8409  004D96  EC68  F01A         	call	_readCoil	;wreg free
  8410                           
  8411                           ;modbus.c: 53: }
  8412  004D9A  EF13  F027         	goto	l355
  8413  004D9E                     l7919:
  8414                           
  8415                           ; BSR set to: 2
  8416                           ;modbus.c: 54: else if(received[1] == 0x02){
  8417  004D9E  0E02               	movlw	2
  8418  004DA0  1901               	xorwf	(_received+1)& (0+255),w,b	;volatile
  8419  004DA2  A4D8               	btfss	status,2,c
  8420  004DA4  EFD6  F026         	goto	u8541
  8421  004DA8  EFD8  F026         	goto	u8540
  8422  004DAC                     u8541:
  8423  004DAC  EFDC  F026         	goto	l7923
  8424  004DB0                     u8540:
  8425  004DB0                     
  8426                           ; BSR set to: 2
  8427                           ;modbus.c: 55: readInputCoil();
  8428  004DB0  EC52  F019         	call	_readInputCoil	;wreg free
  8429                           
  8430                           ;modbus.c: 56: }
  8431  004DB4  EF13  F027         	goto	l355
  8432  004DB8                     l7923:
  8433                           
  8434                           ; BSR set to: 2
  8435                           ;modbus.c: 57: else if(received[1] == 0x03){
  8436  004DB8  0E03               	movlw	3
  8437  004DBA  1901               	xorwf	(_received+1)& (0+255),w,b	;volatile
  8438  004DBC  A4D8               	btfss	status,2,c
  8439  004DBE  EFE3  F026         	goto	u8551
  8440  004DC2  EFE5  F026         	goto	u8550
  8441  004DC6                     u8551:
  8442  004DC6  EFE9  F026         	goto	l7927
  8443  004DCA                     u8550:
  8444  004DCA                     
  8445                           ; BSR set to: 2
  8446                           ;modbus.c: 58: readReg();
  8447  004DCA  EC7E  F01B         	call	_readReg	;wreg free
  8448                           
  8449                           ;modbus.c: 59: }
  8450  004DCE  EF13  F027         	goto	l355
  8451  004DD2                     l7927:
  8452                           
  8453                           ; BSR set to: 2
  8454                           ;modbus.c: 60: else if(received[1] == 0x04){
  8455  004DD2  0E04               	movlw	4
  8456  004DD4  1901               	xorwf	(_received+1)& (0+255),w,b	;volatile
  8457  004DD6  A4D8               	btfss	status,2,c
  8458  004DD8  EFF0  F026         	goto	u8561
  8459  004DDC  EFF2  F026         	goto	u8560
  8460  004DE0                     u8561:
  8461  004DE0  EFF6  F026         	goto	l7931
  8462  004DE4                     u8560:
  8463  004DE4                     
  8464                           ; BSR set to: 2
  8465                           ;modbus.c: 61: readInputReg();
  8466  004DE4  EC60  F01C         	call	_readInputReg	;wreg free
  8467                           
  8468                           ;modbus.c: 62: }
  8469  004DE8  EF13  F027         	goto	l355
  8470  004DEC                     l7931:
  8471                           
  8472                           ; BSR set to: 2
  8473                           ;modbus.c: 63: else if(received[1] == 0x05){
  8474  004DEC  0E05               	movlw	5
  8475  004DEE  1901               	xorwf	(_received+1)& (0+255),w,b	;volatile
  8476  004DF0  A4D8               	btfss	status,2,c
  8477  004DF2  EFFD  F026         	goto	u8571
  8478  004DF6  EFFF  F026         	goto	u8570
  8479  004DFA                     u8571:
  8480  004DFA  EF03  F027         	goto	l7935
  8481  004DFE                     u8570:
  8482  004DFE                     
  8483                           ; BSR set to: 2
  8484                           ;modbus.c: 64: writeCoil();
  8485  004DFE  EC97  F022         	call	_writeCoil	;wreg free
  8486                           
  8487                           ;modbus.c: 65: }
  8488  004E02  EF13  F027         	goto	l355
  8489  004E06                     l7935:
  8490                           
  8491                           ; BSR set to: 2
  8492                           ;modbus.c: 66: else if(received[1] == 0x06){
  8493  004E06  0E06               	movlw	6
  8494  004E08  1901               	xorwf	(_received+1)& (0+255),w,b	;volatile
  8495  004E0A  A4D8               	btfss	status,2,c
  8496  004E0C  EF0A  F027         	goto	u8581
  8497  004E10  EF0C  F027         	goto	u8580
  8498  004E14                     u8581:
  8499  004E14  EF10  F027         	goto	l7939
  8500  004E18                     u8580:
  8501  004E18                     
  8502                           ; BSR set to: 2
  8503                           ;modbus.c: 67: writeReg();
  8504  004E18  ECB9  F024         	call	_writeReg	;wreg free
  8505                           
  8506                           ;modbus.c: 68: }
  8507  004E1C  EF13  F027         	goto	l355
  8508  004E20                     l7939:
  8509                           
  8510                           ; BSR set to: 2
  8511                           ;modbus.c: 69: else{;modbus.c: 70: response[0] = 0;
  8512  004E20  0E00               	movlw	0
  8513  004E22  0101               	movlb	1	; () banked
  8514  004E24  6F00               	movwf	_response& (0+255),b	;volatile
  8515  004E26                     l355:
  8516                           
  8517                           ;modbus.c: 71: };modbus.c: 72: };modbus.c: 73: };modbus.c: 74: modbusMessage = 0;
  8518  004E26  0E00               	movlw	0
  8519  004E28  6E72               	movwf	_modbusMessage^0,c	;volatile
  8520  004E2A  0012               	return		;funcret
  8521  004E2C                     __end_of_decodeIt:
  8522                           	callstack 0
  8523                           
  8524 ;; *************** function _writeReg *****************
  8525 ;; Defined at:
  8526 ;;		line 185 in file "modbus.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;		None
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;  i               2   37[COMRAM] unsigned int 
  8531 ;;  crc             2   35[COMRAM] unsigned int 
  8532 ;;  wr_valToWrit    2   33[COMRAM] unsigned int 
  8533 ;;  wr_Address      2   31[COMRAM] unsigned int 
  8534 ;;  wr_valToWrit    2   29[COMRAM] unsigned int 
  8535 ;;  wr_valToWrit    2   27[COMRAM] unsigned int 
  8536 ;;  wr_AddressHi    2   25[COMRAM] unsigned int 
  8537 ;;  wr_AddressLo    2   23[COMRAM] unsigned int 
  8538 ;; Return value:  Size  Location     Type
  8539 ;;                  1    wreg      void 
  8540 ;; Registers used:
  8541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8542 ;; Tracked objects:
  8543 ;;		On entry : 0/0
  8544 ;;		On exit  : 0/0
  8545 ;;		Unchanged: 0/0
  8546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8547 ;;      Params:         0       0       0       0       0       0       0
  8548 ;;      Locals:        16       0       0       0       0       0       0
  8549 ;;      Temps:          0       0       0       0       0       0       0
  8550 ;;      Totals:        16       0       0       0       0       0       0
  8551 ;;Total ram usage:       16 bytes
  8552 ;; Hardware stack levels used:    1
  8553 ;; Hardware stack levels required when called:    5
  8554 ;; This function calls:
  8555 ;;		_clearResponse
  8556 ;;		_generateCRC
  8557 ;; This function is called by:
  8558 ;;		_decodeIt
  8559 ;; This function uses a non-reentrant model
  8560 ;;
  8561                           
  8562                           	psect	text22
  8563  004972                     __ptext22:
  8564                           	callstack 0
  8565  004972                     _writeReg:
  8566                           	callstack 24
  8567  004972                     
  8568                           ;modbus.c: 191: unsigned int wr_AddressHigh = 0;
  8569  004972  0E00               	movlw	0
  8570  004974  6E1B               	movwf	(writeReg@wr_AddressHigh+1)^0,c
  8571  004976  0E00               	movlw	0
  8572  004978  6E1A               	movwf	writeReg@wr_AddressHigh^0,c
  8573                           
  8574                           ;modbus.c: 192: unsigned int wr_Address = 0;
  8575  00497A  0E00               	movlw	0
  8576  00497C  6E21               	movwf	(writeReg@wr_Address+1)^0,c
  8577  00497E  0E00               	movlw	0
  8578  004980  6E20               	movwf	writeReg@wr_Address^0,c
  8579                           
  8580                           ;modbus.c: 194: unsigned int wr_valToWrite = 0;
  8581  004982  0E00               	movlw	0
  8582  004984  6E23               	movwf	(writeReg@wr_valToWrite+1)^0,c
  8583  004986  0E00               	movlw	0
  8584  004988  6E22               	movwf	writeReg@wr_valToWrite^0,c
  8585                           
  8586                           ;modbus.c: 195: unsigned int wr_valToWriteLow = 0;
  8587  00498A  0E00               	movlw	0
  8588  00498C  6E1D               	movwf	(writeReg@wr_valToWriteLow+1)^0,c
  8589  00498E  0E00               	movlw	0
  8590  004990  6E1C               	movwf	writeReg@wr_valToWriteLow^0,c
  8591                           
  8592                           ;modbus.c: 196: unsigned int wr_valToWriteHigh = 0;
  8593  004992  0E00               	movlw	0
  8594  004994  6E1F               	movwf	(writeReg@wr_valToWriteHigh+1)^0,c
  8595  004996  0E00               	movlw	0
  8596  004998  6E1E               	movwf	writeReg@wr_valToWriteHigh^0,c
  8597                           
  8598                           ;modbus.c: 198: unsigned int crc = 0;
  8599  00499A  0E00               	movlw	0
  8600  00499C  6E25               	movwf	(writeReg@crc+1)^0,c
  8601  00499E  0E00               	movlw	0
  8602  0049A0  6E24               	movwf	writeReg@crc^0,c
  8603                           
  8604                           ;modbus.c: 199: unsigned int i = 0;
  8605  0049A2  0E00               	movlw	0
  8606  0049A4  6E27               	movwf	(writeReg@i+1)^0,c
  8607  0049A6  0E00               	movlw	0
  8608  0049A8  6E26               	movwf	writeReg@i^0,c
  8609  0049AA                     
  8610                           ;modbus.c: 202: wr_Address = received[2];
  8611  0049AA  C202  F020         	movff	_received+2,writeReg@wr_Address	;volatile
  8612  0049AE  6A21               	clrf	(writeReg@wr_Address+1)^0,c
  8613                           
  8614                           ;modbus.c: 203: wr_Address <<= 8;
  8615  0049B0  5020               	movf	writeReg@wr_Address^0,w,c
  8616  0049B2  6E21               	movwf	(writeReg@wr_Address+1)^0,c
  8617  0049B4  6A20               	clrf	writeReg@wr_Address^0,c
  8618  0049B6                     
  8619                           ;modbus.c: 204: wr_Address |= received[3];
  8620  0049B6  0102               	movlb	2	; () banked
  8621  0049B8  5103               	movf	(_received+3)& (0+255),w,b	;volatile
  8622  0049BA  1220               	iorwf	writeReg@wr_Address^0,f,c
  8623  0049BC                     
  8624                           ; BSR set to: 2
  8625                           ;modbus.c: 206: wr_AddressLow = received[3];
  8626  0049BC  C203  F018         	movff	_received+3,writeReg@wr_AddressLow	;volatile
  8627  0049C0  6A19               	clrf	(writeReg@wr_AddressLow+1)^0,c
  8628  0049C2                     
  8629                           ; BSR set to: 2
  8630                           ;modbus.c: 207: wr_AddressHigh = received[2];
  8631  0049C2  C202  F01A         	movff	_received+2,writeReg@wr_AddressHigh	;volatile
  8632  0049C6  6A1B               	clrf	(writeReg@wr_AddressHigh+1)^0,c
  8633  0049C8                     
  8634                           ; BSR set to: 2
  8635                           ;modbus.c: 210: wr_valToWrite = received[4];
  8636  0049C8  C204  F022         	movff	_received+4,writeReg@wr_valToWrite	;volatile
  8637  0049CC  6A23               	clrf	(writeReg@wr_valToWrite+1)^0,c
  8638  0049CE                     
  8639                           ; BSR set to: 2
  8640                           ;modbus.c: 211: wr_valToWrite <<= 8;
  8641  0049CE  5022               	movf	writeReg@wr_valToWrite^0,w,c
  8642  0049D0  6E23               	movwf	(writeReg@wr_valToWrite+1)^0,c
  8643  0049D2  6A22               	clrf	writeReg@wr_valToWrite^0,c
  8644                           
  8645                           ;modbus.c: 212: wr_valToWrite |= received[5];
  8646  0049D4  5105               	movf	(_received+5)& (0+255),w,b	;volatile
  8647  0049D6  1222               	iorwf	writeReg@wr_valToWrite^0,f,c
  8648  0049D8                     
  8649                           ; BSR set to: 2
  8650                           ;modbus.c: 214: wr_valToWriteLow = received[5];
  8651  0049D8  C205  F01C         	movff	_received+5,writeReg@wr_valToWriteLow	;volatile
  8652  0049DC  6A1D               	clrf	(writeReg@wr_valToWriteLow+1)^0,c
  8653  0049DE                     
  8654                           ; BSR set to: 2
  8655                           ;modbus.c: 215: wr_valToWriteHigh = received[4];
  8656  0049DE  C204  F01E         	movff	_received+4,writeReg@wr_valToWriteHigh	;volatile
  8657  0049E2  6A1F               	clrf	(writeReg@wr_valToWriteHigh+1)^0,c
  8658  0049E4                     
  8659                           ; BSR set to: 2
  8660                           ;modbus.c: 217: holdingReg[wr_Address] = wr_valToWrite;
  8661  0049E4  90D8               	bcf	status,0,c
  8662  0049E6  3420               	rlcf	writeReg@wr_Address^0,w,c
  8663  0049E8  6ED9               	movwf	fsr2l,c
  8664  0049EA  3421               	rlcf	(writeReg@wr_Address+1)^0,w,c
  8665  0049EC  6EDA               	movwf	fsr2h,c
  8666  0049EE  0E7D               	movlw	low _holdingReg
  8667  0049F0  26D9               	addwf	fsr2l,f,c
  8668  0049F2  0E01               	movlw	high _holdingReg
  8669  0049F4  22DA               	addwfc	fsr2h,f,c
  8670  0049F6  C022  FFDE         	movff	writeReg@wr_valToWrite,postinc2
  8671  0049FA  C023  FFDD         	movff	writeReg@wr_valToWrite+1,postdec2
  8672  0049FE                     
  8673                           ; BSR set to: 2
  8674                           ;modbus.c: 219: response[0] = 1;
  8675  0049FE  0E01               	movlw	1
  8676  004A00  0101               	movlb	1	; () banked
  8677  004A02  6F00               	movwf	_response& (0+255),b	;volatile
  8678  004A04                     
  8679                           ; BSR set to: 1
  8680                           ;modbus.c: 220: response[1] = 0x06;
  8681  004A04  0E06               	movlw	6
  8682  004A06  6F01               	movwf	(_response+1)& (0+255),b	;volatile
  8683  004A08                     
  8684                           ; BSR set to: 1
  8685                           ;modbus.c: 221: response[3] = wr_AddressLow;
  8686  004A08  C018  F103         	movff	writeReg@wr_AddressLow,_response+3	;volatile
  8687  004A0C                     
  8688                           ; BSR set to: 1
  8689                           ;modbus.c: 222: response[2] = wr_AddressHigh;
  8690  004A0C  C01A  F102         	movff	writeReg@wr_AddressHigh,_response+2	;volatile
  8691  004A10                     
  8692                           ; BSR set to: 1
  8693                           ;modbus.c: 225: response[4] = wr_valToWriteHigh;
  8694  004A10  C01E  F104         	movff	writeReg@wr_valToWriteHigh,_response+4	;volatile
  8695  004A14                     
  8696                           ; BSR set to: 1
  8697                           ;modbus.c: 226: response[5] = wr_valToWriteLow;
  8698  004A14  C01C  F105         	movff	writeReg@wr_valToWriteLow,_response+5	;volatile
  8699  004A18                     
  8700                           ; BSR set to: 1
  8701                           ;modbus.c: 228: crc = generateCRC(8);
  8702  004A18  0E08               	movlw	8
  8703  004A1A  EC37  F026         	call	_generateCRC
  8704  004A1E  C006  F024         	movff	?_generateCRC,writeReg@crc
  8705  004A22  C007  F025         	movff	?_generateCRC+1,writeReg@crc+1
  8706  004A26                     
  8707                           ;modbus.c: 230: response[6] = crc >> 8;
  8708  004A26  5025               	movf	(writeReg@crc+1)^0,w,c
  8709  004A28  0101               	movlb	1	; () banked
  8710  004A2A  6F06               	movwf	(_response+6)& (0+255),b	;volatile
  8711  004A2C                     
  8712                           ; BSR set to: 1
  8713                           ;modbus.c: 231: response[7] = crc;
  8714  004A2C  C024  F107         	movff	writeReg@crc,_response+7	;volatile
  8715  004A30                     
  8716                           ; BSR set to: 1
  8717                           ;modbus.c: 233: LATBbits.LATB7 = 1;
  8718  004A30  8E8A               	bsf	138,7,c	;volatile
  8719  004A32                     
  8720                           ; BSR set to: 1
  8721                           ;modbus.c: 234: for(i=0;i!=9;i++){
  8722  004A32  0E00               	movlw	0
  8723  004A34  6E27               	movwf	(writeReg@i+1)^0,c
  8724  004A36  0E00               	movlw	0
  8725  004A38  6E26               	movwf	writeReg@i^0,c
  8726  004A3A                     l402:
  8727  004A3A  A2AC               	btfss	172,1,c	;volatile
  8728  004A3C  EF22  F025         	goto	u7721
  8729  004A40  EF24  F025         	goto	u7720
  8730  004A44                     u7721:
  8731  004A44  EF1D  F025         	goto	l402
  8732  004A48                     u7720:
  8733  004A48                     
  8734                           ;modbus.c: 236: TXREG = response[i];
  8735  004A48  0E00               	movlw	low _response
  8736  004A4A  2426               	addwf	writeReg@i^0,w,c
  8737  004A4C  6ED9               	movwf	fsr2l,c
  8738  004A4E  0E01               	movlw	high _response
  8739  004A50  2027               	addwfc	(writeReg@i+1)^0,w,c
  8740  004A52  6EDA               	movwf	fsr2h,c
  8741  004A54  50DF               	movf	indf2,w,c
  8742  004A56  6EAD               	movwf	173,c	;volatile
  8743  004A58  4A26               	infsnz	writeReg@i^0,f,c
  8744  004A5A  2A27               	incf	(writeReg@i+1)^0,f,c
  8745  004A5C  0E09               	movlw	9
  8746  004A5E  1826               	xorwf	writeReg@i^0,w,c
  8747  004A60  1027               	iorwf	(writeReg@i+1)^0,w,c
  8748  004A62  A4D8               	btfss	status,2,c
  8749  004A64  EF36  F025         	goto	u7731
  8750  004A68  EF38  F025         	goto	u7730
  8751  004A6C                     u7731:
  8752  004A6C  EF1D  F025         	goto	l402
  8753  004A70                     u7730:
  8754  004A70                     
  8755                           ;modbus.c: 237: };modbus.c: 238: LATBbits.LATB7 = 0;
  8756  004A70  9E8A               	bcf	138,7,c	;volatile
  8757  004A72                     
  8758                           ;modbus.c: 239: clearResponse();
  8759  004A72  EC0B  F02B         	call	_clearResponse	;wreg free
  8760  004A76  0012               	return		;funcret
  8761  004A78                     __end_of_writeReg:
  8762                           	callstack 0
  8763                           
  8764 ;; *************** function _writeCoil *****************
  8765 ;; Defined at:
  8766 ;;		line 402 in file "modbus.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;		None
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;  i               2   37[COMRAM] int 
  8771 ;;  wc_Address      2   35[COMRAM] unsigned int 
  8772 ;;  crc             2   33[COMRAM] unsigned int 
  8773 ;;  wc_valToWrit    2   31[COMRAM] unsigned int 
  8774 ;;  wc_valToWrit    2   29[COMRAM] unsigned int 
  8775 ;;  wc_valToWrit    2   27[COMRAM] unsigned int 
  8776 ;;  wc_AddressHi    2   25[COMRAM] unsigned int 
  8777 ;;  wc_AddressLo    2   23[COMRAM] unsigned int 
  8778 ;; Return value:  Size  Location     Type
  8779 ;;                  1    wreg      void 
  8780 ;; Registers used:
  8781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8787 ;;      Params:         0       0       0       0       0       0       0
  8788 ;;      Locals:        16       0       0       0       0       0       0
  8789 ;;      Temps:          0       0       0       0       0       0       0
  8790 ;;      Totals:        16       0       0       0       0       0       0
  8791 ;;Total ram usage:       16 bytes
  8792 ;; Hardware stack levels used:    1
  8793 ;; Hardware stack levels required when called:    5
  8794 ;; This function calls:
  8795 ;;		_clearResponse
  8796 ;;		_generateCRC
  8797 ;; This function is called by:
  8798 ;;		_decodeIt
  8799 ;; This function uses a non-reentrant model
  8800 ;;
  8801                           
  8802                           	psect	text23
  8803  00452E                     __ptext23:
  8804                           	callstack 0
  8805  00452E                     _writeCoil:
  8806                           	callstack 24
  8807  00452E                     
  8808                           ;modbus.c: 408: unsigned int wc_AddressHigh = 0;
  8809  00452E  0E00               	movlw	0
  8810  004530  6E1B               	movwf	(writeCoil@wc_AddressHigh+1)^0,c
  8811  004532  0E00               	movlw	0
  8812  004534  6E1A               	movwf	writeCoil@wc_AddressHigh^0,c
  8813                           
  8814                           ;modbus.c: 409: unsigned int wc_Address = 0;
  8815  004536  0E00               	movlw	0
  8816  004538  6E25               	movwf	(writeCoil@wc_Address+1)^0,c
  8817  00453A  0E00               	movlw	0
  8818  00453C  6E24               	movwf	writeCoil@wc_Address^0,c
  8819                           
  8820                           ;modbus.c: 411: unsigned int wc_valToWrite = 0;
  8821  00453E  0E00               	movlw	0
  8822  004540  6E21               	movwf	(writeCoil@wc_valToWrite+1)^0,c
  8823  004542  0E00               	movlw	0
  8824  004544  6E20               	movwf	writeCoil@wc_valToWrite^0,c
  8825                           
  8826                           ;modbus.c: 412: unsigned int wc_valToWriteLow = 0;
  8827  004546  0E00               	movlw	0
  8828  004548  6E1D               	movwf	(writeCoil@wc_valToWriteLow+1)^0,c
  8829  00454A  0E00               	movlw	0
  8830  00454C  6E1C               	movwf	writeCoil@wc_valToWriteLow^0,c
  8831                           
  8832                           ;modbus.c: 413: unsigned int wc_valToWriteHigh = 0;
  8833  00454E  0E00               	movlw	0
  8834  004550  6E1F               	movwf	(writeCoil@wc_valToWriteHigh+1)^0,c
  8835  004552  0E00               	movlw	0
  8836  004554  6E1E               	movwf	writeCoil@wc_valToWriteHigh^0,c
  8837                           
  8838                           ;modbus.c: 414: int i = 0;
  8839  004556  0E00               	movlw	0
  8840  004558  6E27               	movwf	(writeCoil@i+1)^0,c
  8841  00455A  0E00               	movlw	0
  8842  00455C  6E26               	movwf	writeCoil@i^0,c
  8843                           
  8844                           ;modbus.c: 415: unsigned int crc = 0;
  8845  00455E  0E00               	movlw	0
  8846  004560  6E23               	movwf	(writeCoil@crc+1)^0,c
  8847  004562  0E00               	movlw	0
  8848  004564  6E22               	movwf	writeCoil@crc^0,c
  8849  004566                     
  8850                           ;modbus.c: 418: wc_Address = received[2];
  8851  004566  C202  F024         	movff	_received+2,writeCoil@wc_Address	;volatile
  8852  00456A  6A25               	clrf	(writeCoil@wc_Address+1)^0,c
  8853                           
  8854                           ;modbus.c: 419: wc_Address <<= 8;
  8855  00456C  5024               	movf	writeCoil@wc_Address^0,w,c
  8856  00456E  6E25               	movwf	(writeCoil@wc_Address+1)^0,c
  8857  004570  6A24               	clrf	writeCoil@wc_Address^0,c
  8858  004572                     
  8859                           ;modbus.c: 420: wc_Address |= received[3];
  8860  004572  0102               	movlb	2	; () banked
  8861  004574  5103               	movf	(_received+3)& (0+255),w,b	;volatile
  8862  004576  1224               	iorwf	writeCoil@wc_Address^0,f,c
  8863  004578                     
  8864                           ; BSR set to: 2
  8865                           ;modbus.c: 422: wc_AddressLow = received[3];
  8866  004578  C203  F018         	movff	_received+3,writeCoil@wc_AddressLow	;volatile
  8867  00457C  6A19               	clrf	(writeCoil@wc_AddressLow+1)^0,c
  8868  00457E                     
  8869                           ; BSR set to: 2
  8870                           ;modbus.c: 423: wc_AddressHigh = received[2];
  8871  00457E  C202  F01A         	movff	_received+2,writeCoil@wc_AddressHigh	;volatile
  8872  004582  6A1B               	clrf	(writeCoil@wc_AddressHigh+1)^0,c
  8873  004584                     
  8874                           ; BSR set to: 2
  8875                           ;modbus.c: 426: wc_valToWrite = received[4];
  8876  004584  C204  F020         	movff	_received+4,writeCoil@wc_valToWrite	;volatile
  8877  004588  6A21               	clrf	(writeCoil@wc_valToWrite+1)^0,c
  8878  00458A                     
  8879                           ; BSR set to: 2
  8880                           ;modbus.c: 427: wc_valToWrite <<= 8;
  8881  00458A  5020               	movf	writeCoil@wc_valToWrite^0,w,c
  8882  00458C  6E21               	movwf	(writeCoil@wc_valToWrite+1)^0,c
  8883  00458E  6A20               	clrf	writeCoil@wc_valToWrite^0,c
  8884                           
  8885                           ;modbus.c: 428: wc_valToWrite |= received[5];
  8886  004590  5105               	movf	(_received+5)& (0+255),w,b	;volatile
  8887  004592  1220               	iorwf	writeCoil@wc_valToWrite^0,f,c
  8888  004594                     
  8889                           ; BSR set to: 2
  8890                           ;modbus.c: 430: wc_valToWriteLow = received[5];
  8891  004594  C205  F01C         	movff	_received+5,writeCoil@wc_valToWriteLow	;volatile
  8892  004598  6A1D               	clrf	(writeCoil@wc_valToWriteLow+1)^0,c
  8893  00459A                     
  8894                           ; BSR set to: 2
  8895                           ;modbus.c: 431: wc_valToWriteHigh = received[4];
  8896  00459A  C204  F01E         	movff	_received+4,writeCoil@wc_valToWriteHigh	;volatile
  8897  00459E  6A1F               	clrf	(writeCoil@wc_valToWriteHigh+1)^0,c
  8898                           
  8899                           ;modbus.c: 433: if(wc_valToWrite){
  8900  0045A0  5020               	movf	writeCoil@wc_valToWrite^0,w,c
  8901  0045A2  1021               	iorwf	(writeCoil@wc_valToWrite+1)^0,w,c
  8902  0045A4  B4D8               	btfsc	status,2,c
  8903  0045A6  EFD7  F022         	goto	u7691
  8904  0045AA  EFD9  F022         	goto	u7690
  8905  0045AE                     u7691:
  8906  0045AE  EFE3  F022         	goto	l7259
  8907  0045B2                     u7690:
  8908  0045B2                     
  8909                           ; BSR set to: 2
  8910                           ;modbus.c: 434: coils[wc_Address] = 0xFF;
  8911  0045B2  0E7D               	movlw	low _coils
  8912  0045B4  2424               	addwf	writeCoil@wc_Address^0,w,c
  8913  0045B6  6ED9               	movwf	fsr2l,c
  8914  0045B8  0E02               	movlw	high _coils
  8915  0045BA  2025               	addwfc	(writeCoil@wc_Address+1)^0,w,c
  8916  0045BC  6EDA               	movwf	fsr2h,c
  8917  0045BE  0EFF               	movlw	255
  8918  0045C0  6EDF               	movwf	indf2,c
  8919                           
  8920                           ;modbus.c: 435: }
  8921  0045C2  EFEB  F022         	goto	l7261
  8922  0045C6                     l7259:
  8923                           
  8924                           ; BSR set to: 2
  8925                           ;modbus.c: 436: else{;modbus.c: 437: coils[wc_Address] = 0x00;
  8926  0045C6  0E7D               	movlw	low _coils
  8927  0045C8  2424               	addwf	writeCoil@wc_Address^0,w,c
  8928  0045CA  6ED9               	movwf	fsr2l,c
  8929  0045CC  0E02               	movlw	high _coils
  8930  0045CE  2025               	addwfc	(writeCoil@wc_Address+1)^0,w,c
  8931  0045D0  6EDA               	movwf	fsr2h,c
  8932  0045D2  0E00               	movlw	0
  8933  0045D4  6EDF               	movwf	indf2,c
  8934  0045D6                     l7261:
  8935                           
  8936                           ; BSR set to: 2
  8937                           ;modbus.c: 438: };modbus.c: 440: response[0] = 1;
  8938  0045D6  0E01               	movlw	1
  8939  0045D8  0101               	movlb	1	; () banked
  8940  0045DA  6F00               	movwf	_response& (0+255),b	;volatile
  8941  0045DC                     
  8942                           ; BSR set to: 1
  8943                           ;modbus.c: 441: response[1] = 0x05;
  8944  0045DC  0E05               	movlw	5
  8945  0045DE  6F01               	movwf	(_response+1)& (0+255),b	;volatile
  8946  0045E0                     
  8947                           ; BSR set to: 1
  8948                           ;modbus.c: 442: response[3] = wc_AddressLow;
  8949  0045E0  C018  F103         	movff	writeCoil@wc_AddressLow,_response+3	;volatile
  8950  0045E4                     
  8951                           ; BSR set to: 1
  8952                           ;modbus.c: 443: response[2] = wc_AddressHigh;
  8953  0045E4  C01A  F102         	movff	writeCoil@wc_AddressHigh,_response+2	;volatile
  8954  0045E8                     
  8955                           ; BSR set to: 1
  8956                           ;modbus.c: 446: response[4] = wc_valToWriteHigh;
  8957  0045E8  C01E  F104         	movff	writeCoil@wc_valToWriteHigh,_response+4	;volatile
  8958  0045EC                     
  8959                           ; BSR set to: 1
  8960                           ;modbus.c: 447: response[5] = wc_valToWriteLow;
  8961  0045EC  C01C  F105         	movff	writeCoil@wc_valToWriteLow,_response+5	;volatile
  8962  0045F0                     
  8963                           ; BSR set to: 1
  8964                           ;modbus.c: 449: crc = generateCRC(8);
  8965  0045F0  0E08               	movlw	8
  8966  0045F2  EC37  F026         	call	_generateCRC
  8967  0045F6  C006  F022         	movff	?_generateCRC,writeCoil@crc
  8968  0045FA  C007  F023         	movff	?_generateCRC+1,writeCoil@crc+1
  8969  0045FE                     
  8970                           ;modbus.c: 451: response[6] = crc >> 8;
  8971  0045FE  5023               	movf	(writeCoil@crc+1)^0,w,c
  8972  004600  0101               	movlb	1	; () banked
  8973  004602  6F06               	movwf	(_response+6)& (0+255),b	;volatile
  8974  004604                     
  8975                           ; BSR set to: 1
  8976                           ;modbus.c: 452: response[7] = crc;
  8977  004604  C022  F107         	movff	writeCoil@crc,_response+7	;volatile
  8978  004608                     
  8979                           ; BSR set to: 1
  8980                           ;modbus.c: 454: LATBbits.LATB7 = 1;
  8981  004608  8E8A               	bsf	138,7,c	;volatile
  8982  00460A                     
  8983                           ; BSR set to: 1
  8984                           ;modbus.c: 455: for(i=0;i!=9;i++){
  8985  00460A  0E00               	movlw	0
  8986  00460C  6E27               	movwf	(writeCoil@i+1)^0,c
  8987  00460E  0E00               	movlw	0
  8988  004610  6E26               	movwf	writeCoil@i^0,c
  8989  004612                     l458:
  8990  004612  A2AC               	btfss	172,1,c	;volatile
  8991  004614  EF0E  F023         	goto	u7701
  8992  004618  EF10  F023         	goto	u7700
  8993  00461C                     u7701:
  8994  00461C  EF09  F023         	goto	l458
  8995  004620                     u7700:
  8996  004620                     
  8997                           ;modbus.c: 457: TXREG = response[i];
  8998  004620  0E00               	movlw	low _response
  8999  004622  2426               	addwf	writeCoil@i^0,w,c
  9000  004624  6ED9               	movwf	fsr2l,c
  9001  004626  0E01               	movlw	high _response
  9002  004628  2027               	addwfc	(writeCoil@i+1)^0,w,c
  9003  00462A  6EDA               	movwf	fsr2h,c
  9004  00462C  50DF               	movf	indf2,w,c
  9005  00462E  6EAD               	movwf	173,c	;volatile
  9006  004630  4A26               	infsnz	writeCoil@i^0,f,c
  9007  004632  2A27               	incf	(writeCoil@i+1)^0,f,c
  9008  004634  0E09               	movlw	9
  9009  004636  1826               	xorwf	writeCoil@i^0,w,c
  9010  004638  1027               	iorwf	(writeCoil@i+1)^0,w,c
  9011  00463A  A4D8               	btfss	status,2,c
  9012  00463C  EF22  F023         	goto	u7711
  9013  004640  EF24  F023         	goto	u7710
  9014  004644                     u7711:
  9015  004644  EF09  F023         	goto	l458
  9016  004648                     u7710:
  9017  004648                     
  9018                           ;modbus.c: 458: };modbus.c: 459: LATBbits.LATB7 = 0;
  9019  004648  9E8A               	bcf	138,7,c	;volatile
  9020  00464A                     
  9021                           ;modbus.c: 460: clearResponse();
  9022  00464A  EC0B  F02B         	call	_clearResponse	;wreg free
  9023  00464E  0012               	return		;funcret
  9024  004650                     __end_of_writeCoil:
  9025                           	callstack 0
  9026                           
  9027 ;; *************** function _readReg *****************
  9028 ;; Defined at:
  9029 ;;		line 77 in file "modbus.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;		None
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;  i               2   31[COMRAM] unsigned int 
  9034 ;;  rr_numRegs      2   29[COMRAM] unsigned int 
  9035 ;;  rr_Address      2   27[COMRAM] unsigned int 
  9036 ;;  crc             2   25[COMRAM] unsigned int 
  9037 ;;  j               1   33[COMRAM] unsigned char 
  9038 ;; Return value:  Size  Location     Type
  9039 ;;                  1    wreg      void 
  9040 ;; Registers used:
  9041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9042 ;; Tracked objects:
  9043 ;;		On entry : 0/0
  9044 ;;		On exit  : 0/0
  9045 ;;		Unchanged: 0/0
  9046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9047 ;;      Params:         0       0       0       0       0       0       0
  9048 ;;      Locals:         9       0       0       0       0       0       0
  9049 ;;      Temps:          2       0       0       0       0       0       0
  9050 ;;      Totals:        11       0       0       0       0       0       0
  9051 ;;Total ram usage:       11 bytes
  9052 ;; Hardware stack levels used:    1
  9053 ;; Hardware stack levels required when called:    5
  9054 ;; This function calls:
  9055 ;;		_clearResponse
  9056 ;;		_generateCRC
  9057 ;; This function is called by:
  9058 ;;		_decodeIt
  9059 ;; This function uses a non-reentrant model
  9060 ;;
  9061                           
  9062                           	psect	text24
  9063  0036FC                     __ptext24:
  9064                           	callstack 0
  9065  0036FC                     _readReg:
  9066                           	callstack 24
  9067  0036FC                     
  9068                           ;modbus.c: 80: unsigned int rr_numRegs = 0;
  9069  0036FC  0E00               	movlw	0
  9070  0036FE  6E1F               	movwf	(readReg@rr_numRegs+1)^0,c
  9071  003700  0E00               	movlw	0
  9072  003702  6E1E               	movwf	readReg@rr_numRegs^0,c
  9073                           
  9074                           ;modbus.c: 81: unsigned char j = 3;
  9075  003704  0E03               	movlw	3
  9076  003706  6E22               	movwf	readReg@j^0,c
  9077                           
  9078                           ;modbus.c: 82: unsigned int crc = 0;
  9079  003708  0E00               	movlw	0
  9080  00370A  6E1B               	movwf	(readReg@crc+1)^0,c
  9081  00370C  0E00               	movlw	0
  9082  00370E  6E1A               	movwf	readReg@crc^0,c
  9083                           
  9084                           ;modbus.c: 83: unsigned int i = 0;
  9085  003710  0E00               	movlw	0
  9086  003712  6E21               	movwf	(readReg@i+1)^0,c
  9087  003714  0E00               	movlw	0
  9088  003716  6E20               	movwf	readReg@i^0,c
  9089  003718                     
  9090                           ;modbus.c: 86: rr_Address = received[2];
  9091  003718  C202  F01C         	movff	_received+2,readReg@rr_Address	;volatile
  9092  00371C  6A1D               	clrf	(readReg@rr_Address+1)^0,c
  9093                           
  9094                           ;modbus.c: 87: rr_Address <<= 8;
  9095  00371E  501C               	movf	readReg@rr_Address^0,w,c
  9096  003720  6E1D               	movwf	(readReg@rr_Address+1)^0,c
  9097  003722  6A1C               	clrf	readReg@rr_Address^0,c
  9098  003724                     
  9099                           ;modbus.c: 88: rr_Address |= received[3];
  9100  003724  0102               	movlb	2	; () banked
  9101  003726  5103               	movf	(_received+3)& (0+255),w,b	;volatile
  9102  003728  121C               	iorwf	readReg@rr_Address^0,f,c
  9103  00372A                     
  9104                           ; BSR set to: 2
  9105                           ;modbus.c: 91: rr_numRegs = received[4];
  9106  00372A  C204  F01E         	movff	_received+4,readReg@rr_numRegs	;volatile
  9107  00372E  6A1F               	clrf	(readReg@rr_numRegs+1)^0,c
  9108  003730                     
  9109                           ; BSR set to: 2
  9110                           ;modbus.c: 92: rr_numRegs <<= 8;
  9111  003730  501E               	movf	readReg@rr_numRegs^0,w,c
  9112  003732  6E1F               	movwf	(readReg@rr_numRegs+1)^0,c
  9113  003734  6A1E               	clrf	readReg@rr_numRegs^0,c
  9114                           
  9115                           ;modbus.c: 93: rr_numRegs |= received[5];
  9116  003736  5105               	movf	(_received+5)& (0+255),w,b	;volatile
  9117  003738  121E               	iorwf	readReg@rr_numRegs^0,f,c
  9118  00373A                     
  9119                           ; BSR set to: 2
  9120                           ;modbus.c: 95: response[0] = 1;
  9121  00373A  0E01               	movlw	1
  9122  00373C  0101               	movlb	1	; () banked
  9123  00373E  6F00               	movwf	_response& (0+255),b	;volatile
  9124  003740                     
  9125                           ; BSR set to: 1
  9126                           ;modbus.c: 96: response[1] = 0x03;
  9127  003740  0E03               	movlw	3
  9128  003742  6F01               	movwf	(_response+1)& (0+255),b	;volatile
  9129                           
  9130                           ;modbus.c: 97: response[2] = rr_numRegs*2;
  9131  003744  501E               	movf	readReg@rr_numRegs^0,w,c
  9132  003746  241E               	addwf	readReg@rr_numRegs^0,w,c
  9133  003748  6F02               	movwf	(_response+2)& (0+255),b	;volatile
  9134  00374A                     
  9135                           ; BSR set to: 1
  9136                           ;modbus.c: 99: for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
  9137  00374A  C01C  F020         	movff	readReg@rr_Address,readReg@i
  9138  00374E  C01D  F021         	movff	readReg@rr_Address+1,readReg@i+1
  9139  003752  EF09  F01C         	goto	l7153
  9140  003756                     l7135:
  9141                           
  9142                           ;modbus.c: 100: if(holdingReg[i] > 255){
  9143  003756  90D8               	bcf	status,0,c
  9144  003758  3420               	rlcf	readReg@i^0,w,c
  9145  00375A  6ED9               	movwf	fsr2l,c
  9146  00375C  3421               	rlcf	(readReg@i+1)^0,w,c
  9147  00375E  6EDA               	movwf	fsr2h,c
  9148  003760  0E7D               	movlw	low _holdingReg
  9149  003762  26D9               	addwf	fsr2l,f,c
  9150  003764  0E01               	movlw	high _holdingReg
  9151  003766  22DA               	addwfc	fsr2h,f,c
  9152  003768  0E00               	movlw	0
  9153  00376A  5CDE               	subwf	postinc2,w,c
  9154  00376C  0E01               	movlw	1
  9155  00376E  58DE               	subwfb	postinc2,w,c
  9156  003770  A0D8               	btfss	status,0,c
  9157  003772  EFBD  F01B         	goto	u7611
  9158  003776  EFBF  F01B         	goto	u7610
  9159  00377A                     u7611:
  9160  00377A  EFEC  F01B         	goto	l7143
  9161  00377E                     u7610:
  9162  00377E                     
  9163                           ;modbus.c: 102: response[j] = holdingReg[i] >> 8;
  9164  00377E  0E00               	movlw	low _response
  9165  003780  2422               	addwf	readReg@j^0,w,c
  9166  003782  6ED9               	movwf	fsr2l,c
  9167  003784  6ADA               	clrf	fsr2h,c
  9168  003786  0E01               	movlw	high _response
  9169  003788  22DA               	addwfc	fsr2h,f,c
  9170  00378A  90D8               	bcf	status,0,c
  9171  00378C  3420               	rlcf	readReg@i^0,w,c
  9172  00378E  6EE1               	movwf	fsr1l,c
  9173  003790  3421               	rlcf	(readReg@i+1)^0,w,c
  9174  003792  6EE2               	movwf	fsr1h,c
  9175  003794  0E7D               	movlw	low _holdingReg
  9176  003796  26E1               	addwf	fsr1l,f,c
  9177  003798  0E01               	movlw	high _holdingReg
  9178  00379A  22E2               	addwfc	fsr1h,f,c
  9179  00379C  CFE6 F018          	movff	postinc1,??_readReg
  9180  0037A0  CFE5 F019          	movff	postdec1,??_readReg+1
  9181  0037A4  C019  F018         	movff	??_readReg+1,??_readReg
  9182  0037A8  6A19               	clrf	(??_readReg+1)^0,c
  9183  0037AA  5018               	movf	??_readReg^0,w,c
  9184  0037AC  6EDF               	movwf	indf2,c
  9185  0037AE                     
  9186                           ;modbus.c: 103: j++;
  9187  0037AE  2A22               	incf	readReg@j^0,f,c
  9188  0037B0                     
  9189                           ;modbus.c: 104: response[j] = holdingReg[i];
  9190  0037B0  90D8               	bcf	status,0,c
  9191  0037B2  3420               	rlcf	readReg@i^0,w,c
  9192  0037B4  6ED9               	movwf	fsr2l,c
  9193  0037B6  3421               	rlcf	(readReg@i+1)^0,w,c
  9194  0037B8  6EDA               	movwf	fsr2h,c
  9195  0037BA  0E7D               	movlw	low _holdingReg
  9196  0037BC  26D9               	addwf	fsr2l,f,c
  9197  0037BE  0E01               	movlw	high _holdingReg
  9198  0037C0  22DA               	addwfc	fsr2h,f,c
  9199  0037C2  0E00               	movlw	low _response
  9200  0037C4  2422               	addwf	readReg@j^0,w,c
  9201  0037C6  6EE1               	movwf	fsr1l,c
  9202  0037C8  6AE2               	clrf	fsr1h,c
  9203  0037CA  0E01               	movlw	high _response
  9204  0037CC  22E2               	addwfc	fsr1h,f,c
  9205  0037CE  CFDF FFE7          	movff	indf2,indf1
  9206                           
  9207                           ;modbus.c: 105: j++;
  9208  0037D2  2A22               	incf	readReg@j^0,f,c
  9209                           
  9210                           ;modbus.c: 106: }
  9211  0037D4  EF07  F01C         	goto	l7151
  9212  0037D8                     l7143:
  9213                           
  9214                           ;modbus.c: 107: else{;modbus.c: 108: response[j] = 0x00;
  9215  0037D8  0E00               	movlw	low _response
  9216  0037DA  2422               	addwf	readReg@j^0,w,c
  9217  0037DC  6ED9               	movwf	fsr2l,c
  9218  0037DE  6ADA               	clrf	fsr2h,c
  9219  0037E0  0E01               	movlw	high _response
  9220  0037E2  22DA               	addwfc	fsr2h,f,c
  9221  0037E4  0E00               	movlw	0
  9222  0037E6  6EDF               	movwf	indf2,c
  9223  0037E8                     
  9224                           ;modbus.c: 109: j++;
  9225  0037E8  2A22               	incf	readReg@j^0,f,c
  9226  0037EA                     
  9227                           ;modbus.c: 110: response[j] = holdingReg[i];
  9228  0037EA  90D8               	bcf	status,0,c
  9229  0037EC  3420               	rlcf	readReg@i^0,w,c
  9230  0037EE  6ED9               	movwf	fsr2l,c
  9231  0037F0  3421               	rlcf	(readReg@i+1)^0,w,c
  9232  0037F2  6EDA               	movwf	fsr2h,c
  9233  0037F4  0E7D               	movlw	low _holdingReg
  9234  0037F6  26D9               	addwf	fsr2l,f,c
  9235  0037F8  0E01               	movlw	high _holdingReg
  9236  0037FA  22DA               	addwfc	fsr2h,f,c
  9237  0037FC  0E00               	movlw	low _response
  9238  0037FE  2422               	addwf	readReg@j^0,w,c
  9239  003800  6EE1               	movwf	fsr1l,c
  9240  003802  6AE2               	clrf	fsr1h,c
  9241  003804  0E01               	movlw	high _response
  9242  003806  22E2               	addwfc	fsr1h,f,c
  9243  003808  CFDF FFE7          	movff	indf2,indf1
  9244  00380C                     
  9245                           ;modbus.c: 111: j++;
  9246  00380C  2A22               	incf	readReg@j^0,f,c
  9247  00380E                     l7151:
  9248  00380E  4A20               	infsnz	readReg@i^0,f,c
  9249  003810  2A21               	incf	(readReg@i+1)^0,f,c
  9250  003812                     l7153:
  9251  003812  501E               	movf	readReg@rr_numRegs^0,w,c
  9252  003814  241C               	addwf	readReg@rr_Address^0,w,c
  9253  003816  6E18               	movwf	??_readReg^0,c
  9254  003818  501F               	movf	(readReg@rr_numRegs+1)^0,w,c
  9255  00381A  201D               	addwfc	(readReg@rr_Address+1)^0,w,c
  9256  00381C  6E19               	movwf	(??_readReg+1)^0,c
  9257  00381E  5018               	movf	??_readReg^0,w,c
  9258  003820  5C20               	subwf	readReg@i^0,w,c
  9259  003822  5019               	movf	(??_readReg+1)^0,w,c
  9260  003824  5821               	subwfb	(readReg@i+1)^0,w,c
  9261  003826  A0D8               	btfss	status,0,c
  9262  003828  EF18  F01C         	goto	u7621
  9263  00382C  EF1A  F01C         	goto	u7620
  9264  003830                     u7621:
  9265  003830  EFAB  F01B         	goto	l7135
  9266  003834                     u7620:
  9267  003834                     
  9268                           ;modbus.c: 112: };modbus.c: 113: };modbus.c: 114: crc = generateCRC(j+2);
  9269  003834  5022               	movf	readReg@j^0,w,c
  9270  003836  0F02               	addlw	2
  9271  003838  EC37  F026         	call	_generateCRC
  9272  00383C  C006  F01A         	movff	?_generateCRC,readReg@crc
  9273  003840  C007  F01B         	movff	?_generateCRC+1,readReg@crc+1
  9274  003844                     
  9275                           ;modbus.c: 115: response[j] = crc >> 8;
  9276  003844  0E00               	movlw	low _response
  9277  003846  2422               	addwf	readReg@j^0,w,c
  9278  003848  6ED9               	movwf	fsr2l,c
  9279  00384A  6ADA               	clrf	fsr2h,c
  9280  00384C  0E01               	movlw	high _response
  9281  00384E  22DA               	addwfc	fsr2h,f,c
  9282  003850  501B               	movf	(readReg@crc+1)^0,w,c
  9283  003852  6EDF               	movwf	indf2,c
  9284  003854                     
  9285                           ;modbus.c: 116: j++;
  9286  003854  2A22               	incf	readReg@j^0,f,c
  9287  003856                     
  9288                           ;modbus.c: 117: response[j] = crc;
  9289  003856  0E00               	movlw	low _response
  9290  003858  2422               	addwf	readReg@j^0,w,c
  9291  00385A  6ED9               	movwf	fsr2l,c
  9292  00385C  6ADA               	clrf	fsr2h,c
  9293  00385E  0E01               	movlw	high _response
  9294  003860  22DA               	addwfc	fsr2h,f,c
  9295  003862  C01A  FFDF         	movff	readReg@crc,indf2
  9296  003866                     
  9297                           ;modbus.c: 118: j+=2;
  9298  003866  0E02               	movlw	2
  9299  003868  2622               	addwf	readReg@j^0,f,c
  9300  00386A                     
  9301                           ;modbus.c: 120: LATBbits.LATB7 = 1;
  9302  00386A  8E8A               	bsf	138,7,c	;volatile
  9303  00386C                     
  9304                           ;modbus.c: 121: for(i=0;i!=j;i++){
  9305  00386C  0E00               	movlw	0
  9306  00386E  6E21               	movwf	(readReg@i+1)^0,c
  9307  003870  0E00               	movlw	0
  9308  003872  6E20               	movwf	readReg@i^0,c
  9309  003874  EF4D  F01C         	goto	l7173
  9310  003878                     l379:
  9311  003878  A2AC               	btfss	172,1,c	;volatile
  9312  00387A  EF41  F01C         	goto	u7631
  9313  00387E  EF43  F01C         	goto	u7630
  9314  003882                     u7631:
  9315  003882  EF3C  F01C         	goto	l379
  9316  003886                     u7630:
  9317  003886                     
  9318                           ;modbus.c: 123: TXREG = response[i];
  9319  003886  0E00               	movlw	low _response
  9320  003888  2420               	addwf	readReg@i^0,w,c
  9321  00388A  6ED9               	movwf	fsr2l,c
  9322  00388C  0E01               	movlw	high _response
  9323  00388E  2021               	addwfc	(readReg@i+1)^0,w,c
  9324  003890  6EDA               	movwf	fsr2h,c
  9325  003892  50DF               	movf	indf2,w,c
  9326  003894  6EAD               	movwf	173,c	;volatile
  9327  003896  4A20               	infsnz	readReg@i^0,f,c
  9328  003898  2A21               	incf	(readReg@i+1)^0,f,c
  9329  00389A                     l7173:
  9330  00389A  5022               	movf	readReg@j^0,w,c
  9331  00389C  6E18               	movwf	??_readReg^0,c
  9332  00389E  6A19               	clrf	(??_readReg+1)^0,c
  9333  0038A0  5020               	movf	readReg@i^0,w,c
  9334  0038A2  1818               	xorwf	??_readReg^0,w,c
  9335  0038A4  E107               	bnz	u7641
  9336  0038A6  5021               	movf	(readReg@i+1)^0,w,c
  9337  0038A8  1819               	xorwf	(??_readReg+1)^0,w,c
  9338  0038AA  A4D8               	btfss	status,2,c
  9339  0038AC  EF5A  F01C         	goto	u7641
  9340  0038B0  EF5C  F01C         	goto	u7640
  9341  0038B4                     u7641:
  9342  0038B4  EF3C  F01C         	goto	l379
  9343  0038B8                     u7640:
  9344  0038B8                     
  9345                           ;modbus.c: 124: };modbus.c: 125: LATBbits.LATB7 = 0;
  9346  0038B8  9E8A               	bcf	138,7,c	;volatile
  9347  0038BA                     
  9348                           ;modbus.c: 128: clearResponse();
  9349  0038BA  EC0B  F02B         	call	_clearResponse	;wreg free
  9350  0038BE  0012               	return		;funcret
  9351  0038C0                     __end_of_readReg:
  9352                           	callstack 0
  9353                           
  9354 ;; *************** function _readInputReg *****************
  9355 ;; Defined at:
  9356 ;;		line 131 in file "modbus.c"
  9357 ;; Parameters:    Size  Location     Type
  9358 ;;		None
  9359 ;; Auto vars:     Size  Location     Type
  9360 ;;  i               2   31[COMRAM] unsigned int 
  9361 ;;  rr_numRegs      2   29[COMRAM] unsigned int 
  9362 ;;  rr_Address      2   27[COMRAM] unsigned int 
  9363 ;;  crc             2   25[COMRAM] unsigned int 
  9364 ;;  j               1   33[COMRAM] unsigned char 
  9365 ;; Return value:  Size  Location     Type
  9366 ;;                  1    wreg      void 
  9367 ;; Registers used:
  9368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9369 ;; Tracked objects:
  9370 ;;		On entry : 0/0
  9371 ;;		On exit  : 0/0
  9372 ;;		Unchanged: 0/0
  9373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9374 ;;      Params:         0       0       0       0       0       0       0
  9375 ;;      Locals:         9       0       0       0       0       0       0
  9376 ;;      Temps:          2       0       0       0       0       0       0
  9377 ;;      Totals:        11       0       0       0       0       0       0
  9378 ;;Total ram usage:       11 bytes
  9379 ;; Hardware stack levels used:    1
  9380 ;; Hardware stack levels required when called:    5
  9381 ;; This function calls:
  9382 ;;		_clearResponse
  9383 ;;		_generateCRC
  9384 ;; This function is called by:
  9385 ;;		_decodeIt
  9386 ;; This function uses a non-reentrant model
  9387 ;;
  9388                           
  9389                           	psect	text25
  9390  0038C0                     __ptext25:
  9391                           	callstack 0
  9392  0038C0                     _readInputReg:
  9393                           	callstack 24
  9394  0038C0                     
  9395                           ;modbus.c: 134: unsigned int rr_numRegs = 0;
  9396  0038C0  0E00               	movlw	0
  9397  0038C2  6E1F               	movwf	(readInputReg@rr_numRegs+1)^0,c
  9398  0038C4  0E00               	movlw	0
  9399  0038C6  6E1E               	movwf	readInputReg@rr_numRegs^0,c
  9400                           
  9401                           ;modbus.c: 135: unsigned char j = 3;
  9402  0038C8  0E03               	movlw	3
  9403  0038CA  6E22               	movwf	readInputReg@j^0,c
  9404                           
  9405                           ;modbus.c: 136: unsigned int crc = 0;
  9406  0038CC  0E00               	movlw	0
  9407  0038CE  6E1B               	movwf	(readInputReg@crc+1)^0,c
  9408  0038D0  0E00               	movlw	0
  9409  0038D2  6E1A               	movwf	readInputReg@crc^0,c
  9410                           
  9411                           ;modbus.c: 137: unsigned int i = 0;
  9412  0038D4  0E00               	movlw	0
  9413  0038D6  6E21               	movwf	(readInputReg@i+1)^0,c
  9414  0038D8  0E00               	movlw	0
  9415  0038DA  6E20               	movwf	readInputReg@i^0,c
  9416  0038DC                     
  9417                           ;modbus.c: 140: rr_Address = received[2];
  9418  0038DC  C202  F01C         	movff	_received+2,readInputReg@rr_Address	;volatile
  9419  0038E0  6A1D               	clrf	(readInputReg@rr_Address+1)^0,c
  9420                           
  9421                           ;modbus.c: 141: rr_Address <<= 8;
  9422  0038E2  501C               	movf	readInputReg@rr_Address^0,w,c
  9423  0038E4  6E1D               	movwf	(readInputReg@rr_Address+1)^0,c
  9424  0038E6  6A1C               	clrf	readInputReg@rr_Address^0,c
  9425  0038E8                     
  9426                           ;modbus.c: 142: rr_Address |= received[3];
  9427  0038E8  0102               	movlb	2	; () banked
  9428  0038EA  5103               	movf	(_received+3)& (0+255),w,b	;volatile
  9429  0038EC  121C               	iorwf	readInputReg@rr_Address^0,f,c
  9430  0038EE                     
  9431                           ; BSR set to: 2
  9432                           ;modbus.c: 145: rr_numRegs = received[4];
  9433  0038EE  C204  F01E         	movff	_received+4,readInputReg@rr_numRegs	;volatile
  9434  0038F2  6A1F               	clrf	(readInputReg@rr_numRegs+1)^0,c
  9435  0038F4                     
  9436                           ; BSR set to: 2
  9437                           ;modbus.c: 146: rr_numRegs <<= 8;
  9438  0038F4  501E               	movf	readInputReg@rr_numRegs^0,w,c
  9439  0038F6  6E1F               	movwf	(readInputReg@rr_numRegs+1)^0,c
  9440  0038F8  6A1E               	clrf	readInputReg@rr_numRegs^0,c
  9441                           
  9442                           ;modbus.c: 147: rr_numRegs |= received[5];
  9443  0038FA  5105               	movf	(_received+5)& (0+255),w,b	;volatile
  9444  0038FC  121E               	iorwf	readInputReg@rr_numRegs^0,f,c
  9445  0038FE                     
  9446                           ; BSR set to: 2
  9447                           ;modbus.c: 149: response[0] = 1;
  9448  0038FE  0E01               	movlw	1
  9449  003900  0101               	movlb	1	; () banked
  9450  003902  6F00               	movwf	_response& (0+255),b	;volatile
  9451  003904                     
  9452                           ; BSR set to: 1
  9453                           ;modbus.c: 150: response[1] = 0x04;
  9454  003904  0E04               	movlw	4
  9455  003906  6F01               	movwf	(_response+1)& (0+255),b	;volatile
  9456                           
  9457                           ;modbus.c: 151: response[2] = rr_numRegs*2;
  9458  003908  501E               	movf	readInputReg@rr_numRegs^0,w,c
  9459  00390A  241E               	addwf	readInputReg@rr_numRegs^0,w,c
  9460  00390C  6F02               	movwf	(_response+2)& (0+255),b	;volatile
  9461  00390E                     
  9462                           ; BSR set to: 1
  9463                           ;modbus.c: 153: for(i=rr_Address;i<(rr_Address + rr_numRegs);i++){
  9464  00390E  C01C  F020         	movff	readInputReg@rr_Address,readInputReg@i
  9465  003912  C01D  F021         	movff	readInputReg@rr_Address+1,readInputReg@i+1
  9466  003916  EFEB  F01C         	goto	l7213
  9467  00391A                     l7195:
  9468                           
  9469                           ;modbus.c: 154: if(holdingReg[i] > 255){
  9470  00391A  90D8               	bcf	status,0,c
  9471  00391C  3420               	rlcf	readInputReg@i^0,w,c
  9472  00391E  6ED9               	movwf	fsr2l,c
  9473  003920  3421               	rlcf	(readInputReg@i+1)^0,w,c
  9474  003922  6EDA               	movwf	fsr2h,c
  9475  003924  0E7D               	movlw	low _holdingReg
  9476  003926  26D9               	addwf	fsr2l,f,c
  9477  003928  0E01               	movlw	high _holdingReg
  9478  00392A  22DA               	addwfc	fsr2h,f,c
  9479  00392C  0E00               	movlw	0
  9480  00392E  5CDE               	subwf	postinc2,w,c
  9481  003930  0E01               	movlw	1
  9482  003932  58DE               	subwfb	postinc2,w,c
  9483  003934  A0D8               	btfss	status,0,c
  9484  003936  EF9F  F01C         	goto	u7651
  9485  00393A  EFA1  F01C         	goto	u7650
  9486  00393E                     u7651:
  9487  00393E  EFCE  F01C         	goto	l7203
  9488  003942                     u7650:
  9489  003942                     
  9490                           ;modbus.c: 156: response[j] = holdingReg[i] >> 8;
  9491  003942  0E00               	movlw	low _response
  9492  003944  2422               	addwf	readInputReg@j^0,w,c
  9493  003946  6ED9               	movwf	fsr2l,c
  9494  003948  6ADA               	clrf	fsr2h,c
  9495  00394A  0E01               	movlw	high _response
  9496  00394C  22DA               	addwfc	fsr2h,f,c
  9497  00394E  90D8               	bcf	status,0,c
  9498  003950  3420               	rlcf	readInputReg@i^0,w,c
  9499  003952  6EE1               	movwf	fsr1l,c
  9500  003954  3421               	rlcf	(readInputReg@i+1)^0,w,c
  9501  003956  6EE2               	movwf	fsr1h,c
  9502  003958  0E7D               	movlw	low _holdingReg
  9503  00395A  26E1               	addwf	fsr1l,f,c
  9504  00395C  0E01               	movlw	high _holdingReg
  9505  00395E  22E2               	addwfc	fsr1h,f,c
  9506  003960  CFE6 F018          	movff	postinc1,??_readInputReg
  9507  003964  CFE5 F019          	movff	postdec1,??_readInputReg+1
  9508  003968  C019  F018         	movff	??_readInputReg+1,??_readInputReg
  9509  00396C  6A19               	clrf	(??_readInputReg+1)^0,c
  9510  00396E  5018               	movf	??_readInputReg^0,w,c
  9511  003970  6EDF               	movwf	indf2,c
  9512  003972                     
  9513                           ;modbus.c: 157: j++;
  9514  003972  2A22               	incf	readInputReg@j^0,f,c
  9515  003974                     
  9516                           ;modbus.c: 158: response[j] = holdingReg[i];
  9517  003974  90D8               	bcf	status,0,c
  9518  003976  3420               	rlcf	readInputReg@i^0,w,c
  9519  003978  6ED9               	movwf	fsr2l,c
  9520  00397A  3421               	rlcf	(readInputReg@i+1)^0,w,c
  9521  00397C  6EDA               	movwf	fsr2h,c
  9522  00397E  0E7D               	movlw	low _holdingReg
  9523  003980  26D9               	addwf	fsr2l,f,c
  9524  003982  0E01               	movlw	high _holdingReg
  9525  003984  22DA               	addwfc	fsr2h,f,c
  9526  003986  0E00               	movlw	low _response
  9527  003988  2422               	addwf	readInputReg@j^0,w,c
  9528  00398A  6EE1               	movwf	fsr1l,c
  9529  00398C  6AE2               	clrf	fsr1h,c
  9530  00398E  0E01               	movlw	high _response
  9531  003990  22E2               	addwfc	fsr1h,f,c
  9532  003992  CFDF FFE7          	movff	indf2,indf1
  9533                           
  9534                           ;modbus.c: 159: j++;
  9535  003996  2A22               	incf	readInputReg@j^0,f,c
  9536                           
  9537                           ;modbus.c: 160: }
  9538  003998  EFE9  F01C         	goto	l7211
  9539  00399C                     l7203:
  9540                           
  9541                           ;modbus.c: 161: else{;modbus.c: 162: response[j] = 0x00;
  9542  00399C  0E00               	movlw	low _response
  9543  00399E  2422               	addwf	readInputReg@j^0,w,c
  9544  0039A0  6ED9               	movwf	fsr2l,c
  9545  0039A2  6ADA               	clrf	fsr2h,c
  9546  0039A4  0E01               	movlw	high _response
  9547  0039A6  22DA               	addwfc	fsr2h,f,c
  9548  0039A8  0E00               	movlw	0
  9549  0039AA  6EDF               	movwf	indf2,c
  9550  0039AC                     
  9551                           ;modbus.c: 163: j++;
  9552  0039AC  2A22               	incf	readInputReg@j^0,f,c
  9553  0039AE                     
  9554                           ;modbus.c: 164: response[j] = holdingReg[i];
  9555  0039AE  90D8               	bcf	status,0,c
  9556  0039B0  3420               	rlcf	readInputReg@i^0,w,c
  9557  0039B2  6ED9               	movwf	fsr2l,c
  9558  0039B4  3421               	rlcf	(readInputReg@i+1)^0,w,c
  9559  0039B6  6EDA               	movwf	fsr2h,c
  9560  0039B8  0E7D               	movlw	low _holdingReg
  9561  0039BA  26D9               	addwf	fsr2l,f,c
  9562  0039BC  0E01               	movlw	high _holdingReg
  9563  0039BE  22DA               	addwfc	fsr2h,f,c
  9564  0039C0  0E00               	movlw	low _response
  9565  0039C2  2422               	addwf	readInputReg@j^0,w,c
  9566  0039C4  6EE1               	movwf	fsr1l,c
  9567  0039C6  6AE2               	clrf	fsr1h,c
  9568  0039C8  0E01               	movlw	high _response
  9569  0039CA  22E2               	addwfc	fsr1h,f,c
  9570  0039CC  CFDF FFE7          	movff	indf2,indf1
  9571  0039D0                     
  9572                           ;modbus.c: 165: j++;
  9573  0039D0  2A22               	incf	readInputReg@j^0,f,c
  9574  0039D2                     l7211:
  9575  0039D2  4A20               	infsnz	readInputReg@i^0,f,c
  9576  0039D4  2A21               	incf	(readInputReg@i+1)^0,f,c
  9577  0039D6                     l7213:
  9578  0039D6  501E               	movf	readInputReg@rr_numRegs^0,w,c
  9579  0039D8  241C               	addwf	readInputReg@rr_Address^0,w,c
  9580  0039DA  6E18               	movwf	??_readInputReg^0,c
  9581  0039DC  501F               	movf	(readInputReg@rr_numRegs+1)^0,w,c
  9582  0039DE  201D               	addwfc	(readInputReg@rr_Address+1)^0,w,c
  9583  0039E0  6E19               	movwf	(??_readInputReg+1)^0,c
  9584  0039E2  5018               	movf	??_readInputReg^0,w,c
  9585  0039E4  5C20               	subwf	readInputReg@i^0,w,c
  9586  0039E6  5019               	movf	(??_readInputReg+1)^0,w,c
  9587  0039E8  5821               	subwfb	(readInputReg@i+1)^0,w,c
  9588  0039EA  A0D8               	btfss	status,0,c
  9589  0039EC  EFFA  F01C         	goto	u7661
  9590  0039F0  EFFC  F01C         	goto	u7660
  9591  0039F4                     u7661:
  9592  0039F4  EF8D  F01C         	goto	l7195
  9593  0039F8                     u7660:
  9594  0039F8                     
  9595                           ;modbus.c: 166: };modbus.c: 167: };modbus.c: 168: crc = generateCRC(j+2);
  9596  0039F8  5022               	movf	readInputReg@j^0,w,c
  9597  0039FA  0F02               	addlw	2
  9598  0039FC  EC37  F026         	call	_generateCRC
  9599  003A00  C006  F01A         	movff	?_generateCRC,readInputReg@crc
  9600  003A04  C007  F01B         	movff	?_generateCRC+1,readInputReg@crc+1
  9601  003A08                     
  9602                           ;modbus.c: 169: response[j] = crc >> 8;
  9603  003A08  0E00               	movlw	low _response
  9604  003A0A  2422               	addwf	readInputReg@j^0,w,c
  9605  003A0C  6ED9               	movwf	fsr2l,c
  9606  003A0E  6ADA               	clrf	fsr2h,c
  9607  003A10  0E01               	movlw	high _response
  9608  003A12  22DA               	addwfc	fsr2h,f,c
  9609  003A14  501B               	movf	(readInputReg@crc+1)^0,w,c
  9610  003A16  6EDF               	movwf	indf2,c
  9611  003A18                     
  9612                           ;modbus.c: 170: j++;
  9613  003A18  2A22               	incf	readInputReg@j^0,f,c
  9614  003A1A                     
  9615                           ;modbus.c: 171: response[j] = crc;
  9616  003A1A  0E00               	movlw	low _response
  9617  003A1C  2422               	addwf	readInputReg@j^0,w,c
  9618  003A1E  6ED9               	movwf	fsr2l,c
  9619  003A20  6ADA               	clrf	fsr2h,c
  9620  003A22  0E01               	movlw	high _response
  9621  003A24  22DA               	addwfc	fsr2h,f,c
  9622  003A26  C01A  FFDF         	movff	readInputReg@crc,indf2
  9623  003A2A                     
  9624                           ;modbus.c: 172: j+=2;
  9625  003A2A  0E02               	movlw	2
  9626  003A2C  2622               	addwf	readInputReg@j^0,f,c
  9627  003A2E                     
  9628                           ;modbus.c: 174: LATBbits.LATB7 = 1;
  9629  003A2E  8E8A               	bsf	138,7,c	;volatile
  9630  003A30                     
  9631                           ;modbus.c: 175: for(i=0;i!=j;i++){
  9632  003A30  0E00               	movlw	0
  9633  003A32  6E21               	movwf	(readInputReg@i+1)^0,c
  9634  003A34  0E00               	movlw	0
  9635  003A36  6E20               	movwf	readInputReg@i^0,c
  9636  003A38  EF2F  F01D         	goto	l7233
  9637  003A3C                     l393:
  9638  003A3C  A2AC               	btfss	172,1,c	;volatile
  9639  003A3E  EF23  F01D         	goto	u7671
  9640  003A42  EF25  F01D         	goto	u7670
  9641  003A46                     u7671:
  9642  003A46  EF1E  F01D         	goto	l393
  9643  003A4A                     u7670:
  9644  003A4A                     
  9645                           ;modbus.c: 177: TXREG = response[i];
  9646  003A4A  0E00               	movlw	low _response
  9647  003A4C  2420               	addwf	readInputReg@i^0,w,c
  9648  003A4E  6ED9               	movwf	fsr2l,c
  9649  003A50  0E01               	movlw	high _response
  9650  003A52  2021               	addwfc	(readInputReg@i+1)^0,w,c
  9651  003A54  6EDA               	movwf	fsr2h,c
  9652  003A56  50DF               	movf	indf2,w,c
  9653  003A58  6EAD               	movwf	173,c	;volatile
  9654  003A5A  4A20               	infsnz	readInputReg@i^0,f,c
  9655  003A5C  2A21               	incf	(readInputReg@i+1)^0,f,c
  9656  003A5E                     l7233:
  9657  003A5E  5022               	movf	readInputReg@j^0,w,c
  9658  003A60  6E18               	movwf	??_readInputReg^0,c
  9659  003A62  6A19               	clrf	(??_readInputReg+1)^0,c
  9660  003A64  5020               	movf	readInputReg@i^0,w,c
  9661  003A66  1818               	xorwf	??_readInputReg^0,w,c
  9662  003A68  E107               	bnz	u7681
  9663  003A6A  5021               	movf	(readInputReg@i+1)^0,w,c
  9664  003A6C  1819               	xorwf	(??_readInputReg+1)^0,w,c
  9665  003A6E  A4D8               	btfss	status,2,c
  9666  003A70  EF3C  F01D         	goto	u7681
  9667  003A74  EF3E  F01D         	goto	u7680
  9668  003A78                     u7681:
  9669  003A78  EF1E  F01D         	goto	l393
  9670  003A7C                     u7680:
  9671  003A7C                     
  9672                           ;modbus.c: 178: };modbus.c: 179: LATBbits.LATB7 = 0;
  9673  003A7C  9E8A               	bcf	138,7,c	;volatile
  9674  003A7E                     
  9675                           ;modbus.c: 182: clearResponse();
  9676  003A7E  EC0B  F02B         	call	_clearResponse	;wreg free
  9677  003A82  0012               	return		;funcret
  9678  003A84                     __end_of_readInputReg:
  9679                           	callstack 0
  9680                           
  9681 ;; *************** function _readInputCoil *****************
  9682 ;; Defined at:
  9683 ;;		line 322 in file "modbus.c"
  9684 ;; Parameters:    Size  Location     Type
  9685 ;;		None
  9686 ;; Auto vars:     Size  Location     Type
  9687 ;;  rc_numCoils     2   33[COMRAM] unsigned int 
  9688 ;;  crc             2   29[COMRAM] unsigned int 
  9689 ;;  rc_Address      2   27[COMRAM] unsigned int 
  9690 ;;  k               1   39[COMRAM] unsigned char 
  9691 ;;  j               1   38[COMRAM] unsigned char 
  9692 ;;  i               1   37[COMRAM] unsigned char 
  9693 ;;  lsb             1   36[COMRAM] unsigned char 
  9694 ;;  l               1   35[COMRAM] unsigned char 
  9695 ;;  howManyBytes    1   32[COMRAM] unsigned char 
  9696 ;;  remainder       1   31[COMRAM] unsigned char 
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  1    wreg      void 
  9699 ;; Registers used:
  9700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9706 ;;      Params:         0       0       0       0       0       0       0
  9707 ;;      Locals:        13       0       0       0       0       0       0
  9708 ;;      Temps:          4       0       0       0       0       0       0
  9709 ;;      Totals:        17       0       0       0       0       0       0
  9710 ;;Total ram usage:       17 bytes
  9711 ;; Hardware stack levels used:    1
  9712 ;; Hardware stack levels required when called:    5
  9713 ;; This function calls:
  9714 ;;		_clearResponse
  9715 ;;		_generateCRC
  9716 ;; This function is called by:
  9717 ;;		_decodeIt
  9718 ;; This function uses a non-reentrant model
  9719 ;;
  9720                           
  9721                           	psect	text26
  9722  0032A4                     __ptext26:
  9723                           	callstack 0
  9724  0032A4                     _readInputCoil:
  9725                           	callstack 24
  9726  0032A4                     
  9727                           ;modbus.c: 328: unsigned int rc_numCoils = 0;
  9728  0032A4  0E00               	movlw	0
  9729  0032A6  6E23               	movwf	(readInputCoil@rc_numCoils+1)^0,c
  9730  0032A8  0E00               	movlw	0
  9731  0032AA  6E22               	movwf	readInputCoil@rc_numCoils^0,c
  9732                           
  9733                           ;modbus.c: 329: unsigned int crc = 0;
  9734  0032AC  0E00               	movlw	0
  9735  0032AE  6E1F               	movwf	(readInputCoil@crc+1)^0,c
  9736  0032B0  0E00               	movlw	0
  9737  0032B2  6E1E               	movwf	readInputCoil@crc^0,c
  9738                           
  9739                           ;modbus.c: 331: unsigned char howManyBytes = 0;
  9740  0032B4  0E00               	movlw	0
  9741  0032B6  6E21               	movwf	readInputCoil@howManyBytes^0,c
  9742                           
  9743                           ;modbus.c: 332: unsigned char remainder = 0;
  9744  0032B8  0E00               	movlw	0
  9745  0032BA  6E20               	movwf	readInputCoil@remainder^0,c
  9746                           
  9747                           ;modbus.c: 333: unsigned char lsb = 0;
  9748  0032BC  0E00               	movlw	0
  9749  0032BE  6E25               	movwf	readInputCoil@lsb^0,c
  9750                           
  9751                           ;modbus.c: 334: unsigned char i,j,k,l = 0;
  9752  0032C0  0E00               	movlw	0
  9753  0032C2  6E24               	movwf	readInputCoil@l^0,c
  9754  0032C4                     
  9755                           ;modbus.c: 337: rc_Address = received[2];
  9756  0032C4  C202  F01C         	movff	_received+2,readInputCoil@rc_Address	;volatile
  9757  0032C8  6A1D               	clrf	(readInputCoil@rc_Address+1)^0,c
  9758                           
  9759                           ;modbus.c: 338: rc_Address <<=8;
  9760  0032CA  501C               	movf	readInputCoil@rc_Address^0,w,c
  9761  0032CC  6E1D               	movwf	(readInputCoil@rc_Address+1)^0,c
  9762  0032CE  6A1C               	clrf	readInputCoil@rc_Address^0,c
  9763  0032D0                     
  9764                           ;modbus.c: 339: rc_Address |= received[3];
  9765  0032D0  0102               	movlb	2	; () banked
  9766  0032D2  5103               	movf	(_received+3)& (0+255),w,b	;volatile
  9767  0032D4  121C               	iorwf	readInputCoil@rc_Address^0,f,c
  9768  0032D6                     
  9769                           ; BSR set to: 2
  9770                           ;modbus.c: 342: rc_numCoils = received[4];
  9771  0032D6  C204  F022         	movff	_received+4,readInputCoil@rc_numCoils	;volatile
  9772  0032DA  6A23               	clrf	(readInputCoil@rc_numCoils+1)^0,c
  9773  0032DC                     
  9774                           ; BSR set to: 2
  9775                           ;modbus.c: 343: rc_numCoils <<= 8;
  9776  0032DC  5022               	movf	readInputCoil@rc_numCoils^0,w,c
  9777  0032DE  6E23               	movwf	(readInputCoil@rc_numCoils+1)^0,c
  9778  0032E0  6A22               	clrf	readInputCoil@rc_numCoils^0,c
  9779                           
  9780                           ;modbus.c: 344: rc_numCoils |= received[5];
  9781  0032E2  5105               	movf	(_received+5)& (0+255),w,b	;volatile
  9782  0032E4  1222               	iorwf	readInputCoil@rc_numCoils^0,f,c
  9783  0032E6                     
  9784                           ; BSR set to: 2
  9785                           ;modbus.c: 346: response[0] = 1;
  9786  0032E6  0E01               	movlw	1
  9787  0032E8  0101               	movlb	1	; () banked
  9788  0032EA  6F00               	movwf	_response& (0+255),b	;volatile
  9789  0032EC                     
  9790                           ; BSR set to: 1
  9791                           ;modbus.c: 347: response[1] = 0x02;
  9792  0032EC  0E02               	movlw	2
  9793  0032EE  6F01               	movwf	(_response+1)& (0+255),b	;volatile
  9794                           
  9795                           ;modbus.c: 349: howManyBytes = rc_numCoils/8;
  9796  0032F0  C022  F018         	movff	readInputCoil@rc_numCoils,??_readInputCoil
  9797  0032F4  C023  F019         	movff	readInputCoil@rc_numCoils+1,??_readInputCoil+1
  9798  0032F8  90D8               	bcf	status,0,c
  9799  0032FA  3219               	rrcf	(??_readInputCoil+1)^0,f,c
  9800  0032FC  3218               	rrcf	??_readInputCoil^0,f,c
  9801  0032FE  90D8               	bcf	status,0,c
  9802  003300  3219               	rrcf	(??_readInputCoil+1)^0,f,c
  9803  003302  3218               	rrcf	??_readInputCoil^0,f,c
  9804  003304  90D8               	bcf	status,0,c
  9805  003306  3219               	rrcf	(??_readInputCoil+1)^0,f,c
  9806  003308  3218               	rrcf	??_readInputCoil^0,f,c
  9807  00330A  5018               	movf	??_readInputCoil^0,w,c
  9808  00330C  6E21               	movwf	readInputCoil@howManyBytes^0,c
  9809                           
  9810                           ;modbus.c: 350: remainder = rc_numCoils % 8;
  9811  00330E  5022               	movf	readInputCoil@rc_numCoils^0,w,c
  9812  003310  0B07               	andlw	7
  9813  003312  6E20               	movwf	readInputCoil@remainder^0,c
  9814  003314                     
  9815                           ; BSR set to: 1
  9816                           ;modbus.c: 352: if(remainder){
  9817  003314  5020               	movf	readInputCoil@remainder^0,w,c
  9818  003316  B4D8               	btfsc	status,2,c
  9819  003318  EF90  F019         	goto	u7501
  9820  00331C  EF92  F019         	goto	u7500
  9821  003320                     u7501:
  9822  003320  EF93  F019         	goto	l7045
  9823  003324                     u7500:
  9824  003324                     
  9825                           ; BSR set to: 1
  9826                           ;modbus.c: 353: howManyBytes += 1;
  9827  003324  2A21               	incf	readInputCoil@howManyBytes^0,f,c
  9828  003326                     l7045:
  9829                           
  9830                           ; BSR set to: 1
  9831                           ;modbus.c: 354: };modbus.c: 355: response[2] = howManyBytes;
  9832  003326  C021  F102         	movff	readInputCoil@howManyBytes,_response+2	;volatile
  9833  00332A                     
  9834                           ; BSR set to: 1
  9835                           ;modbus.c: 357: l = rc_Address;
  9836  00332A  C01C  F024         	movff	readInputCoil@rc_Address,readInputCoil@l
  9837  00332E                     
  9838                           ; BSR set to: 1
  9839                           ;modbus.c: 358: k = 3;
  9840  00332E  0E03               	movlw	3
  9841  003330  6E28               	movwf	readInputCoil@k^0,c
  9842  003332                     
  9843                           ; BSR set to: 1
  9844                           ;modbus.c: 360: for(i=howManyBytes; i!=0; i--){
  9845  003332  C021  F026         	movff	readInputCoil@howManyBytes,readInputCoil@i
  9846  003336                     l7053:
  9847  003336  5026               	movf	readInputCoil@i^0,w,c
  9848  003338  A4D8               	btfss	status,2,c
  9849  00333A  EFA1  F019         	goto	u7511
  9850  00333E  EFA3  F019         	goto	u7510
  9851  003342                     u7511:
  9852  003342  EFA5  F019         	goto	l7057
  9853  003346                     u7510:
  9854  003346  EF21  F01A         	goto	l7101
  9855  00334A                     l7057:
  9856                           
  9857                           ;modbus.c: 361: if(i>1){
  9858  00334A  0E01               	movlw	1
  9859  00334C  6426               	cpfsgt	readInputCoil@i^0,c
  9860  00334E  EFAB  F019         	goto	u7521
  9861  003352  EFAD  F019         	goto	u7520
  9862  003356                     u7521:
  9863  003356  EFE5  F019         	goto	l7081
  9864  00335A                     u7520:
  9865  00335A                     
  9866                           ;modbus.c: 362: for(j=0;j!=8;j++){
  9867  00335A  0E00               	movlw	0
  9868  00335C  6E27               	movwf	readInputCoil@j^0,c
  9869  00335E                     l7065:
  9870                           
  9871                           ;modbus.c: 363: if(coils[l]){
  9872  00335E  0E7D               	movlw	low _coils
  9873  003360  2424               	addwf	readInputCoil@l^0,w,c
  9874  003362  6ED9               	movwf	fsr2l,c
  9875  003364  6ADA               	clrf	fsr2h,c
  9876  003366  0E02               	movlw	high _coils
  9877  003368  22DA               	addwfc	fsr2h,f,c
  9878  00336A  50DF               	movf	indf2,w,c
  9879  00336C  B4D8               	btfsc	status,2,c
  9880  00336E  EFBB  F019         	goto	u7531
  9881  003372  EFBD  F019         	goto	u7530
  9882  003376                     u7531:
  9883  003376  EFC1  F019         	goto	l7069
  9884  00337A                     u7530:
  9885  00337A                     
  9886                           ;modbus.c: 364: lsb = 1;
  9887  00337A  0E01               	movlw	1
  9888  00337C  6E25               	movwf	readInputCoil@lsb^0,c
  9889                           
  9890                           ;modbus.c: 365: }
  9891  00337E  EFC3  F019         	goto	l7071
  9892  003382                     l7069:
  9893                           
  9894                           ;modbus.c: 366: else{;modbus.c: 367: lsb = 0;
  9895  003382  0E00               	movlw	0
  9896  003384  6E25               	movwf	readInputCoil@lsb^0,c
  9897  003386                     l7071:
  9898                           
  9899                           ;modbus.c: 368: };modbus.c: 369: response[k] ^= (lsb << j);
  9900  003386  C027  F018         	movff	readInputCoil@j,??_readInputCoil
  9901  00338A  C025  F019         	movff	readInputCoil@lsb,??_readInputCoil+1
  9902  00338E  2A18               	incf	??_readInputCoil^0,f,c
  9903  003390  EFCC  F019         	goto	u7544
  9904  003394                     u7545:
  9905  003394  90D8               	bcf	status,0,c
  9906  003396  3619               	rlcf	(??_readInputCoil+1)^0,f,c
  9907  003398                     u7544:
  9908  003398  2E18               	decfsz	??_readInputCoil^0,f,c
  9909  00339A  EFCA  F019         	goto	u7545
  9910  00339E  0E00               	movlw	low _response
  9911  0033A0  2428               	addwf	readInputCoil@k^0,w,c
  9912  0033A2  6ED9               	movwf	fsr2l,c
  9913  0033A4  6ADA               	clrf	fsr2h,c
  9914  0033A6  0E01               	movlw	high _response
  9915  0033A8  22DA               	addwfc	fsr2h,f,c
  9916  0033AA  5019               	movf	(??_readInputCoil+1)^0,w,c
  9917  0033AC  1ADF               	xorwf	indf2,f,c
  9918  0033AE                     
  9919                           ;modbus.c: 370: l++;
  9920  0033AE  2A24               	incf	readInputCoil@l^0,f,c
  9921  0033B0  2A27               	incf	readInputCoil@j^0,f,c
  9922  0033B2  0E08               	movlw	8
  9923  0033B4  1827               	xorwf	readInputCoil@j^0,w,c
  9924  0033B6  A4D8               	btfss	status,2,c
  9925  0033B8  EFE0  F019         	goto	u7551
  9926  0033BC  EFE2  F019         	goto	u7550
  9927  0033C0                     u7551:
  9928  0033C0  EFAF  F019         	goto	l7065
  9929  0033C4                     u7550:
  9930  0033C4                     l7079:
  9931                           
  9932                           ;modbus.c: 371: };modbus.c: 372: k++;
  9933  0033C4  2A28               	incf	readInputCoil@k^0,f,c
  9934                           
  9935                           ;modbus.c: 373: }
  9936  0033C6  EF1E  F01A         	goto	l439
  9937  0033CA                     l7081:
  9938                           
  9939                           ;modbus.c: 374: else{;modbus.c: 375: for(j=0;j!=remainder;j++){
  9940  0033CA  0E00               	movlw	0
  9941  0033CC  6E27               	movwf	readInputCoil@j^0,c
  9942  0033CE  EF13  F01A         	goto	l7095
  9943  0033D2                     l7083:
  9944                           
  9945                           ;modbus.c: 376: if(coils[l]){
  9946  0033D2  0E7D               	movlw	low _coils
  9947  0033D4  2424               	addwf	readInputCoil@l^0,w,c
  9948  0033D6  6ED9               	movwf	fsr2l,c
  9949  0033D8  6ADA               	clrf	fsr2h,c
  9950  0033DA  0E02               	movlw	high _coils
  9951  0033DC  22DA               	addwfc	fsr2h,f,c
  9952  0033DE  50DF               	movf	indf2,w,c
  9953  0033E0  B4D8               	btfsc	status,2,c
  9954  0033E2  EFF5  F019         	goto	u7561
  9955  0033E6  EFF7  F019         	goto	u7560
  9956  0033EA                     u7561:
  9957  0033EA  EFFB  F019         	goto	l7087
  9958  0033EE                     u7560:
  9959  0033EE                     
  9960                           ;modbus.c: 377: lsb = 1;
  9961  0033EE  0E01               	movlw	1
  9962  0033F0  6E25               	movwf	readInputCoil@lsb^0,c
  9963                           
  9964                           ;modbus.c: 378: }
  9965  0033F2  EFFD  F019         	goto	l7089
  9966  0033F6                     l7087:
  9967                           
  9968                           ;modbus.c: 379: else{;modbus.c: 380: lsb = 0;
  9969  0033F6  0E00               	movlw	0
  9970  0033F8  6E25               	movwf	readInputCoil@lsb^0,c
  9971  0033FA                     l7089:
  9972                           
  9973                           ;modbus.c: 381: };modbus.c: 382: response[k] ^= (lsb << j);
  9974  0033FA  C027  F018         	movff	readInputCoil@j,??_readInputCoil
  9975  0033FE  C025  F019         	movff	readInputCoil@lsb,??_readInputCoil+1
  9976  003402  2A18               	incf	??_readInputCoil^0,f,c
  9977  003404  EF06  F01A         	goto	u7574
  9978  003408                     u7575:
  9979  003408  90D8               	bcf	status,0,c
  9980  00340A  3619               	rlcf	(??_readInputCoil+1)^0,f,c
  9981  00340C                     u7574:
  9982  00340C  2E18               	decfsz	??_readInputCoil^0,f,c
  9983  00340E  EF04  F01A         	goto	u7575
  9984  003412  0E00               	movlw	low _response
  9985  003414  2428               	addwf	readInputCoil@k^0,w,c
  9986  003416  6ED9               	movwf	fsr2l,c
  9987  003418  6ADA               	clrf	fsr2h,c
  9988  00341A  0E01               	movlw	high _response
  9989  00341C  22DA               	addwfc	fsr2h,f,c
  9990  00341E  5019               	movf	(??_readInputCoil+1)^0,w,c
  9991  003420  1ADF               	xorwf	indf2,f,c
  9992  003422                     
  9993                           ;modbus.c: 383: l++;
  9994  003422  2A24               	incf	readInputCoil@l^0,f,c
  9995  003424  2A27               	incf	readInputCoil@j^0,f,c
  9996  003426                     l7095:
  9997  003426  5020               	movf	readInputCoil@remainder^0,w,c
  9998  003428  1827               	xorwf	readInputCoil@j^0,w,c
  9999  00342A  A4D8               	btfss	status,2,c
 10000  00342C  EF1A  F01A         	goto	u7581
 10001  003430  EF1C  F01A         	goto	u7580
 10002  003434                     u7581:
 10003  003434  EFE9  F019         	goto	l7083
 10004  003438                     u7580:
 10005  003438  EFE2  F019         	goto	l7079
 10006  00343C                     l439:
 10007  00343C  0626               	decf	readInputCoil@i^0,f,c
 10008  00343E  EF9B  F019         	goto	l7053
 10009  003442                     l7101:
 10010                           
 10011                           ;modbus.c: 386: };modbus.c: 387: };modbus.c: 388: crc = generateCRC(k+2);
 10012  003442  5028               	movf	readInputCoil@k^0,w,c
 10013  003444  0F02               	addlw	2
 10014  003446  EC37  F026         	call	_generateCRC
 10015  00344A  C006  F01E         	movff	?_generateCRC,readInputCoil@crc
 10016  00344E  C007  F01F         	movff	?_generateCRC+1,readInputCoil@crc+1
 10017  003452                     
 10018                           ;modbus.c: 390: response[k] = crc >> 8;
 10019  003452  0E00               	movlw	low _response
 10020  003454  2428               	addwf	readInputCoil@k^0,w,c
 10021  003456  6ED9               	movwf	fsr2l,c
 10022  003458  6ADA               	clrf	fsr2h,c
 10023  00345A  0E01               	movlw	high _response
 10024  00345C  22DA               	addwfc	fsr2h,f,c
 10025  00345E  501F               	movf	(readInputCoil@crc+1)^0,w,c
 10026  003460  6EDF               	movwf	indf2,c
 10027  003462                     
 10028                           ;modbus.c: 391: response[k+1] = crc;
 10029  003462  0E01               	movlw	low (_response+1)
 10030  003464  2428               	addwf	readInputCoil@k^0,w,c
 10031  003466  6ED9               	movwf	fsr2l,c
 10032  003468  6ADA               	clrf	fsr2h,c
 10033  00346A  0E01               	movlw	high (_response+1)
 10034  00346C  22DA               	addwfc	fsr2h,f,c
 10035  00346E  C01E  FFDF         	movff	readInputCoil@crc,indf2
 10036  003472                     
 10037                           ;modbus.c: 393: LATBbits.LATB7 = 1;
 10038  003472  8E8A               	bsf	138,7,c	;volatile
 10039  003474                     
 10040                           ;modbus.c: 394: for(i=0;i!=(k+3);i++){
 10041  003474  0E00               	movlw	0
 10042  003476  6E26               	movwf	readInputCoil@i^0,c
 10043  003478  EF4E  F01A         	goto	l7115
 10044  00347C                     l447:
 10045  00347C  A2AC               	btfss	172,1,c	;volatile
 10046  00347E  EF43  F01A         	goto	u7591
 10047  003482  EF45  F01A         	goto	u7590
 10048  003486                     u7591:
 10049  003486  EF3E  F01A         	goto	l447
 10050  00348A                     u7590:
 10051  00348A                     
 10052                           ;modbus.c: 396: TXREG = response[i];
 10053  00348A  0E00               	movlw	low _response
 10054  00348C  2426               	addwf	readInputCoil@i^0,w,c
 10055  00348E  6ED9               	movwf	fsr2l,c
 10056  003490  6ADA               	clrf	fsr2h,c
 10057  003492  0E01               	movlw	high _response
 10058  003494  22DA               	addwfc	fsr2h,f,c
 10059  003496  50DF               	movf	indf2,w,c
 10060  003498  6EAD               	movwf	173,c	;volatile
 10061  00349A  2A26               	incf	readInputCoil@i^0,f,c
 10062  00349C                     l7115:
 10063  00349C  5026               	movf	readInputCoil@i^0,w,c
 10064  00349E  6E18               	movwf	??_readInputCoil^0,c
 10065  0034A0  6A19               	clrf	(??_readInputCoil+1)^0,c
 10066  0034A2  5028               	movf	readInputCoil@k^0,w,c
 10067  0034A4  6E1A               	movwf	(??_readInputCoil+2)^0,c
 10068  0034A6  6A1B               	clrf	(??_readInputCoil+3)^0,c
 10069  0034A8  0E03               	movlw	3
 10070  0034AA  261A               	addwf	(??_readInputCoil+2)^0,f,c
 10071  0034AC  0E00               	movlw	0
 10072  0034AE  221B               	addwfc	(??_readInputCoil+3)^0,f,c
 10073  0034B0  5018               	movf	??_readInputCoil^0,w,c
 10074  0034B2  181A               	xorwf	(??_readInputCoil+2)^0,w,c
 10075  0034B4  E107               	bnz	u7601
 10076  0034B6  5019               	movf	(??_readInputCoil+1)^0,w,c
 10077  0034B8  181B               	xorwf	(??_readInputCoil+3)^0,w,c
 10078  0034BA  A4D8               	btfss	status,2,c
 10079  0034BC  EF62  F01A         	goto	u7601
 10080  0034C0  EF64  F01A         	goto	u7600
 10081  0034C4                     u7601:
 10082  0034C4  EF3E  F01A         	goto	l447
 10083  0034C8                     u7600:
 10084  0034C8                     
 10085                           ;modbus.c: 397: };modbus.c: 398: LATBbits.LATB7 = 0;
 10086  0034C8  9E8A               	bcf	138,7,c	;volatile
 10087  0034CA                     
 10088                           ;modbus.c: 399: clearResponse();
 10089  0034CA  EC0B  F02B         	call	_clearResponse	;wreg free
 10090  0034CE  0012               	return		;funcret
 10091  0034D0                     __end_of_readInputCoil:
 10092                           	callstack 0
 10093                           
 10094 ;; *************** function _readCoil *****************
 10095 ;; Defined at:
 10096 ;;		line 242 in file "modbus.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;		None
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;  rc_numCoils     2   33[COMRAM] unsigned int 
 10101 ;;  crc             2   29[COMRAM] unsigned int 
 10102 ;;  rc_Address      2   27[COMRAM] unsigned int 
 10103 ;;  k               1   39[COMRAM] unsigned char 
 10104 ;;  j               1   38[COMRAM] unsigned char 
 10105 ;;  i               1   37[COMRAM] unsigned char 
 10106 ;;  lsb             1   36[COMRAM] unsigned char 
 10107 ;;  l               1   35[COMRAM] unsigned char 
 10108 ;;  howManyBytes    1   32[COMRAM] unsigned char 
 10109 ;;  remainder       1   31[COMRAM] unsigned char 
 10110 ;; Return value:  Size  Location     Type
 10111 ;;                  1    wreg      void 
 10112 ;; Registers used:
 10113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10114 ;; Tracked objects:
 10115 ;;		On entry : 0/0
 10116 ;;		On exit  : 0/0
 10117 ;;		Unchanged: 0/0
 10118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10119 ;;      Params:         0       0       0       0       0       0       0
 10120 ;;      Locals:        13       0       0       0       0       0       0
 10121 ;;      Temps:          4       0       0       0       0       0       0
 10122 ;;      Totals:        17       0       0       0       0       0       0
 10123 ;;Total ram usage:       17 bytes
 10124 ;; Hardware stack levels used:    1
 10125 ;; Hardware stack levels required when called:    5
 10126 ;; This function calls:
 10127 ;;		_clearResponse
 10128 ;;		_generateCRC
 10129 ;; This function is called by:
 10130 ;;		_decodeIt
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           	psect	text27
 10135  0034D0                     __ptext27:
 10136                           	callstack 0
 10137  0034D0                     _readCoil:
 10138                           	callstack 24
 10139  0034D0                     
 10140                           ;modbus.c: 248: unsigned int rc_numCoils = 0;
 10141  0034D0  0E00               	movlw	0
 10142  0034D2  6E23               	movwf	(readCoil@rc_numCoils+1)^0,c
 10143  0034D4  0E00               	movlw	0
 10144  0034D6  6E22               	movwf	readCoil@rc_numCoils^0,c
 10145                           
 10146                           ;modbus.c: 249: unsigned int crc = 0;
 10147  0034D8  0E00               	movlw	0
 10148  0034DA  6E1F               	movwf	(readCoil@crc+1)^0,c
 10149  0034DC  0E00               	movlw	0
 10150  0034DE  6E1E               	movwf	readCoil@crc^0,c
 10151                           
 10152                           ;modbus.c: 251: unsigned char howManyBytes = 0;
 10153  0034E0  0E00               	movlw	0
 10154  0034E2  6E21               	movwf	readCoil@howManyBytes^0,c
 10155                           
 10156                           ;modbus.c: 252: unsigned char remainder = 0;
 10157  0034E4  0E00               	movlw	0
 10158  0034E6  6E20               	movwf	readCoil@remainder^0,c
 10159                           
 10160                           ;modbus.c: 253: unsigned char lsb = 0;
 10161  0034E8  0E00               	movlw	0
 10162  0034EA  6E25               	movwf	readCoil@lsb^0,c
 10163                           
 10164                           ;modbus.c: 254: unsigned char i,j,k,l = 0;
 10165  0034EC  0E00               	movlw	0
 10166  0034EE  6E24               	movwf	readCoil@l^0,c
 10167  0034F0                     
 10168                           ;modbus.c: 257: rc_Address = received[2];
 10169  0034F0  C202  F01C         	movff	_received+2,readCoil@rc_Address	;volatile
 10170  0034F4  6A1D               	clrf	(readCoil@rc_Address+1)^0,c
 10171                           
 10172                           ;modbus.c: 258: rc_Address <<=8;
 10173  0034F6  501C               	movf	readCoil@rc_Address^0,w,c
 10174  0034F8  6E1D               	movwf	(readCoil@rc_Address+1)^0,c
 10175  0034FA  6A1C               	clrf	readCoil@rc_Address^0,c
 10176  0034FC                     
 10177                           ;modbus.c: 259: rc_Address |= received[3];
 10178  0034FC  0102               	movlb	2	; () banked
 10179  0034FE  5103               	movf	(_received+3)& (0+255),w,b	;volatile
 10180  003500  121C               	iorwf	readCoil@rc_Address^0,f,c
 10181  003502                     
 10182                           ; BSR set to: 2
 10183                           ;modbus.c: 262: rc_numCoils = received[4];
 10184  003502  C204  F022         	movff	_received+4,readCoil@rc_numCoils	;volatile
 10185  003506  6A23               	clrf	(readCoil@rc_numCoils+1)^0,c
 10186  003508                     
 10187                           ; BSR set to: 2
 10188                           ;modbus.c: 263: rc_numCoils <<= 8;
 10189  003508  5022               	movf	readCoil@rc_numCoils^0,w,c
 10190  00350A  6E23               	movwf	(readCoil@rc_numCoils+1)^0,c
 10191  00350C  6A22               	clrf	readCoil@rc_numCoils^0,c
 10192                           
 10193                           ;modbus.c: 264: rc_numCoils |= received[5];
 10194  00350E  5105               	movf	(_received+5)& (0+255),w,b	;volatile
 10195  003510  1222               	iorwf	readCoil@rc_numCoils^0,f,c
 10196  003512                     
 10197                           ; BSR set to: 2
 10198                           ;modbus.c: 266: response[0] = 1;
 10199  003512  0E01               	movlw	1
 10200  003514  0101               	movlb	1	; () banked
 10201  003516  6F00               	movwf	_response& (0+255),b	;volatile
 10202  003518                     
 10203                           ; BSR set to: 1
 10204                           ;modbus.c: 267: response[1] = 0x01;
 10205  003518  0E01               	movlw	1
 10206  00351A  6F01               	movwf	(_response+1)& (0+255),b	;volatile
 10207                           
 10208                           ;modbus.c: 269: howManyBytes = rc_numCoils/8;
 10209  00351C  C022  F018         	movff	readCoil@rc_numCoils,??_readCoil
 10210  003520  C023  F019         	movff	readCoil@rc_numCoils+1,??_readCoil+1
 10211  003524  90D8               	bcf	status,0,c
 10212  003526  3219               	rrcf	(??_readCoil+1)^0,f,c
 10213  003528  3218               	rrcf	??_readCoil^0,f,c
 10214  00352A  90D8               	bcf	status,0,c
 10215  00352C  3219               	rrcf	(??_readCoil+1)^0,f,c
 10216  00352E  3218               	rrcf	??_readCoil^0,f,c
 10217  003530  90D8               	bcf	status,0,c
 10218  003532  3219               	rrcf	(??_readCoil+1)^0,f,c
 10219  003534  3218               	rrcf	??_readCoil^0,f,c
 10220  003536  5018               	movf	??_readCoil^0,w,c
 10221  003538  6E21               	movwf	readCoil@howManyBytes^0,c
 10222                           
 10223                           ;modbus.c: 270: remainder = rc_numCoils % 8;
 10224  00353A  5022               	movf	readCoil@rc_numCoils^0,w,c
 10225  00353C  0B07               	andlw	7
 10226  00353E  6E20               	movwf	readCoil@remainder^0,c
 10227  003540                     
 10228                           ; BSR set to: 1
 10229                           ;modbus.c: 272: if(remainder){
 10230  003540  5020               	movf	readCoil@remainder^0,w,c
 10231  003542  B4D8               	btfsc	status,2,c
 10232  003544  EFA6  F01A         	goto	u7391
 10233  003548  EFA8  F01A         	goto	u7390
 10234  00354C                     u7391:
 10235  00354C  EFA9  F01A         	goto	l6953
 10236  003550                     u7390:
 10237  003550                     
 10238                           ; BSR set to: 1
 10239                           ;modbus.c: 273: howManyBytes += 1;
 10240  003550  2A21               	incf	readCoil@howManyBytes^0,f,c
 10241  003552                     l6953:
 10242                           
 10243                           ; BSR set to: 1
 10244                           ;modbus.c: 274: };modbus.c: 275: response[2] = howManyBytes;
 10245  003552  C021  F102         	movff	readCoil@howManyBytes,_response+2	;volatile
 10246  003556                     
 10247                           ; BSR set to: 1
 10248                           ;modbus.c: 277: l = rc_Address;
 10249  003556  C01C  F024         	movff	readCoil@rc_Address,readCoil@l
 10250  00355A                     
 10251                           ; BSR set to: 1
 10252                           ;modbus.c: 278: k = 3;
 10253  00355A  0E03               	movlw	3
 10254  00355C  6E28               	movwf	readCoil@k^0,c
 10255  00355E                     
 10256                           ; BSR set to: 1
 10257                           ;modbus.c: 280: for(i=howManyBytes; i!=0; i--){
 10258  00355E  C021  F026         	movff	readCoil@howManyBytes,readCoil@i
 10259  003562                     l6961:
 10260  003562  5026               	movf	readCoil@i^0,w,c
 10261  003564  A4D8               	btfss	status,2,c
 10262  003566  EFB7  F01A         	goto	u7401
 10263  00356A  EFB9  F01A         	goto	u7400
 10264  00356E                     u7401:
 10265  00356E  EFBB  F01A         	goto	l6965
 10266  003572                     u7400:
 10267  003572  EF37  F01B         	goto	l7009
 10268  003576                     l6965:
 10269                           
 10270                           ;modbus.c: 281: if(i>1){
 10271  003576  0E01               	movlw	1
 10272  003578  6426               	cpfsgt	readCoil@i^0,c
 10273  00357A  EFC1  F01A         	goto	u7411
 10274  00357E  EFC3  F01A         	goto	u7410
 10275  003582                     u7411:
 10276  003582  EFFB  F01A         	goto	l6989
 10277  003586                     u7410:
 10278  003586                     
 10279                           ;modbus.c: 282: for(j=0;j!=8;j++){
 10280  003586  0E00               	movlw	0
 10281  003588  6E27               	movwf	readCoil@j^0,c
 10282  00358A                     l6973:
 10283                           
 10284                           ;modbus.c: 283: if(coils[l]){
 10285  00358A  0E7D               	movlw	low _coils
 10286  00358C  2424               	addwf	readCoil@l^0,w,c
 10287  00358E  6ED9               	movwf	fsr2l,c
 10288  003590  6ADA               	clrf	fsr2h,c
 10289  003592  0E02               	movlw	high _coils
 10290  003594  22DA               	addwfc	fsr2h,f,c
 10291  003596  50DF               	movf	indf2,w,c
 10292  003598  B4D8               	btfsc	status,2,c
 10293  00359A  EFD1  F01A         	goto	u7421
 10294  00359E  EFD3  F01A         	goto	u7420
 10295  0035A2                     u7421:
 10296  0035A2  EFD7  F01A         	goto	l6977
 10297  0035A6                     u7420:
 10298  0035A6                     
 10299                           ;modbus.c: 284: lsb = 1;
 10300  0035A6  0E01               	movlw	1
 10301  0035A8  6E25               	movwf	readCoil@lsb^0,c
 10302                           
 10303                           ;modbus.c: 285: }
 10304  0035AA  EFD9  F01A         	goto	l6979
 10305  0035AE                     l6977:
 10306                           
 10307                           ;modbus.c: 286: else{;modbus.c: 287: lsb = 0;
 10308  0035AE  0E00               	movlw	0
 10309  0035B0  6E25               	movwf	readCoil@lsb^0,c
 10310  0035B2                     l6979:
 10311                           
 10312                           ;modbus.c: 288: };modbus.c: 289: response[k] ^= (lsb << j);
 10313  0035B2  C027  F018         	movff	readCoil@j,??_readCoil
 10314  0035B6  C025  F019         	movff	readCoil@lsb,??_readCoil+1
 10315  0035BA  2A18               	incf	??_readCoil^0,f,c
 10316  0035BC  EFE2  F01A         	goto	u7434
 10317  0035C0                     u7435:
 10318  0035C0  90D8               	bcf	status,0,c
 10319  0035C2  3619               	rlcf	(??_readCoil+1)^0,f,c
 10320  0035C4                     u7434:
 10321  0035C4  2E18               	decfsz	??_readCoil^0,f,c
 10322  0035C6  EFE0  F01A         	goto	u7435
 10323  0035CA  0E00               	movlw	low _response
 10324  0035CC  2428               	addwf	readCoil@k^0,w,c
 10325  0035CE  6ED9               	movwf	fsr2l,c
 10326  0035D0  6ADA               	clrf	fsr2h,c
 10327  0035D2  0E01               	movlw	high _response
 10328  0035D4  22DA               	addwfc	fsr2h,f,c
 10329  0035D6  5019               	movf	(??_readCoil+1)^0,w,c
 10330  0035D8  1ADF               	xorwf	indf2,f,c
 10331  0035DA                     
 10332                           ;modbus.c: 290: l++;
 10333  0035DA  2A24               	incf	readCoil@l^0,f,c
 10334  0035DC  2A27               	incf	readCoil@j^0,f,c
 10335  0035DE  0E08               	movlw	8
 10336  0035E0  1827               	xorwf	readCoil@j^0,w,c
 10337  0035E2  A4D8               	btfss	status,2,c
 10338  0035E4  EFF6  F01A         	goto	u7441
 10339  0035E8  EFF8  F01A         	goto	u7440
 10340  0035EC                     u7441:
 10341  0035EC  EFC5  F01A         	goto	l6973
 10342  0035F0                     u7440:
 10343  0035F0                     l6987:
 10344                           
 10345                           ;modbus.c: 291: };modbus.c: 292: k++;
 10346  0035F0  2A28               	incf	readCoil@k^0,f,c
 10347                           
 10348                           ;modbus.c: 293: }
 10349  0035F2  EF34  F01B         	goto	l416
 10350  0035F6                     l6989:
 10351                           
 10352                           ;modbus.c: 294: else{;modbus.c: 295: for(j=0;j!=remainder;j++){
 10353  0035F6  0E00               	movlw	0
 10354  0035F8  6E27               	movwf	readCoil@j^0,c
 10355  0035FA  EF29  F01B         	goto	l7003
 10356  0035FE                     l6991:
 10357                           
 10358                           ;modbus.c: 296: if(coils[l]){
 10359  0035FE  0E7D               	movlw	low _coils
 10360  003600  2424               	addwf	readCoil@l^0,w,c
 10361  003602  6ED9               	movwf	fsr2l,c
 10362  003604  6ADA               	clrf	fsr2h,c
 10363  003606  0E02               	movlw	high _coils
 10364  003608  22DA               	addwfc	fsr2h,f,c
 10365  00360A  50DF               	movf	indf2,w,c
 10366  00360C  B4D8               	btfsc	status,2,c
 10367  00360E  EF0B  F01B         	goto	u7451
 10368  003612  EF0D  F01B         	goto	u7450
 10369  003616                     u7451:
 10370  003616  EF11  F01B         	goto	l6995
 10371  00361A                     u7450:
 10372  00361A                     
 10373                           ;modbus.c: 297: lsb = 1;
 10374  00361A  0E01               	movlw	1
 10375  00361C  6E25               	movwf	readCoil@lsb^0,c
 10376                           
 10377                           ;modbus.c: 298: }
 10378  00361E  EF13  F01B         	goto	l6997
 10379  003622                     l6995:
 10380                           
 10381                           ;modbus.c: 299: else{;modbus.c: 300: lsb = 0;
 10382  003622  0E00               	movlw	0
 10383  003624  6E25               	movwf	readCoil@lsb^0,c
 10384  003626                     l6997:
 10385                           
 10386                           ;modbus.c: 301: };modbus.c: 302: response[k] ^= (lsb << j);
 10387  003626  C027  F018         	movff	readCoil@j,??_readCoil
 10388  00362A  C025  F019         	movff	readCoil@lsb,??_readCoil+1
 10389  00362E  2A18               	incf	??_readCoil^0,f,c
 10390  003630  EF1C  F01B         	goto	u7464
 10391  003634                     u7465:
 10392  003634  90D8               	bcf	status,0,c
 10393  003636  3619               	rlcf	(??_readCoil+1)^0,f,c
 10394  003638                     u7464:
 10395  003638  2E18               	decfsz	??_readCoil^0,f,c
 10396  00363A  EF1A  F01B         	goto	u7465
 10397  00363E  0E00               	movlw	low _response
 10398  003640  2428               	addwf	readCoil@k^0,w,c
 10399  003642  6ED9               	movwf	fsr2l,c
 10400  003644  6ADA               	clrf	fsr2h,c
 10401  003646  0E01               	movlw	high _response
 10402  003648  22DA               	addwfc	fsr2h,f,c
 10403  00364A  5019               	movf	(??_readCoil+1)^0,w,c
 10404  00364C  1ADF               	xorwf	indf2,f,c
 10405  00364E                     
 10406                           ;modbus.c: 303: l++;
 10407  00364E  2A24               	incf	readCoil@l^0,f,c
 10408  003650  2A27               	incf	readCoil@j^0,f,c
 10409  003652                     l7003:
 10410  003652  5020               	movf	readCoil@remainder^0,w,c
 10411  003654  1827               	xorwf	readCoil@j^0,w,c
 10412  003656  A4D8               	btfss	status,2,c
 10413  003658  EF30  F01B         	goto	u7471
 10414  00365C  EF32  F01B         	goto	u7470
 10415  003660                     u7471:
 10416  003660  EFFF  F01A         	goto	l6991
 10417  003664                     u7470:
 10418  003664  EFF8  F01A         	goto	l6987
 10419  003668                     l416:
 10420  003668  0626               	decf	readCoil@i^0,f,c
 10421  00366A  EFB1  F01A         	goto	l6961
 10422  00366E                     l7009:
 10423                           
 10424                           ;modbus.c: 306: };modbus.c: 307: };modbus.c: 308: crc = generateCRC(k+2);
 10425  00366E  5028               	movf	readCoil@k^0,w,c
 10426  003670  0F02               	addlw	2
 10427  003672  EC37  F026         	call	_generateCRC
 10428  003676  C006  F01E         	movff	?_generateCRC,readCoil@crc
 10429  00367A  C007  F01F         	movff	?_generateCRC+1,readCoil@crc+1
 10430  00367E                     
 10431                           ;modbus.c: 310: response[k] = crc >> 8;
 10432  00367E  0E00               	movlw	low _response
 10433  003680  2428               	addwf	readCoil@k^0,w,c
 10434  003682  6ED9               	movwf	fsr2l,c
 10435  003684  6ADA               	clrf	fsr2h,c
 10436  003686  0E01               	movlw	high _response
 10437  003688  22DA               	addwfc	fsr2h,f,c
 10438  00368A  501F               	movf	(readCoil@crc+1)^0,w,c
 10439  00368C  6EDF               	movwf	indf2,c
 10440  00368E                     
 10441                           ;modbus.c: 311: response[k+1] = crc;
 10442  00368E  0E01               	movlw	low (_response+1)
 10443  003690  2428               	addwf	readCoil@k^0,w,c
 10444  003692  6ED9               	movwf	fsr2l,c
 10445  003694  6ADA               	clrf	fsr2h,c
 10446  003696  0E01               	movlw	high (_response+1)
 10447  003698  22DA               	addwfc	fsr2h,f,c
 10448  00369A  C01E  FFDF         	movff	readCoil@crc,indf2
 10449  00369E                     
 10450                           ;modbus.c: 313: LATBbits.LATB7 = 1;
 10451  00369E  8E8A               	bsf	138,7,c	;volatile
 10452  0036A0                     
 10453                           ;modbus.c: 314: for(i=0;i!=(k+3);i++){
 10454  0036A0  0E00               	movlw	0
 10455  0036A2  6E26               	movwf	readCoil@i^0,c
 10456  0036A4  EF64  F01B         	goto	l7023
 10457  0036A8                     l424:
 10458  0036A8  A2AC               	btfss	172,1,c	;volatile
 10459  0036AA  EF59  F01B         	goto	u7481
 10460  0036AE  EF5B  F01B         	goto	u7480
 10461  0036B2                     u7481:
 10462  0036B2  EF54  F01B         	goto	l424
 10463  0036B6                     u7480:
 10464  0036B6                     
 10465                           ;modbus.c: 316: TXREG = response[i];
 10466  0036B6  0E00               	movlw	low _response
 10467  0036B8  2426               	addwf	readCoil@i^0,w,c
 10468  0036BA  6ED9               	movwf	fsr2l,c
 10469  0036BC  6ADA               	clrf	fsr2h,c
 10470  0036BE  0E01               	movlw	high _response
 10471  0036C0  22DA               	addwfc	fsr2h,f,c
 10472  0036C2  50DF               	movf	indf2,w,c
 10473  0036C4  6EAD               	movwf	173,c	;volatile
 10474  0036C6  2A26               	incf	readCoil@i^0,f,c
 10475  0036C8                     l7023:
 10476  0036C8  5026               	movf	readCoil@i^0,w,c
 10477  0036CA  6E18               	movwf	??_readCoil^0,c
 10478  0036CC  6A19               	clrf	(??_readCoil+1)^0,c
 10479  0036CE  5028               	movf	readCoil@k^0,w,c
 10480  0036D0  6E1A               	movwf	(??_readCoil+2)^0,c
 10481  0036D2  6A1B               	clrf	(??_readCoil+3)^0,c
 10482  0036D4  0E03               	movlw	3
 10483  0036D6  261A               	addwf	(??_readCoil+2)^0,f,c
 10484  0036D8  0E00               	movlw	0
 10485  0036DA  221B               	addwfc	(??_readCoil+3)^0,f,c
 10486  0036DC  5018               	movf	??_readCoil^0,w,c
 10487  0036DE  181A               	xorwf	(??_readCoil+2)^0,w,c
 10488  0036E0  E107               	bnz	u7491
 10489  0036E2  5019               	movf	(??_readCoil+1)^0,w,c
 10490  0036E4  181B               	xorwf	(??_readCoil+3)^0,w,c
 10491  0036E6  A4D8               	btfss	status,2,c
 10492  0036E8  EF78  F01B         	goto	u7491
 10493  0036EC  EF7A  F01B         	goto	u7490
 10494  0036F0                     u7491:
 10495  0036F0  EF54  F01B         	goto	l424
 10496  0036F4                     u7490:
 10497  0036F4                     
 10498                           ;modbus.c: 317: };modbus.c: 318: LATBbits.LATB7 = 0;
 10499  0036F4  9E8A               	bcf	138,7,c	;volatile
 10500  0036F6                     
 10501                           ;modbus.c: 319: clearResponse();
 10502  0036F6  EC0B  F02B         	call	_clearResponse	;wreg free
 10503  0036FA  0012               	return		;funcret
 10504  0036FC                     __end_of_readCoil:
 10505                           	callstack 0
 10506                           
 10507 ;; *************** function _generateCRC *****************
 10508 ;; Defined at:
 10509 ;;		line 463 in file "modbus.c"
 10510 ;; Parameters:    Size  Location     Type
 10511 ;;  messageLengt    1    wreg     unsigned char 
 10512 ;; Auto vars:     Size  Location     Type
 10513 ;;  messageLengt    1   12[COMRAM] unsigned char 
 10514 ;;  crc             2   21[COMRAM] unsigned int 
 10515 ;;  j               2   19[COMRAM] int 
 10516 ;;  i               2   17[COMRAM] int 
 10517 ;;  crcHigh         2   15[COMRAM] unsigned int 
 10518 ;;  crcLow          2   13[COMRAM] unsigned int 
 10519 ;; Return value:  Size  Location     Type
 10520 ;;                  2    5[COMRAM] unsigned int 
 10521 ;; Registers used:
 10522 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10523 ;; Tracked objects:
 10524 ;;		On entry : 0/0
 10525 ;;		On exit  : 0/0
 10526 ;;		Unchanged: 0/0
 10527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10528 ;;      Params:         2       0       0       0       0       0       0
 10529 ;;      Locals:        11       0       0       0       0       0       0
 10530 ;;      Temps:          5       0       0       0       0       0       0
 10531 ;;      Totals:        18       0       0       0       0       0       0
 10532 ;;Total ram usage:       18 bytes
 10533 ;; Hardware stack levels used:    1
 10534 ;; Hardware stack levels required when called:    2
 10535 ;; This function calls:
 10536 ;;		Nothing
 10537 ;; This function is called by:
 10538 ;;		_readReg
 10539 ;;		_readInputReg
 10540 ;;		_writeReg
 10541 ;;		_readCoil
 10542 ;;		_readInputCoil
 10543 ;;		_writeCoil
 10544 ;; This function uses a non-reentrant model
 10545 ;;
 10546                           
 10547                           	psect	text28
 10548  004C6E                     __ptext28:
 10549                           	callstack 0
 10550  004C6E                     _generateCRC:
 10551                           	callstack 26
 10552                           
 10553                           ;incstack = 0
 10554                           ;generateCRC@messageLength stored from wreg
 10555  004C6E  6E0D               	movwf	generateCRC@messageLength^0,c
 10556  004C70                     
 10557                           ;modbus.c: 465: unsigned int crc = 0xFFFF;
 10558  004C70  6816               	setf	generateCRC@crc^0,c
 10559  004C72  6817               	setf	(generateCRC@crc+1)^0,c
 10560  004C74                     
 10561                           ;modbus.c: 467: unsigned int crcLow = 0;
 10562  004C74  0E00               	movlw	0
 10563  004C76  6E0F               	movwf	(generateCRC@crcLow+1)^0,c
 10564  004C78  0E00               	movlw	0
 10565  004C7A  6E0E               	movwf	generateCRC@crcLow^0,c
 10566                           
 10567                           ;modbus.c: 468: int i,j = 0;
 10568  004C7C  0E00               	movlw	0
 10569  004C7E  6E15               	movwf	(generateCRC@j+1)^0,c
 10570  004C80  0E00               	movlw	0
 10571  004C82  6E14               	movwf	generateCRC@j^0,c
 10572                           
 10573                           ;modbus.c: 470: for(i=0;i<messageLength-2;i++){
 10574  004C84  0E00               	movlw	0
 10575  004C86  6E13               	movwf	(generateCRC@i+1)^0,c
 10576  004C88  0E00               	movlw	0
 10577  004C8A  6E12               	movwf	generateCRC@i^0,c
 10578  004C8C  EF77  F026         	goto	l6387
 10579  004C90                     l6369:
 10580                           
 10581                           ;modbus.c: 471: crc ^= response[i];
 10582  004C90  0E00               	movlw	low _response
 10583  004C92  2412               	addwf	generateCRC@i^0,w,c
 10584  004C94  6ED9               	movwf	fsr2l,c
 10585  004C96  0E01               	movlw	high _response
 10586  004C98  2013               	addwfc	(generateCRC@i+1)^0,w,c
 10587  004C9A  6EDA               	movwf	fsr2h,c
 10588  004C9C  50DF               	movf	indf2,w,c
 10589  004C9E  6E08               	movwf	??_generateCRC^0,c
 10590  004CA0  5008               	movf	??_generateCRC^0,w,c
 10591  004CA2  1A16               	xorwf	generateCRC@crc^0,f,c
 10592  004CA4                     
 10593                           ;modbus.c: 472: for(j=8; j!=0; j--){
 10594  004CA4  0E00               	movlw	0
 10595  004CA6  6E15               	movwf	(generateCRC@j+1)^0,c
 10596  004CA8  0E08               	movlw	8
 10597  004CAA  6E14               	movwf	generateCRC@j^0,c
 10598  004CAC                     l466:
 10599                           
 10600                           ;modbus.c: 473: if((crc & 0x0001) != 0){
 10601  004CAC  A016               	btfss	generateCRC@crc^0,0,c
 10602  004CAE  EF5B  F026         	goto	u6491
 10603  004CB2  EF5D  F026         	goto	u6490
 10604  004CB6                     u6491:
 10605  004CB6  EF66  F026         	goto	l6381
 10606  004CBA                     u6490:
 10607  004CBA                     
 10608                           ;modbus.c: 474: crc >>= 1;
 10609  004CBA  90D8               	bcf	status,0,c
 10610  004CBC  3217               	rrcf	(generateCRC@crc+1)^0,f,c
 10611  004CBE  3216               	rrcf	generateCRC@crc^0,f,c
 10612  004CC0                     
 10613                           ;modbus.c: 475: crc ^= 0xA001;
 10614  004CC0  0E01               	movlw	1
 10615  004CC2  1A16               	xorwf	generateCRC@crc^0,f,c
 10616  004CC4  0EA0               	movlw	160
 10617  004CC6  1A17               	xorwf	(generateCRC@crc+1)^0,f,c
 10618                           
 10619                           ;modbus.c: 476: }
 10620  004CC8  EF69  F026         	goto	l469
 10621  004CCC                     l6381:
 10622                           
 10623                           ;modbus.c: 477: else{;modbus.c: 478: crc >>= 1;
 10624  004CCC  90D8               	bcf	status,0,c
 10625  004CCE  3217               	rrcf	(generateCRC@crc+1)^0,f,c
 10626  004CD0  3216               	rrcf	generateCRC@crc^0,f,c
 10627  004CD2                     l469:
 10628  004CD2  0614               	decf	generateCRC@j^0,f,c
 10629  004CD4  A0D8               	btfss	status,0,c
 10630  004CD6  0615               	decf	(generateCRC@j+1)^0,f,c
 10631  004CD8  5014               	movf	generateCRC@j^0,w,c
 10632  004CDA  1015               	iorwf	(generateCRC@j+1)^0,w,c
 10633  004CDC  A4D8               	btfss	status,2,c
 10634  004CDE  EF73  F026         	goto	u6501
 10635  004CE2  EF75  F026         	goto	u6500
 10636  004CE6                     u6501:
 10637  004CE6  EF56  F026         	goto	l466
 10638  004CEA                     u6500:
 10639  004CEA  4A12               	infsnz	generateCRC@i^0,f,c
 10640  004CEC  2A13               	incf	(generateCRC@i+1)^0,f,c
 10641  004CEE                     l6387:
 10642  004CEE  0EFE               	movlw	254
 10643  004CF0  6E08               	movwf	??_generateCRC^0,c
 10644  004CF2  0EFF               	movlw	255
 10645  004CF4  6E09               	movwf	(??_generateCRC+1)^0,c
 10646  004CF6  500D               	movf	generateCRC@messageLength^0,w,c
 10647  004CF8  6E0A               	movwf	(??_generateCRC+2)^0,c
 10648  004CFA  6A0B               	clrf	(??_generateCRC+3)^0,c
 10649  004CFC  5008               	movf	??_generateCRC^0,w,c
 10650  004CFE  260A               	addwf	(??_generateCRC+2)^0,f,c
 10651  004D00  5009               	movf	(??_generateCRC+1)^0,w,c
 10652  004D02  220B               	addwfc	(??_generateCRC+3)^0,f,c
 10653  004D04  500A               	movf	(??_generateCRC+2)^0,w,c
 10654  004D06  5C12               	subwf	generateCRC@i^0,w,c
 10655  004D08  5013               	movf	(generateCRC@i+1)^0,w,c
 10656  004D0A  0A80               	xorlw	128
 10657  004D0C  6E0C               	movwf	(??_generateCRC+4)^0,c
 10658  004D0E  500B               	movf	(??_generateCRC+3)^0,w,c
 10659  004D10  0A80               	xorlw	128
 10660  004D12  580C               	subwfb	(??_generateCRC+4)^0,w,c
 10661  004D14  A0D8               	btfss	status,0,c
 10662  004D16  EF8F  F026         	goto	u6511
 10663  004D1A  EF91  F026         	goto	u6510
 10664  004D1E                     u6511:
 10665  004D1E  EF48  F026         	goto	l6369
 10666  004D22                     u6510:
 10667  004D22                     
 10668                           ;modbus.c: 479: };modbus.c: 480: };modbus.c: 481: };modbus.c: 483: crcHigh = (crc & 0x00
      +                          FF) <<8;
 10669  004D22  5016               	movf	generateCRC@crc^0,w,c
 10670  004D24  6E09               	movwf	(??_generateCRC+1)^0,c
 10671  004D26  6A08               	clrf	??_generateCRC^0,c
 10672  004D28  C008  F010         	movff	??_generateCRC,generateCRC@crcHigh
 10673  004D2C  C009  F011         	movff	??_generateCRC+1,generateCRC@crcHigh+1
 10674                           
 10675                           ;modbus.c: 484: crcLow = (crc & 0xFF00) >>8;
 10676  004D30  C016  F008         	movff	generateCRC@crc,??_generateCRC
 10677  004D34  C017  F009         	movff	generateCRC@crc+1,??_generateCRC+1
 10678  004D38  C009  F008         	movff	??_generateCRC+1,??_generateCRC
 10679  004D3C  6A09               	clrf	(??_generateCRC+1)^0,c
 10680  004D3E  5008               	movf	??_generateCRC^0,w,c
 10681  004D40  6E0E               	movwf	generateCRC@crcLow^0,c
 10682  004D42  6A0F               	clrf	(generateCRC@crcLow+1)^0,c
 10683  004D44                     
 10684                           ;modbus.c: 485: crcHigh |= crcLow;
 10685  004D44  500E               	movf	generateCRC@crcLow^0,w,c
 10686  004D46  1210               	iorwf	generateCRC@crcHigh^0,f,c
 10687  004D48  500F               	movf	(generateCRC@crcLow+1)^0,w,c
 10688  004D4A  1211               	iorwf	(generateCRC@crcHigh+1)^0,f,c
 10689  004D4C                     
 10690                           ;modbus.c: 486: crc = crcHigh;
 10691  004D4C  C010  F016         	movff	generateCRC@crcHigh,generateCRC@crc
 10692  004D50  C011  F017         	movff	generateCRC@crcHigh+1,generateCRC@crc+1
 10693  004D54                     
 10694                           ;modbus.c: 487: return crc;
 10695  004D54  C016  F006         	movff	generateCRC@crc,?_generateCRC
 10696  004D58  C017  F007         	movff	generateCRC@crc+1,?_generateCRC+1
 10697  004D5C  0012               	return		;funcret
 10698  004D5E                     __end_of_generateCRC:
 10699                           	callstack 0
 10700                           
 10701 ;; *************** function _clearResponse *****************
 10702 ;; Defined at:
 10703 ;;		line 37 in file "modbus.c"
 10704 ;; Parameters:    Size  Location     Type
 10705 ;;		None
 10706 ;; Auto vars:     Size  Location     Type
 10707 ;;  i               1   10[COMRAM] unsigned char 
 10708 ;; Return value:  Size  Location     Type
 10709 ;;                  1    wreg      void 
 10710 ;; Registers used:
 10711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10712 ;; Tracked objects:
 10713 ;;		On entry : 0/0
 10714 ;;		On exit  : 0/0
 10715 ;;		Unchanged: 0/0
 10716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10717 ;;      Params:         0       0       0       0       0       0       0
 10718 ;;      Locals:         1       0       0       0       0       0       0
 10719 ;;      Temps:          0       0       0       0       0       0       0
 10720 ;;      Totals:         1       0       0       0       0       0       0
 10721 ;;Total ram usage:        1 bytes
 10722 ;; Hardware stack levels used:    1
 10723 ;; Hardware stack levels required when called:    4
 10724 ;; This function calls:
 10725 ;;		_ClsUSART
 10726 ;;		_OpnUSART
 10727 ;; This function is called by:
 10728 ;;		_readReg
 10729 ;;		_readInputReg
 10730 ;;		_writeReg
 10731 ;;		_readCoil
 10732 ;;		_readInputCoil
 10733 ;;		_writeCoil
 10734 ;; This function uses a non-reentrant model
 10735 ;;
 10736                           
 10737                           	psect	text29
 10738  005616                     __ptext29:
 10739                           	callstack 0
 10740  005616                     _clearResponse:
 10741                           	callstack 24
 10742  005616                     
 10743                           ;modbus.c: 39: unsigned char i;;modbus.c: 40: for(i=0;i<125;i++){
 10744  005616  0E00               	movlw	0
 10745  005618  6E0B               	movwf	clearResponse@i^0,c
 10746  00561A                     l6357:
 10747                           
 10748                           ;modbus.c: 41: response[i] = 0;
 10749  00561A  0E00               	movlw	low _response
 10750  00561C  240B               	addwf	clearResponse@i^0,w,c
 10751  00561E  6ED9               	movwf	fsr2l,c
 10752  005620  6ADA               	clrf	fsr2h,c
 10753  005622  0E01               	movlw	high _response
 10754  005624  22DA               	addwfc	fsr2h,f,c
 10755  005626  0E00               	movlw	0
 10756  005628  6EDF               	movwf	indf2,c
 10757  00562A  2A0B               	incf	clearResponse@i^0,f,c
 10758  00562C  0E7C               	movlw	124
 10759  00562E  640B               	cpfsgt	clearResponse@i^0,c
 10760  005630  EF1C  F02B         	goto	u6481
 10761  005634  EF1E  F02B         	goto	u6480
 10762  005638                     u6481:
 10763  005638  EF0D  F02B         	goto	l6357
 10764  00563C                     u6480:
 10765  00563C                     
 10766                           ;modbus.c: 42: };modbus.c: 43: ClsUSART();
 10767  00563C  EC58  F02B         	call	_ClsUSART	;wreg free
 10768                           
 10769                           ;modbus.c: 44: OpnUSART();
 10770  005640  EC15  F02A         	call	_OpnUSART	;wreg free
 10771  005644  0012               	return		;funcret
 10772  005646                     __end_of_clearResponse:
 10773                           	callstack 0
 10774                           
 10775 ;; *************** function _OpnUSART *****************
 10776 ;; Defined at:
 10777 ;;		line 23 in file "system.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;		None
 10780 ;; Auto vars:     Size  Location     Type
 10781 ;;  spbrg           4    6[COMRAM] unsigned long 
 10782 ;; Return value:  Size  Location     Type
 10783 ;;                  1    wreg      void 
 10784 ;; Registers used:
 10785 ;;		wreg, status,2, status,0, cstack
 10786 ;; Tracked objects:
 10787 ;;		On entry : 0/0
 10788 ;;		On exit  : 0/0
 10789 ;;		Unchanged: 0/0
 10790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10791 ;;      Params:         0       0       0       0       0       0       0
 10792 ;;      Locals:         4       0       0       0       0       0       0
 10793 ;;      Temps:          1       0       0       0       0       0       0
 10794 ;;      Totals:         5       0       0       0       0       0       0
 10795 ;;Total ram usage:        5 bytes
 10796 ;; Hardware stack levels used:    1
 10797 ;; Hardware stack levels required when called:    3
 10798 ;; This function calls:
 10799 ;;		_ClsUSART
 10800 ;; This function is called by:
 10801 ;;		_main
 10802 ;;		_clearResponse
 10803 ;; This function uses a non-reentrant model
 10804 ;;
 10805                           
 10806                           	psect	text30
 10807  00542A                     __ptext30:
 10808                           	callstack 0
 10809  00542A                     _OpnUSART:
 10810                           	callstack 24
 10811  00542A                     
 10812                           ;system.c: 29: unsigned long spbrg = 0;
 10813  00542A  0E00               	movlw	0
 10814  00542C  6E07               	movwf	OpnUSART@spbrg^0,c
 10815  00542E  0E00               	movlw	0
 10816  005430  6E08               	movwf	(OpnUSART@spbrg+1)^0,c
 10817  005432  0E00               	movlw	0
 10818  005434  6E09               	movwf	(OpnUSART@spbrg+2)^0,c
 10819  005436  0E00               	movlw	0
 10820  005438  6E0A               	movwf	(OpnUSART@spbrg+3)^0,c
 10821                           
 10822                           ;system.c: 31: spbrg = 10000000L/9600;
 10823  00543A  0E11               	movlw	17
 10824  00543C  6E07               	movwf	OpnUSART@spbrg^0,c
 10825  00543E  0E04               	movlw	4
 10826  005440  6E08               	movwf	(OpnUSART@spbrg+1)^0,c
 10827  005442  0E00               	movlw	0
 10828  005444  6E09               	movwf	(OpnUSART@spbrg+2)^0,c
 10829  005446  0E00               	movlw	0
 10830  005448  6E0A               	movwf	(OpnUSART@spbrg+3)^0,c
 10831  00544A                     
 10832                           ;system.c: 32: spbrg /= 64;
 10833  00544A  0E06               	movlw	6
 10834  00544C  6E06               	movwf	??_OpnUSART^0,c
 10835  00544E                     u6475:
 10836  00544E  90D8               	bcf	status,0,c
 10837  005450  320A               	rrcf	(OpnUSART@spbrg+3)^0,f,c
 10838  005452  3209               	rrcf	(OpnUSART@spbrg+2)^0,f,c
 10839  005454  3208               	rrcf	(OpnUSART@spbrg+1)^0,f,c
 10840  005456  3207               	rrcf	OpnUSART@spbrg^0,f,c
 10841  005458  2E06               	decfsz	??_OpnUSART^0,f,c
 10842  00545A  EF27  F02A         	goto	u6475
 10843  00545E                     
 10844                           ;system.c: 33: spbrg -= 1;
 10845  00545E  0607               	decf	OpnUSART@spbrg^0,f,c
 10846  005460  0E00               	movlw	0
 10847  005462  5A08               	subwfb	(OpnUSART@spbrg+1)^0,f,c
 10848  005464  5A09               	subwfb	(OpnUSART@spbrg+2)^0,f,c
 10849  005466  5A0A               	subwfb	(OpnUSART@spbrg+3)^0,f,c
 10850  005468                     
 10851                           ;system.c: 34: ClsUSART();
 10852  005468  EC58  F02B         	call	_ClsUSART	;wreg free
 10853  00546C                     
 10854                           ;system.c: 35: TRISBbits.TRISB7 = 0;
 10855  00546C  9E93               	bcf	147,7,c	;volatile
 10856  00546E                     
 10857                           ;system.c: 36: LATBbits.LATB7 = 0;
 10858  00546E  9E8A               	bcf	138,7,c	;volatile
 10859  005470                     
 10860                           ;system.c: 38: TXSTA = 0;
 10861  005470  0E00               	movlw	0
 10862  005472  6EAC               	movwf	172,c	;volatile
 10863  005474                     
 10864                           ;system.c: 39: RCSTA = 0;
 10865  005474  0E00               	movlw	0
 10866  005476  6EAB               	movwf	171,c	;volatile
 10867  005478                     
 10868                           ;system.c: 41: TRISCbits.TRISC6 = 0;
 10869  005478  9C94               	bcf	148,6,c	;volatile
 10870  00547A                     
 10871                           ;system.c: 42: TRISCbits.TRISC7 = 1;
 10872  00547A  8E94               	bsf	148,7,c	;volatile
 10873  00547C                     
 10874                           ;system.c: 44: TXSTAbits.SYNC = 0;
 10875  00547C  98AC               	bcf	172,4,c	;volatile
 10876  00547E                     
 10877                           ;system.c: 45: TXSTAbits.TX9 = 0;
 10878  00547E  9CAC               	bcf	172,6,c	;volatile
 10879  005480                     
 10880                           ;system.c: 46: TXSTAbits.SENDB = 0;
 10881  005480  96AC               	bcf	172,3,c	;volatile
 10882  005482                     
 10883                           ;system.c: 47: TXSTAbits.BRGH = 0;
 10884  005482  94AC               	bcf	172,2,c	;volatile
 10885  005484                     
 10886                           ;system.c: 49: RCSTAbits.CREN = 1;
 10887  005484  88AB               	bsf	171,4,c	;volatile
 10888  005486                     
 10889                           ;system.c: 50: RCSTAbits.RX9 = 0;
 10890  005486  9CAB               	bcf	171,6,c	;volatile
 10891  005488                     
 10892                           ;system.c: 52: PIE1bits.RCIE = 1;
 10893  005488  8A9D               	bsf	157,5,c	;volatile
 10894  00548A                     
 10895                           ;system.c: 53: PIE1bits.TXIE = 0;
 10896  00548A  989D               	bcf	157,4,c	;volatile
 10897  00548C                     
 10898                           ;system.c: 55: BAUDCONbits.BRG16 = 0;
 10899  00548C  96B8               	bcf	184,3,c	;volatile
 10900  00548E                     
 10901                           ;system.c: 56: SPBRG = spbrg;
 10902  00548E  C007  FFAF         	movff	OpnUSART@spbrg,4015	;volatile
 10903  005492                     
 10904                           ;system.c: 58: TXSTAbits.TXEN = 1;
 10905  005492  8AAC               	bsf	172,5,c	;volatile
 10906  005494                     
 10907                           ;system.c: 59: RCSTAbits.SPEN = 1;
 10908  005494  8EAB               	bsf	171,7,c	;volatile
 10909  005496  0012               	return		;funcret
 10910  005498                     __end_of_OpnUSART:
 10911                           	callstack 0
 10912                           
 10913 ;; *************** function _ClsUSART *****************
 10914 ;; Defined at:
 10915 ;;		line 62 in file "system.c"
 10916 ;; Parameters:    Size  Location     Type
 10917 ;;		None
 10918 ;; Auto vars:     Size  Location     Type
 10919 ;;		None
 10920 ;; Return value:  Size  Location     Type
 10921 ;;                  1    wreg      void 
 10922 ;; Registers used:
 10923 ;;		wreg, status,2, status,0
 10924 ;; Tracked objects:
 10925 ;;		On entry : 0/0
 10926 ;;		On exit  : 0/0
 10927 ;;		Unchanged: 0/0
 10928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10929 ;;      Params:         0       0       0       0       0       0       0
 10930 ;;      Locals:         0       0       0       0       0       0       0
 10931 ;;      Temps:          0       0       0       0       0       0       0
 10932 ;;      Totals:         0       0       0       0       0       0       0
 10933 ;;Total ram usage:        0 bytes
 10934 ;; Hardware stack levels used:    1
 10935 ;; Hardware stack levels required when called:    2
 10936 ;; This function calls:
 10937 ;;		Nothing
 10938 ;; This function is called by:
 10939 ;;		_clearResponse
 10940 ;;		_OpnUSART
 10941 ;; This function uses a non-reentrant model
 10942 ;;
 10943                           
 10944                           	psect	text31
 10945  0056B0                     __ptext31:
 10946                           	callstack 0
 10947  0056B0                     _ClsUSART:
 10948                           	callstack 24
 10949  0056B0                     
 10950                           ;system.c: 65: RCSTA &= 0b01001111;
 10951  0056B0  0E4F               	movlw	79
 10952  0056B2  16AB               	andwf	171,f,c	;volatile
 10953  0056B4                     
 10954                           ;system.c: 66: TXSTAbits.TXEN = 0;
 10955  0056B4  9AAC               	bcf	172,5,c	;volatile
 10956                           
 10957                           ;system.c: 67: PIE1 &= 0b11001111;
 10958  0056B6  0ECF               	movlw	207
 10959  0056B8  169D               	andwf	157,f,c	;volatile
 10960  0056BA  0012               	return		;funcret
 10961  0056BC                     __end_of_ClsUSART:
 10962                           	callstack 0
 10963                           
 10964 ;; *************** function _checkCRC *****************
 10965 ;; Defined at:
 10966 ;;		line 490 in file "modbus.c"
 10967 ;; Parameters:    Size  Location     Type
 10968 ;;		None
 10969 ;; Auto vars:     Size  Location     Type
 10970 ;;  i               2   18[COMRAM] int 
 10971 ;;  crc             2   16[COMRAM] unsigned int 
 10972 ;;  j               2   14[COMRAM] int 
 10973 ;;  crcLow          2   12[COMRAM] unsigned int 
 10974 ;;  crcHigh         2   10[COMRAM] unsigned int 
 10975 ;; Return value:  Size  Location     Type
 10976 ;;                  1    wreg      unsigned char 
 10977 ;; Registers used:
 10978 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10979 ;; Tracked objects:
 10980 ;;		On entry : 0/0
 10981 ;;		On exit  : 0/0
 10982 ;;		Unchanged: 0/0
 10983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10984 ;;      Params:         0       0       0       0       0       0       0
 10985 ;;      Locals:        10       0       0       0       0       0       0
 10986 ;;      Temps:          5       0       0       0       0       0       0
 10987 ;;      Totals:        15       0       0       0       0       0       0
 10988 ;;Total ram usage:       15 bytes
 10989 ;; Hardware stack levels used:    1
 10990 ;; Hardware stack levels required when called:    2
 10991 ;; This function calls:
 10992 ;;		Nothing
 10993 ;; This function is called by:
 10994 ;;		_decodeIt
 10995 ;; This function uses a non-reentrant model
 10996 ;;
 10997                           
 10998                           	psect	text32
 10999  004404                     __ptext32:
 11000                           	callstack 0
 11001  004404                     _checkCRC:
 11002                           	callstack 27
 11003  004404                     
 11004                           ;modbus.c: 492: unsigned int crc = 0xFFFF;
 11005  004404  6811               	setf	checkCRC@crc^0,c
 11006  004406  6812               	setf	(checkCRC@crc+1)^0,c
 11007  004408                     
 11008                           ;modbus.c: 494: unsigned int crcLow = 0;
 11009  004408  0E00               	movlw	0
 11010  00440A  6E0E               	movwf	(checkCRC@crcLow+1)^0,c
 11011  00440C  0E00               	movlw	0
 11012  00440E  6E0D               	movwf	checkCRC@crcLow^0,c
 11013                           
 11014                           ;modbus.c: 495: int i,j = 0;
 11015  004410  0E00               	movlw	0
 11016  004412  6E10               	movwf	(checkCRC@j+1)^0,c
 11017  004414  0E00               	movlw	0
 11018  004416  6E0F               	movwf	checkCRC@j^0,c
 11019                           
 11020                           ;modbus.c: 497: for(i=0;i<messageLength-2;i++){
 11021  004418  0E00               	movlw	0
 11022  00441A  6E14               	movwf	(checkCRC@i+1)^0,c
 11023  00441C  0E00               	movlw	0
 11024  00441E  6E13               	movwf	checkCRC@i^0,c
 11025  004420  EF41  F022         	goto	l6917
 11026  004424                     l6899:
 11027                           
 11028                           ;modbus.c: 498: crc ^= received[i];
 11029  004424  0E00               	movlw	low _received
 11030  004426  2413               	addwf	checkCRC@i^0,w,c
 11031  004428  6ED9               	movwf	fsr2l,c
 11032  00442A  0E02               	movlw	high _received
 11033  00442C  2014               	addwfc	(checkCRC@i+1)^0,w,c
 11034  00442E  6EDA               	movwf	fsr2h,c
 11035  004430  50DF               	movf	indf2,w,c
 11036  004432  6E06               	movwf	??_checkCRC^0,c
 11037  004434  5006               	movf	??_checkCRC^0,w,c
 11038  004436  1A11               	xorwf	checkCRC@crc^0,f,c
 11039  004438                     
 11040                           ;modbus.c: 499: for(j=8; j!=0; j--){
 11041  004438  0E00               	movlw	0
 11042  00443A  6E10               	movwf	(checkCRC@j+1)^0,c
 11043  00443C  0E08               	movlw	8
 11044  00443E  6E0F               	movwf	checkCRC@j^0,c
 11045  004440                     l476:
 11046                           
 11047                           ;modbus.c: 500: if((crc & 0x0001) != 0){
 11048  004440  A011               	btfss	checkCRC@crc^0,0,c
 11049  004442  EF25  F022         	goto	u7341
 11050  004446  EF27  F022         	goto	u7340
 11051  00444A                     u7341:
 11052  00444A  EF30  F022         	goto	l6911
 11053  00444E                     u7340:
 11054  00444E                     
 11055                           ;modbus.c: 501: crc >>= 1;
 11056  00444E  90D8               	bcf	status,0,c
 11057  004450  3212               	rrcf	(checkCRC@crc+1)^0,f,c
 11058  004452  3211               	rrcf	checkCRC@crc^0,f,c
 11059  004454                     
 11060                           ;modbus.c: 502: crc ^= 0xA001;
 11061  004454  0E01               	movlw	1
 11062  004456  1A11               	xorwf	checkCRC@crc^0,f,c
 11063  004458  0EA0               	movlw	160
 11064  00445A  1A12               	xorwf	(checkCRC@crc+1)^0,f,c
 11065                           
 11066                           ;modbus.c: 503: }
 11067  00445C  EF33  F022         	goto	l479
 11068  004460                     l6911:
 11069                           
 11070                           ;modbus.c: 504: else{;modbus.c: 505: crc >>= 1;
 11071  004460  90D8               	bcf	status,0,c
 11072  004462  3212               	rrcf	(checkCRC@crc+1)^0,f,c
 11073  004464  3211               	rrcf	checkCRC@crc^0,f,c
 11074  004466                     l479:
 11075  004466  060F               	decf	checkCRC@j^0,f,c
 11076  004468  A0D8               	btfss	status,0,c
 11077  00446A  0610               	decf	(checkCRC@j+1)^0,f,c
 11078  00446C  500F               	movf	checkCRC@j^0,w,c
 11079  00446E  1010               	iorwf	(checkCRC@j+1)^0,w,c
 11080  004470  A4D8               	btfss	status,2,c
 11081  004472  EF3D  F022         	goto	u7351
 11082  004476  EF3F  F022         	goto	u7350
 11083  00447A                     u7351:
 11084  00447A  EF20  F022         	goto	l476
 11085  00447E                     u7350:
 11086  00447E  4A13               	infsnz	checkCRC@i^0,f,c
 11087  004480  2A14               	incf	(checkCRC@i+1)^0,f,c
 11088  004482                     l6917:
 11089  004482  0EFE               	movlw	254
 11090  004484  6E06               	movwf	??_checkCRC^0,c
 11091  004486  0EFF               	movlw	255
 11092  004488  6E07               	movwf	(??_checkCRC+1)^0,c
 11093  00448A  5073               	movf	_messageLength^0,w,c	;volatile
 11094  00448C  6E08               	movwf	(??_checkCRC+2)^0,c
 11095  00448E  6A09               	clrf	(??_checkCRC+3)^0,c
 11096  004490  5006               	movf	??_checkCRC^0,w,c
 11097  004492  2608               	addwf	(??_checkCRC+2)^0,f,c
 11098  004494  5007               	movf	(??_checkCRC+1)^0,w,c
 11099  004496  2209               	addwfc	(??_checkCRC+3)^0,f,c
 11100  004498  5008               	movf	(??_checkCRC+2)^0,w,c
 11101  00449A  5C13               	subwf	checkCRC@i^0,w,c
 11102  00449C  5014               	movf	(checkCRC@i+1)^0,w,c
 11103  00449E  0A80               	xorlw	128
 11104  0044A0  6E0A               	movwf	(??_checkCRC+4)^0,c
 11105  0044A2  5009               	movf	(??_checkCRC+3)^0,w,c
 11106  0044A4  0A80               	xorlw	128
 11107  0044A6  580A               	subwfb	(??_checkCRC+4)^0,w,c
 11108  0044A8  A0D8               	btfss	status,0,c
 11109  0044AA  EF59  F022         	goto	u7361
 11110  0044AE  EF5B  F022         	goto	u7360
 11111  0044B2                     u7361:
 11112  0044B2  EF12  F022         	goto	l6899
 11113  0044B6                     u7360:
 11114  0044B6                     
 11115                           ;modbus.c: 506: };modbus.c: 507: };modbus.c: 508: };modbus.c: 510: crcHigh = (crc & 0x00
      +                          FF);
 11116  0044B6  5011               	movf	checkCRC@crc^0,w,c
 11117  0044B8  6E0B               	movwf	checkCRC@crcHigh^0,c
 11118  0044BA  6A0C               	clrf	(checkCRC@crcHigh+1)^0,c
 11119                           
 11120                           ;modbus.c: 511: crcLow = (crc & 0xFF00) >>8;
 11121  0044BC  C011  F006         	movff	checkCRC@crc,??_checkCRC
 11122  0044C0  C012  F007         	movff	checkCRC@crc+1,??_checkCRC+1
 11123  0044C4  C007  F006         	movff	??_checkCRC+1,??_checkCRC
 11124  0044C8  6A07               	clrf	(??_checkCRC+1)^0,c
 11125  0044CA  5006               	movf	??_checkCRC^0,w,c
 11126  0044CC  6E0D               	movwf	checkCRC@crcLow^0,c
 11127  0044CE  6A0E               	clrf	(checkCRC@crcLow+1)^0,c
 11128  0044D0                     
 11129                           ;modbus.c: 512: if((crcHigh == received[i])&&(crcLow == received[i+1]))
 11130  0044D0  0E00               	movlw	low _received
 11131  0044D2  2413               	addwf	checkCRC@i^0,w,c
 11132  0044D4  6ED9               	movwf	fsr2l,c
 11133  0044D6  0E02               	movlw	high _received
 11134  0044D8  2014               	addwfc	(checkCRC@i+1)^0,w,c
 11135  0044DA  6EDA               	movwf	fsr2h,c
 11136  0044DC  50DF               	movf	indf2,w,c
 11137  0044DE  6E06               	movwf	??_checkCRC^0,c
 11138  0044E0  6A07               	clrf	(??_checkCRC+1)^0,c
 11139  0044E2  500B               	movf	checkCRC@crcHigh^0,w,c
 11140  0044E4  1806               	xorwf	??_checkCRC^0,w,c
 11141  0044E6  E107               	bnz	u7371
 11142  0044E8  500C               	movf	(checkCRC@crcHigh+1)^0,w,c
 11143  0044EA  1807               	xorwf	(??_checkCRC+1)^0,w,c
 11144  0044EC  A4D8               	btfss	status,2,c
 11145  0044EE  EF7B  F022         	goto	u7371
 11146  0044F2  EF7D  F022         	goto	u7370
 11147  0044F6                     u7371:
 11148  0044F6  EF95  F022         	goto	l6931
 11149  0044FA                     u7370:
 11150  0044FA  0E01               	movlw	low (_received+1)
 11151  0044FC  2413               	addwf	checkCRC@i^0,w,c
 11152  0044FE  6ED9               	movwf	fsr2l,c
 11153  004500  0E02               	movlw	high (_received+1)
 11154  004502  2014               	addwfc	(checkCRC@i+1)^0,w,c
 11155  004504  6EDA               	movwf	fsr2h,c
 11156  004506  50DF               	movf	indf2,w,c
 11157  004508  6E06               	movwf	??_checkCRC^0,c
 11158  00450A  6A07               	clrf	(??_checkCRC+1)^0,c
 11159  00450C  500D               	movf	checkCRC@crcLow^0,w,c
 11160  00450E  1806               	xorwf	??_checkCRC^0,w,c
 11161  004510  E107               	bnz	u7381
 11162  004512  500E               	movf	(checkCRC@crcLow+1)^0,w,c
 11163  004514  1807               	xorwf	(??_checkCRC+1)^0,w,c
 11164  004516  A4D8               	btfss	status,2,c
 11165  004518  EF90  F022         	goto	u7381
 11166  00451C  EF92  F022         	goto	u7380
 11167  004520                     u7381:
 11168  004520  EF95  F022         	goto	l6931
 11169  004524                     u7380:
 11170  004524                     
 11171                           ;modbus.c: 513: {;modbus.c: 514: return 1;
 11172  004524  0E01               	movlw	1
 11173  004526  EF96  F022         	goto	l482
 11174  00452A                     l6931:
 11175                           
 11176                           ;modbus.c: 516: else{;modbus.c: 517: return 0;
 11177  00452A  0E00               	movlw	0
 11178  00452C                     l482:
 11179  00452C  0012               	return		;funcret
 11180  00452E                     __end_of_checkCRC:
 11181                           	callstack 0
 11182                           
 11183 ;; *************** function _adc_init *****************
 11184 ;; Defined at:
 11185 ;;		line 30 in file "adc.c"
 11186 ;; Parameters:    Size  Location     Type
 11187 ;;		None
 11188 ;; Auto vars:     Size  Location     Type
 11189 ;;		None
 11190 ;; Return value:  Size  Location     Type
 11191 ;;                  1    wreg      void 
 11192 ;; Registers used:
 11193 ;;		wreg, status,2
 11194 ;; Tracked objects:
 11195 ;;		On entry : 0/0
 11196 ;;		On exit  : 0/0
 11197 ;;		Unchanged: 0/0
 11198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11199 ;;      Params:         0       0       0       0       0       0       0
 11200 ;;      Locals:         0       0       0       0       0       0       0
 11201 ;;      Temps:          0       0       0       0       0       0       0
 11202 ;;      Totals:         0       0       0       0       0       0       0
 11203 ;;Total ram usage:        0 bytes
 11204 ;; Hardware stack levels used:    1
 11205 ;; Hardware stack levels required when called:    2
 11206 ;; This function calls:
 11207 ;;		Nothing
 11208 ;; This function is called by:
 11209 ;;		_main
 11210 ;; This function uses a non-reentrant model
 11211 ;;
 11212                           
 11213                           	psect	text33
 11214  0056C8                     __ptext33:
 11215                           	callstack 0
 11216  0056C8                     _adc_init:
 11217                           	callstack 28
 11218  0056C8                     
 11219                           ;adc.c: 33: ADCON1=0x08;
 11220  0056C8  0E08               	movlw	8
 11221  0056CA  6EC1               	movwf	193,c	;volatile
 11222                           
 11223                           ;adc.c: 34: ADCON0=0x41;
 11224  0056CC  0E41               	movlw	65
 11225  0056CE  6EC2               	movwf	194,c	;volatile
 11226  0056D0  0012               	return		;funcret
 11227  0056D2                     __end_of_adc_init:
 11228                           	callstack 0
 11229                           
 11230 ;; *************** function _adc_amostra *****************
 11231 ;; Defined at:
 11232 ;;		line 44 in file "adc.c"
 11233 ;; Parameters:    Size  Location     Type
 11234 ;;  canal           1    wreg     unsigned char 
 11235 ;; Auto vars:     Size  Location     Type
 11236 ;;  canal           1   11[COMRAM] unsigned char 
 11237 ;; Return value:  Size  Location     Type
 11238 ;;                  2    5[COMRAM] unsigned int 
 11239 ;; Registers used:
 11240 ;;		wreg, status,2, status,0
 11241 ;; Tracked objects:
 11242 ;;		On entry : 0/0
 11243 ;;		On exit  : 0/0
 11244 ;;		Unchanged: 0/0
 11245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11246 ;;      Params:         2       0       0       0       0       0       0
 11247 ;;      Locals:         1       0       0       0       0       0       0
 11248 ;;      Temps:          4       0       0       0       0       0       0
 11249 ;;      Totals:         7       0       0       0       0       0       0
 11250 ;;Total ram usage:        7 bytes
 11251 ;; Hardware stack levels used:    1
 11252 ;; Hardware stack levels required when called:    2
 11253 ;; This function calls:
 11254 ;;		Nothing
 11255 ;; This function is called by:
 11256 ;;		_main
 11257 ;; This function uses a non-reentrant model
 11258 ;;
 11259                           
 11260                           	psect	text34
 11261  0052C0                     __ptext34:
 11262                           	callstack 0
 11263  0052C0                     _adc_amostra:
 11264                           	callstack 28
 11265                           
 11266                           ;incstack = 0
 11267                           ;adc_amostra@canal stored from wreg
 11268  0052C0  6E0C               	movwf	adc_amostra@canal^0,c
 11269  0052C2                     
 11270                           ;adc.c: 49: switch(canal)
 11271  0052C2  EF6F  F029         	goto	l7785
 11272  0052C6                     l7777:
 11273                           
 11274                           ;adc.c: 52: ADCON0=0x01;
 11275  0052C6  0E01               	movlw	1
 11276  0052C8  6EC2               	movwf	194,c	;volatile
 11277                           
 11278                           ;adc.c: 53: break;
 11279  0052CA  EF7E  F029         	goto	l18
 11280  0052CE                     l7779:
 11281                           
 11282                           ;adc.c: 55: ADCON0=0x05;
 11283  0052CE  0E05               	movlw	5
 11284  0052D0  6EC2               	movwf	194,c	;volatile
 11285                           
 11286                           ;adc.c: 56: break;
 11287  0052D2  EF7E  F029         	goto	l18
 11288  0052D6                     l7781:
 11289                           
 11290                           ;adc.c: 58: ADCON0=0x09;
 11291  0052D6  0E09               	movlw	9
 11292  0052D8  6EC2               	movwf	194,c	;volatile
 11293                           
 11294                           ;adc.c: 59: break;
 11295  0052DA  EF7E  F029         	goto	l18
 11296  0052DE                     l7785:
 11297  0052DE  500C               	movf	adc_amostra@canal^0,w,c
 11298                           
 11299                           ; Switch size 1, requested type "simple"
 11300                           ; Number of cases is 3, Range of values is 0 to 2
 11301                           ; switch strategies available:
 11302                           ; Name         Instructions Cycles
 11303                           ; simple_byte           10     6 (average)
 11304                           ;	Chosen strategy is simple_byte
 11305  0052E0  0A00               	xorlw	0	; case 0
 11306  0052E2  B4D8               	btfsc	status,2,c
 11307  0052E4  EF63  F029         	goto	l7777
 11308  0052E8  0A01               	xorlw	1	; case 1
 11309  0052EA  B4D8               	btfsc	status,2,c
 11310  0052EC  EF67  F029         	goto	l7779
 11311  0052F0  0A03               	xorlw	3	; case 2
 11312  0052F2  B4D8               	btfsc	status,2,c
 11313  0052F4  EF6B  F029         	goto	l7781
 11314  0052F8  EF7E  F029         	goto	l18
 11315  0052FC                     l18:
 11316                           
 11317                           ;adc.c: 77: ADCON0bits.GO=1;
 11318  0052FC  82C2               	bsf	194,1,c	;volatile
 11319  0052FE                     l21:
 11320  0052FE  B2C2               	btfsc	194,1,c	;volatile
 11321  005300  EF84  F029         	goto	u8391
 11322  005304  EF86  F029         	goto	u8390
 11323  005308                     u8391:
 11324  005308  EF7F  F029         	goto	l21
 11325  00530C                     u8390:
 11326  00530C                     
 11327                           ;adc.c: 80: return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
 11328  00530C  CFC3 F008          	movff	4035,??_adc_amostra	;volatile
 11329  005310  0E06               	movlw	6
 11330  005312  6E09               	movwf	(??_adc_amostra+1)^0,c
 11331  005314                     u8405:
 11332  005314  90D8               	bcf	status,0,c
 11333  005316  3208               	rrcf	??_adc_amostra^0,f,c
 11334  005318  2E09               	decfsz	(??_adc_amostra+1)^0,f,c
 11335  00531A  EF8A  F029         	goto	u8405
 11336  00531E  5008               	movf	??_adc_amostra^0,w,c
 11337  005320  CFC4 F00A          	movff	4036,??_adc_amostra+2	;volatile
 11338  005324  6A0B               	clrf	(??_adc_amostra+3)^0,c
 11339  005326  90D8               	bcf	status,0,c
 11340  005328  360A               	rlcf	(??_adc_amostra+2)^0,f,c
 11341  00532A  360B               	rlcf	(??_adc_amostra+3)^0,f,c
 11342  00532C  90D8               	bcf	status,0,c
 11343  00532E  360A               	rlcf	(??_adc_amostra+2)^0,f,c
 11344  005330  360B               	rlcf	(??_adc_amostra+3)^0,f,c
 11345  005332  100A               	iorwf	(??_adc_amostra+2)^0,w,c
 11346  005334  6E06               	movwf	?_adc_amostra^0,c
 11347  005336  500B               	movf	(??_adc_amostra+3)^0,w,c
 11348  005338  6E07               	movwf	(?_adc_amostra+1)^0,c
 11349  00533A  0012               	return		;funcret
 11350  00533C                     __end_of_adc_amostra:
 11351                           	callstack 0
 11352                           
 11353 ;; *************** function ___fldiv *****************
 11354 ;; Defined at:
 11355 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
 11356 ;; Parameters:    Size  Location     Type
 11357 ;;  b               4   57[COMRAM] unsigned int 
 11358 ;;  a               4   61[COMRAM] unsigned int 
 11359 ;; Auto vars:     Size  Location     Type
 11360 ;;  grs             4   76[COMRAM] unsigned long 
 11361 ;;  rem             4   69[COMRAM] unsigned long 
 11362 ;;  new_exp         2   74[COMRAM] int 
 11363 ;;  aexp            1   81[COMRAM] unsigned char 
 11364 ;;  bexp            1   80[COMRAM] unsigned char 
 11365 ;;  sign            1   73[COMRAM] unsigned char 
 11366 ;; Return value:  Size  Location     Type
 11367 ;;                  4   57[COMRAM] unsigned char 
 11368 ;; Registers used:
 11369 ;;		wreg, status,2, status,0
 11370 ;; Tracked objects:
 11371 ;;		On entry : 0/0
 11372 ;;		On exit  : 0/0
 11373 ;;		Unchanged: 0/0
 11374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11375 ;;      Params:         8       0       0       0       0       0       0
 11376 ;;      Locals:        13       0       0       0       0       0       0
 11377 ;;      Temps:          4       0       0       0       0       0       0
 11378 ;;      Totals:        25       0       0       0       0       0       0
 11379 ;;Total ram usage:       25 bytes
 11380 ;; Hardware stack levels used:    1
 11381 ;; Hardware stack levels required when called:    2
 11382 ;; This function calls:
 11383 ;;		Nothing
 11384 ;; This function is called by:
 11385 ;;		_main
 11386 ;; This function uses a non-reentrant model
 11387 ;;
 11388                           
 11389                           	psect	text35
 11390  002C68                     __ptext35:
 11391                           	callstack 0
 11392  002C68                     ___fldiv:
 11393                           	callstack 28
 11394  002C68  503D               	movf	(___fldiv@b+3)^0,w,c
 11395  002C6A  0B80               	andlw	128
 11396  002C6C  6E4A               	movwf	___fldiv@sign^0,c
 11397  002C6E  503D               	movf	(___fldiv@b+3)^0,w,c
 11398  002C70  243D               	addwf	(___fldiv@b+3)^0,w,c
 11399  002C72  6E51               	movwf	___fldiv@bexp^0,c
 11400  002C74  AE3C               	btfss	(___fldiv@b+2)^0,7,c
 11401  002C76  EF3F  F016         	goto	u9131
 11402  002C7A  EF41  F016         	goto	u9130
 11403  002C7E                     u9131:
 11404  002C7E  EF42  F016         	goto	l8287
 11405  002C82                     u9130:
 11406  002C82  8051               	bsf	___fldiv@bexp^0,0,c
 11407  002C84                     l8287:
 11408  002C84  5051               	movf	___fldiv@bexp^0,w,c
 11409  002C86  B4D8               	btfsc	status,2,c
 11410  002C88  EF48  F016         	goto	u9141
 11411  002C8C  EF4A  F016         	goto	u9140
 11412  002C90                     u9141:
 11413  002C90  EF5F  F016         	goto	l8297
 11414  002C94                     u9140:
 11415  002C94  2851               	incf	___fldiv@bexp^0,w,c
 11416  002C96  A4D8               	btfss	status,2,c
 11417  002C98  EF50  F016         	goto	u9151
 11418  002C9C  EF52  F016         	goto	u9150
 11419  002CA0                     u9151:
 11420  002CA0  EF5A  F016         	goto	l8293
 11421  002CA4                     u9150:
 11422  002CA4  0E00               	movlw	0
 11423  002CA6  6E3A               	movwf	___fldiv@b^0,c
 11424  002CA8  0E00               	movlw	0
 11425  002CAA  6E3B               	movwf	(___fldiv@b+1)^0,c
 11426  002CAC  0E00               	movlw	0
 11427  002CAE  6E3C               	movwf	(___fldiv@b+2)^0,c
 11428  002CB0  0E00               	movlw	0
 11429  002CB2  6E3D               	movwf	(___fldiv@b+3)^0,c
 11430  002CB4                     l8293:
 11431  002CB4  8E3C               	bsf	(___fldiv@b+2)^0,7,c
 11432  002CB6  0E00               	movlw	0
 11433  002CB8  6E3D               	movwf	(___fldiv@b+3)^0,c
 11434  002CBA  EF67  F016         	goto	l8299
 11435  002CBE                     l8297:
 11436  002CBE  0E00               	movlw	0
 11437  002CC0  6E3A               	movwf	___fldiv@b^0,c
 11438  002CC2  0E00               	movlw	0
 11439  002CC4  6E3B               	movwf	(___fldiv@b+1)^0,c
 11440  002CC6  0E00               	movlw	0
 11441  002CC8  6E3C               	movwf	(___fldiv@b+2)^0,c
 11442  002CCA  0E00               	movlw	0
 11443  002CCC  6E3D               	movwf	(___fldiv@b+3)^0,c
 11444  002CCE                     l8299:
 11445  002CCE  5041               	movf	(___fldiv@a+3)^0,w,c
 11446  002CD0  0B80               	andlw	128
 11447  002CD2  1A4A               	xorwf	___fldiv@sign^0,f,c
 11448  002CD4  5041               	movf	(___fldiv@a+3)^0,w,c
 11449  002CD6  2441               	addwf	(___fldiv@a+3)^0,w,c
 11450  002CD8  6E52               	movwf	___fldiv@aexp^0,c
 11451  002CDA  AE40               	btfss	(___fldiv@a+2)^0,7,c
 11452  002CDC  EF72  F016         	goto	u9161
 11453  002CE0  EF74  F016         	goto	u9160
 11454  002CE4                     u9161:
 11455  002CE4  EF75  F016         	goto	l8307
 11456  002CE8                     u9160:
 11457  002CE8  8052               	bsf	___fldiv@aexp^0,0,c
 11458  002CEA                     l8307:
 11459  002CEA  5052               	movf	___fldiv@aexp^0,w,c
 11460  002CEC  B4D8               	btfsc	status,2,c
 11461  002CEE  EF7B  F016         	goto	u9171
 11462  002CF2  EF7D  F016         	goto	u9170
 11463  002CF6                     u9171:
 11464  002CF6  EF92  F016         	goto	l8317
 11465  002CFA                     u9170:
 11466  002CFA  2852               	incf	___fldiv@aexp^0,w,c
 11467  002CFC  A4D8               	btfss	status,2,c
 11468  002CFE  EF83  F016         	goto	u9181
 11469  002D02  EF85  F016         	goto	u9180
 11470  002D06                     u9181:
 11471  002D06  EF8D  F016         	goto	l8313
 11472  002D0A                     u9180:
 11473  002D0A  0E00               	movlw	0
 11474  002D0C  6E3E               	movwf	___fldiv@a^0,c
 11475  002D0E  0E00               	movlw	0
 11476  002D10  6E3F               	movwf	(___fldiv@a+1)^0,c
 11477  002D12  0E00               	movlw	0
 11478  002D14  6E40               	movwf	(___fldiv@a+2)^0,c
 11479  002D16  0E00               	movlw	0
 11480  002D18  6E41               	movwf	(___fldiv@a+3)^0,c
 11481  002D1A                     l8313:
 11482  002D1A  8E40               	bsf	(___fldiv@a+2)^0,7,c
 11483  002D1C  0E00               	movlw	0
 11484  002D1E  6E41               	movwf	(___fldiv@a+3)^0,c
 11485  002D20  EF9A  F016         	goto	l8319
 11486  002D24                     l8317:
 11487  002D24  0E00               	movlw	0
 11488  002D26  6E3E               	movwf	___fldiv@a^0,c
 11489  002D28  0E00               	movlw	0
 11490  002D2A  6E3F               	movwf	(___fldiv@a+1)^0,c
 11491  002D2C  0E00               	movlw	0
 11492  002D2E  6E40               	movwf	(___fldiv@a+2)^0,c
 11493  002D30  0E00               	movlw	0
 11494  002D32  6E41               	movwf	(___fldiv@a+3)^0,c
 11495  002D34                     l8319:
 11496  002D34  503E               	movf	___fldiv@a^0,w,c
 11497  002D36  103F               	iorwf	(___fldiv@a+1)^0,w,c
 11498  002D38  1040               	iorwf	(___fldiv@a+2)^0,w,c
 11499  002D3A  1041               	iorwf	(___fldiv@a+3)^0,w,c
 11500  002D3C  A4D8               	btfss	status,2,c
 11501  002D3E  EFA3  F016         	goto	u9191
 11502  002D42  EFA5  F016         	goto	u9190
 11503  002D46                     u9191:
 11504  002D46  EFBD  F016         	goto	l8331
 11505  002D4A                     u9190:
 11506  002D4A  0E00               	movlw	0
 11507  002D4C  6E3A               	movwf	___fldiv@b^0,c
 11508  002D4E  0E00               	movlw	0
 11509  002D50  6E3B               	movwf	(___fldiv@b+1)^0,c
 11510  002D52  0E00               	movlw	0
 11511  002D54  6E3C               	movwf	(___fldiv@b+2)^0,c
 11512  002D56  0E00               	movlw	0
 11513  002D58  6E3D               	movwf	(___fldiv@b+3)^0,c
 11514  002D5A  0E80               	movlw	128
 11515  002D5C  123C               	iorwf	(___fldiv@b+2)^0,f,c
 11516  002D5E  0E7F               	movlw	127
 11517  002D60  123D               	iorwf	(___fldiv@b+3)^0,f,c
 11518  002D62                     l8325:
 11519  002D62  504A               	movf	___fldiv@sign^0,w,c
 11520  002D64  123D               	iorwf	(___fldiv@b+3)^0,f,c
 11521  002D66  C03A  F03A         	movff	___fldiv@b,?___fldiv
 11522  002D6A  C03B  F03B         	movff	___fldiv@b+1,?___fldiv+1
 11523  002D6E  C03C  F03C         	movff	___fldiv@b+2,?___fldiv+2
 11524  002D72  C03D  F03D         	movff	___fldiv@b+3,?___fldiv+3
 11525  002D76  EF00  F018         	goto	l1275
 11526  002D7A                     l8331:
 11527  002D7A  5051               	movf	___fldiv@bexp^0,w,c
 11528  002D7C  A4D8               	btfss	status,2,c
 11529  002D7E  EFC3  F016         	goto	u9201
 11530  002D82  EFC5  F016         	goto	u9200
 11531  002D86                     u9201:
 11532  002D86  EFCF  F016         	goto	l8339
 11533  002D8A                     u9200:
 11534  002D8A  0E00               	movlw	0
 11535  002D8C  6E3A               	movwf	?___fldiv^0,c
 11536  002D8E  0E00               	movlw	0
 11537  002D90  6E3B               	movwf	(?___fldiv+1)^0,c
 11538  002D92  0E00               	movlw	0
 11539  002D94  6E3C               	movwf	(?___fldiv+2)^0,c
 11540  002D96  0E00               	movlw	0
 11541  002D98  6E3D               	movwf	(?___fldiv+3)^0,c
 11542  002D9A  EF00  F018         	goto	l1275
 11543  002D9E                     l8339:
 11544  002D9E  5052               	movf	___fldiv@aexp^0,w,c
 11545  002DA0  C051  F042         	movff	___fldiv@bexp,??___fldiv
 11546  002DA4  6A43               	clrf	(??___fldiv+1)^0,c
 11547  002DA6  5E42               	subwf	??___fldiv^0,f,c
 11548  002DA8  0E00               	movlw	0
 11549  002DAA  5A43               	subwfb	(??___fldiv+1)^0,f,c
 11550  002DAC  0E7F               	movlw	127
 11551  002DAE  2442               	addwf	??___fldiv^0,w,c
 11552  002DB0  6E4B               	movwf	___fldiv@new_exp^0,c
 11553  002DB2  0E00               	movlw	0
 11554  002DB4  2043               	addwfc	(??___fldiv+1)^0,w,c
 11555  002DB6  6E4C               	movwf	(___fldiv@new_exp+1)^0,c
 11556  002DB8  C03A  F046         	movff	___fldiv@b,___fldiv@rem
 11557  002DBC  C03B  F047         	movff	___fldiv@b+1,___fldiv@rem+1
 11558  002DC0  C03C  F048         	movff	___fldiv@b+2,___fldiv@rem+2
 11559  002DC4  C03D  F049         	movff	___fldiv@b+3,___fldiv@rem+3
 11560  002DC8  0E00               	movlw	0
 11561  002DCA  6E3A               	movwf	___fldiv@b^0,c
 11562  002DCC  0E00               	movlw	0
 11563  002DCE  6E3B               	movwf	(___fldiv@b+1)^0,c
 11564  002DD0  0E00               	movlw	0
 11565  002DD2  6E3C               	movwf	(___fldiv@b+2)^0,c
 11566  002DD4  0E00               	movlw	0
 11567  002DD6  6E3D               	movwf	(___fldiv@b+3)^0,c
 11568  002DD8  0E00               	movlw	0
 11569  002DDA  6E4D               	movwf	___fldiv@grs^0,c
 11570  002DDC  0E00               	movlw	0
 11571  002DDE  6E4E               	movwf	(___fldiv@grs+1)^0,c
 11572  002DE0  0E00               	movlw	0
 11573  002DE2  6E4F               	movwf	(___fldiv@grs+2)^0,c
 11574  002DE4  0E00               	movlw	0
 11575  002DE6  6E50               	movwf	(___fldiv@grs+3)^0,c
 11576  002DE8  0E00               	movlw	0
 11577  002DEA  6E52               	movwf	___fldiv@aexp^0,c
 11578  002DEC  EF30  F017         	goto	l1277
 11579  002DF0                     l8349:
 11580  002DF0  5052               	movf	___fldiv@aexp^0,w,c
 11581  002DF2  B4D8               	btfsc	status,2,c
 11582  002DF4  EFFE  F016         	goto	u9211
 11583  002DF8  EF00  F017         	goto	u9210
 11584  002DFC                     u9211:
 11585  002DFC  EF17  F017         	goto	l8357
 11586  002E00                     u9210:
 11587  002E00  90D8               	bcf	status,0,c
 11588  002E02  3646               	rlcf	___fldiv@rem^0,f,c
 11589  002E04  3647               	rlcf	(___fldiv@rem+1)^0,f,c
 11590  002E06  3648               	rlcf	(___fldiv@rem+2)^0,f,c
 11591  002E08  3649               	rlcf	(___fldiv@rem+3)^0,f,c
 11592  002E0A  90D8               	bcf	status,0,c
 11593  002E0C  363A               	rlcf	___fldiv@b^0,f,c
 11594  002E0E  363B               	rlcf	(___fldiv@b+1)^0,f,c
 11595  002E10  363C               	rlcf	(___fldiv@b+2)^0,f,c
 11596  002E12  363D               	rlcf	(___fldiv@b+3)^0,f,c
 11597  002E14  AE50               	btfss	(___fldiv@grs+3)^0,7,c
 11598  002E16  EF0F  F017         	goto	u9221
 11599  002E1A  EF11  F017         	goto	u9220
 11600  002E1E                     u9221:
 11601  002E1E  EF12  F017         	goto	l1280
 11602  002E22                     u9220:
 11603  002E22  803A               	bsf	___fldiv@b^0,0,c
 11604  002E24                     l1280:
 11605  002E24  90D8               	bcf	status,0,c
 11606  002E26  364D               	rlcf	___fldiv@grs^0,f,c
 11607  002E28  364E               	rlcf	(___fldiv@grs+1)^0,f,c
 11608  002E2A  364F               	rlcf	(___fldiv@grs+2)^0,f,c
 11609  002E2C  3650               	rlcf	(___fldiv@grs+3)^0,f,c
 11610  002E2E                     l8357:
 11611  002E2E  503E               	movf	___fldiv@a^0,w,c
 11612  002E30  5C46               	subwf	___fldiv@rem^0,w,c
 11613  002E32  503F               	movf	(___fldiv@a+1)^0,w,c
 11614  002E34  5847               	subwfb	(___fldiv@rem+1)^0,w,c
 11615  002E36  5040               	movf	(___fldiv@a+2)^0,w,c
 11616  002E38  5848               	subwfb	(___fldiv@rem+2)^0,w,c
 11617  002E3A  5041               	movf	(___fldiv@a+3)^0,w,c
 11618  002E3C  5849               	subwfb	(___fldiv@rem+3)^0,w,c
 11619  002E3E  A0D8               	btfss	status,0,c
 11620  002E40  EF24  F017         	goto	u9231
 11621  002E44  EF26  F017         	goto	u9230
 11622  002E48                     u9231:
 11623  002E48  EF2F  F017         	goto	l8363
 11624  002E4C                     u9230:
 11625  002E4C  8C50               	bsf	(___fldiv@grs+3)^0,6,c
 11626  002E4E  503E               	movf	___fldiv@a^0,w,c
 11627  002E50  5E46               	subwf	___fldiv@rem^0,f,c
 11628  002E52  503F               	movf	(___fldiv@a+1)^0,w,c
 11629  002E54  5A47               	subwfb	(___fldiv@rem+1)^0,f,c
 11630  002E56  5040               	movf	(___fldiv@a+2)^0,w,c
 11631  002E58  5A48               	subwfb	(___fldiv@rem+2)^0,f,c
 11632  002E5A  5041               	movf	(___fldiv@a+3)^0,w,c
 11633  002E5C  5A49               	subwfb	(___fldiv@rem+3)^0,f,c
 11634  002E5E                     l8363:
 11635  002E5E  2A52               	incf	___fldiv@aexp^0,f,c
 11636  002E60                     l1277:
 11637  002E60  0E19               	movlw	25
 11638  002E62  6452               	cpfsgt	___fldiv@aexp^0,c
 11639  002E64  EF36  F017         	goto	u9241
 11640  002E68  EF38  F017         	goto	u9240
 11641  002E6C                     u9241:
 11642  002E6C  EFF8  F016         	goto	l8349
 11643  002E70                     u9240:
 11644  002E70  5046               	movf	___fldiv@rem^0,w,c
 11645  002E72  1047               	iorwf	(___fldiv@rem+1)^0,w,c
 11646  002E74  1048               	iorwf	(___fldiv@rem+2)^0,w,c
 11647  002E76  1049               	iorwf	(___fldiv@rem+3)^0,w,c
 11648  002E78  B4D8               	btfsc	status,2,c
 11649  002E7A  EF41  F017         	goto	u9251
 11650  002E7E  EF43  F017         	goto	u9250
 11651  002E82                     u9251:
 11652  002E82  EF5B  F017         	goto	l8375
 11653  002E86                     u9250:
 11654  002E86  804D               	bsf	___fldiv@grs^0,0,c
 11655  002E88  EF5B  F017         	goto	l8375
 11656  002E8C                     l8369:
 11657  002E8C  90D8               	bcf	status,0,c
 11658  002E8E  363A               	rlcf	___fldiv@b^0,f,c
 11659  002E90  363B               	rlcf	(___fldiv@b+1)^0,f,c
 11660  002E92  363C               	rlcf	(___fldiv@b+2)^0,f,c
 11661  002E94  363D               	rlcf	(___fldiv@b+3)^0,f,c
 11662  002E96  AE50               	btfss	(___fldiv@grs+3)^0,7,c
 11663  002E98  EF50  F017         	goto	u9261
 11664  002E9C  EF52  F017         	goto	u9260
 11665  002EA0                     u9261:
 11666  002EA0  EF53  F017         	goto	l1286
 11667  002EA4                     u9260:
 11668  002EA4  803A               	bsf	___fldiv@b^0,0,c
 11669  002EA6                     l1286:
 11670  002EA6  90D8               	bcf	status,0,c
 11671  002EA8  364D               	rlcf	___fldiv@grs^0,f,c
 11672  002EAA  364E               	rlcf	(___fldiv@grs+1)^0,f,c
 11673  002EAC  364F               	rlcf	(___fldiv@grs+2)^0,f,c
 11674  002EAE  3650               	rlcf	(___fldiv@grs+3)^0,f,c
 11675  002EB0  064B               	decf	___fldiv@new_exp^0,f,c
 11676  002EB2  A0D8               	btfss	status,0,c
 11677  002EB4  064C               	decf	(___fldiv@new_exp+1)^0,f,c
 11678  002EB6                     l8375:
 11679  002EB6  AE3C               	btfss	(___fldiv@b+2)^0,7,c
 11680  002EB8  EF60  F017         	goto	u9271
 11681  002EBC  EF62  F017         	goto	u9270
 11682  002EC0                     u9271:
 11683  002EC0  EF46  F017         	goto	l8369
 11684  002EC4                     u9270:
 11685  002EC4  0E00               	movlw	0
 11686  002EC6  6E52               	movwf	___fldiv@aexp^0,c
 11687  002EC8  AE50               	btfss	(___fldiv@grs+3)^0,7,c
 11688  002ECA  EF69  F017         	goto	u9281
 11689  002ECE  EF6B  F017         	goto	u9280
 11690  002ED2                     u9281:
 11691  002ED2  EF8F  F017         	goto	l1288
 11692  002ED6                     u9280:
 11693  002ED6  0EFF               	movlw	255
 11694  002ED8  144D               	andwf	___fldiv@grs^0,w,c
 11695  002EDA  6E42               	movwf	??___fldiv^0,c
 11696  002EDC  0EFF               	movlw	255
 11697  002EDE  144E               	andwf	(___fldiv@grs+1)^0,w,c
 11698  002EE0  6E43               	movwf	(??___fldiv+1)^0,c
 11699  002EE2  0EFF               	movlw	255
 11700  002EE4  144F               	andwf	(___fldiv@grs+2)^0,w,c
 11701  002EE6  6E44               	movwf	(??___fldiv+2)^0,c
 11702  002EE8  0E7F               	movlw	127
 11703  002EEA  1450               	andwf	(___fldiv@grs+3)^0,w,c
 11704  002EEC  6E45               	movwf	(??___fldiv+3)^0,c
 11705  002EEE  5042               	movf	??___fldiv^0,w,c
 11706  002EF0  1043               	iorwf	(??___fldiv+1)^0,w,c
 11707  002EF2  1044               	iorwf	(??___fldiv+2)^0,w,c
 11708  002EF4  1045               	iorwf	(??___fldiv+3)^0,w,c
 11709  002EF6  B4D8               	btfsc	status,2,c
 11710  002EF8  EF80  F017         	goto	u9291
 11711  002EFC  EF82  F017         	goto	u9290
 11712  002F00                     u9291:
 11713  002F00  EF86  F017         	goto	l1289
 11714  002F04                     u9290:
 11715  002F04                     l8383:
 11716  002F04  0E01               	movlw	1
 11717  002F06  6E52               	movwf	___fldiv@aexp^0,c
 11718  002F08  EF8F  F017         	goto	l1288
 11719  002F0C                     l1289:
 11720  002F0C  A03A               	btfss	___fldiv@b^0,0,c
 11721  002F0E  EF8B  F017         	goto	u9301
 11722  002F12  EF8D  F017         	goto	u9300
 11723  002F16                     u9301:
 11724  002F16  EF8F  F017         	goto	l1288
 11725  002F1A                     u9300:
 11726  002F1A  EF82  F017         	goto	l8383
 11727  002F1E                     l1288:
 11728  002F1E  5052               	movf	___fldiv@aexp^0,w,c
 11729  002F20  B4D8               	btfsc	status,2,c
 11730  002F22  EF95  F017         	goto	u9311
 11731  002F26  EF97  F017         	goto	u9310
 11732  002F2A                     u9311:
 11733  002F2A  EFBB  F017         	goto	l8395
 11734  002F2E                     u9310:
 11735  002F2E  0E01               	movlw	1
 11736  002F30  263A               	addwf	___fldiv@b^0,f,c
 11737  002F32  0E00               	movlw	0
 11738  002F34  223B               	addwfc	(___fldiv@b+1)^0,f,c
 11739  002F36  223C               	addwfc	(___fldiv@b+2)^0,f,c
 11740  002F38  223D               	addwfc	(___fldiv@b+3)^0,f,c
 11741  002F3A  A03D               	btfss	(___fldiv@b+3)^0,0,c
 11742  002F3C  EFA2  F017         	goto	u9321
 11743  002F40  EFA4  F017         	goto	u9320
 11744  002F44                     u9321:
 11745  002F44  EFBB  F017         	goto	l8395
 11746  002F48                     u9320:
 11747  002F48  C03A  F042         	movff	___fldiv@b,??___fldiv
 11748  002F4C  C03B  F043         	movff	___fldiv@b+1,??___fldiv+1
 11749  002F50  C03C  F044         	movff	___fldiv@b+2,??___fldiv+2
 11750  002F54  C03D  F045         	movff	___fldiv@b+3,??___fldiv+3
 11751  002F58  3445               	rlcf	(??___fldiv+3)^0,w,c
 11752  002F5A  3245               	rrcf	(??___fldiv+3)^0,f,c
 11753  002F5C  3244               	rrcf	(??___fldiv+2)^0,f,c
 11754  002F5E  3243               	rrcf	(??___fldiv+1)^0,f,c
 11755  002F60  3242               	rrcf	??___fldiv^0,f,c
 11756  002F62  C042  F03A         	movff	??___fldiv,___fldiv@b
 11757  002F66  C043  F03B         	movff	??___fldiv+1,___fldiv@b+1
 11758  002F6A  C044  F03C         	movff	??___fldiv+2,___fldiv@b+2
 11759  002F6E  C045  F03D         	movff	??___fldiv+3,___fldiv@b+3
 11760  002F72  4A4B               	infsnz	___fldiv@new_exp^0,f,c
 11761  002F74  2A4C               	incf	(___fldiv@new_exp+1)^0,f,c
 11762  002F76                     l8395:
 11763  002F76  BE4C               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11764  002F78  EFC6  F017         	goto	u9331
 11765  002F7C  504C               	movf	(___fldiv@new_exp+1)^0,w,c
 11766  002F7E  E108               	bnz	u9330
 11767  002F80  284B               	incf	___fldiv@new_exp^0,w,c
 11768  002F82  A0D8               	btfss	status,0,c
 11769  002F84  EFC6  F017         	goto	u9331
 11770  002F88  EFC8  F017         	goto	u9330
 11771  002F8C                     u9331:
 11772  002F8C  EFD3  F017         	goto	l8399
 11773  002F90                     u9330:
 11774  002F90  0E00               	movlw	0
 11775  002F92  6E4C               	movwf	(___fldiv@new_exp+1)^0,c
 11776  002F94  684B               	setf	___fldiv@new_exp^0,c
 11777  002F96  0E00               	movlw	0
 11778  002F98  6E3A               	movwf	___fldiv@b^0,c
 11779  002F9A  0E00               	movlw	0
 11780  002F9C  6E3B               	movwf	(___fldiv@b+1)^0,c
 11781  002F9E  0E00               	movlw	0
 11782  002FA0  6E3C               	movwf	(___fldiv@b+2)^0,c
 11783  002FA2  0E00               	movlw	0
 11784  002FA4  6E3D               	movwf	(___fldiv@b+3)^0,c
 11785  002FA6                     l8399:
 11786  002FA6  BE4C               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11787  002FA8  EFE0  F017         	goto	u9340
 11788  002FAC  504C               	movf	(___fldiv@new_exp+1)^0,w,c
 11789  002FAE  E106               	bnz	u9341
 11790  002FB0  044B               	decf	___fldiv@new_exp^0,w,c
 11791  002FB2  B0D8               	btfsc	status,0,c
 11792  002FB4  EFDE  F017         	goto	u9341
 11793  002FB8  EFE0  F017         	goto	u9340
 11794  002FBC                     u9341:
 11795  002FBC  EFEE  F017         	goto	l8403
 11796  002FC0                     u9340:
 11797  002FC0  0E00               	movlw	0
 11798  002FC2  6E4C               	movwf	(___fldiv@new_exp+1)^0,c
 11799  002FC4  0E00               	movlw	0
 11800  002FC6  6E4B               	movwf	___fldiv@new_exp^0,c
 11801  002FC8  0E00               	movlw	0
 11802  002FCA  6E3A               	movwf	___fldiv@b^0,c
 11803  002FCC  0E00               	movlw	0
 11804  002FCE  6E3B               	movwf	(___fldiv@b+1)^0,c
 11805  002FD0  0E00               	movlw	0
 11806  002FD2  6E3C               	movwf	(___fldiv@b+2)^0,c
 11807  002FD4  0E00               	movlw	0
 11808  002FD6  6E3D               	movwf	(___fldiv@b+3)^0,c
 11809  002FD8  0E00               	movlw	0
 11810  002FDA  6E4A               	movwf	___fldiv@sign^0,c
 11811  002FDC                     l8403:
 11812  002FDC  C04B  F051         	movff	___fldiv@new_exp,___fldiv@bexp
 11813  002FE0  A051               	btfss	___fldiv@bexp^0,0,c
 11814  002FE2  EFF5  F017         	goto	u9351
 11815  002FE6  EFF7  F017         	goto	u9350
 11816  002FEA                     u9351:
 11817  002FEA  EFFA  F017         	goto	l8409
 11818  002FEE                     u9350:
 11819  002FEE  8E3C               	bsf	(___fldiv@b+2)^0,7,c
 11820  002FF0  EFFB  F017         	goto	l8411
 11821  002FF4                     l8409:
 11822  002FF4  9E3C               	bcf	(___fldiv@b+2)^0,7,c
 11823  002FF6                     l8411:
 11824  002FF6  90D8               	bcf	status,0,c
 11825  002FF8  3051               	rrcf	___fldiv@bexp^0,w,c
 11826  002FFA  6E3D               	movwf	(___fldiv@b+3)^0,c
 11827  002FFC  EFB1  F016         	goto	l8325
 11828  003000                     l1275:
 11829  003000  0012               	return		;funcret
 11830  003002                     __end_of___fldiv:
 11831                           	callstack 0
 11832                           
 11833 ;; *************** function _PWM1_Start *****************
 11834 ;; Defined at:
 11835 ;;		line 76 in file "pwm.c"
 11836 ;; Parameters:    Size  Location     Type
 11837 ;;		None
 11838 ;; Auto vars:     Size  Location     Type
 11839 ;;		None
 11840 ;; Return value:  Size  Location     Type
 11841 ;;                  1    wreg      void 
 11842 ;; Registers used:
 11843 ;;		wreg, status,2
 11844 ;; Tracked objects:
 11845 ;;		On entry : 0/0
 11846 ;;		On exit  : 0/0
 11847 ;;		Unchanged: 0/0
 11848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11849 ;;      Params:         0       0       0       0       0       0       0
 11850 ;;      Locals:         0       0       0       0       0       0       0
 11851 ;;      Temps:          0       0       0       0       0       0       0
 11852 ;;      Totals:         0       0       0       0       0       0       0
 11853 ;;Total ram usage:        0 bytes
 11854 ;; Hardware stack levels used:    1
 11855 ;; Hardware stack levels required when called:    2
 11856 ;; This function calls:
 11857 ;;		Nothing
 11858 ;; This function is called by:
 11859 ;;		_main
 11860 ;; This function uses a non-reentrant model
 11861 ;;
 11862                           
 11863                           	psect	text36
 11864  005646                     __ptext36:
 11865                           	callstack 0
 11866  005646                     _PWM1_Start:
 11867                           	callstack 28
 11868  005646                     
 11869                           ;pwm.c: 79: TRISCbits.TRISC2=0;
 11870  005646  9494               	bcf	148,2,c	;volatile
 11871                           
 11872                           ;pwm.c: 80: TRISDbits.TRISD5=0;
 11873  005648  9A95               	bcf	149,5,c	;volatile
 11874  00564A                     
 11875                           ;pwm.c: 83: CCP1CON=0x0F;
 11876  00564A  0E0F               	movlw	15
 11877  00564C  6EBD               	movwf	189,c	;volatile
 11878  00564E                     
 11879                           ;pwm.c: 86: T2CONbits.TMR2ON=1;
 11880  00564E  84CA               	bsf	202,2,c	;volatile
 11881  005650                     
 11882                           ;pwm.c: 90: PIR1bits.TMR2IF=0;
 11883  005650  929E               	bcf	158,1,c	;volatile
 11884  005652                     l285:
 11885  005652  A29E               	btfss	158,1,c	;volatile
 11886  005654  EF2E  F02B         	goto	u8491
 11887  005658  EF30  F02B         	goto	u8490
 11888  00565C                     u8491:
 11889  00565C  EF29  F02B         	goto	l285
 11890  005660                     u8490:
 11891  005660                     
 11892                           ;pwm.c: 92: PIR1bits.TMR2IF=0;
 11893  005660  929E               	bcf	158,1,c	;volatile
 11894  005662                     l288:
 11895  005662  A29E               	btfss	158,1,c	;volatile
 11896  005664  EF36  F02B         	goto	u8501
 11897  005668  EF38  F02B         	goto	u8500
 11898  00566C                     u8501:
 11899  00566C  EF31  F02B         	goto	l288
 11900  005670                     u8500:
 11901  005670  0012               	return		;funcret
 11902  005672                     __end_of_PWM1_Start:
 11903                           	callstack 0
 11904                           
 11905 ;; *************** function _PWM1_Set_Duty *****************
 11906 ;; Defined at:
 11907 ;;		line 101 in file "pwm.c"
 11908 ;; Parameters:    Size  Location     Type
 11909 ;;  d               1    wreg     unsigned char 
 11910 ;; Auto vars:     Size  Location     Type
 11911 ;;  d               1   32[COMRAM] unsigned char 
 11912 ;;  temp            2   33[COMRAM] unsigned int 
 11913 ;; Return value:  Size  Location     Type
 11914 ;;                  1    wreg      void 
 11915 ;; Registers used:
 11916 ;;		wreg, status,2, status,0, cstack
 11917 ;; Tracked objects:
 11918 ;;		On entry : 0/0
 11919 ;;		On exit  : 0/0
 11920 ;;		Unchanged: 0/0
 11921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11922 ;;      Params:         0       0       0       0       0       0       0
 11923 ;;      Locals:         3       0       0       0       0       0       0
 11924 ;;      Temps:          2       0       0       0       0       0       0
 11925 ;;      Totals:         5       0       0       0       0       0       0
 11926 ;;Total ram usage:        5 bytes
 11927 ;; Hardware stack levels used:    1
 11928 ;; Hardware stack levels required when called:    3
 11929 ;; This function calls:
 11930 ;;		___lldiv
 11931 ;;		___lmul
 11932 ;; This function is called by:
 11933 ;;		_main
 11934 ;; This function uses a non-reentrant model
 11935 ;;
 11936                           
 11937                           	psect	text37
 11938  0051A6                     __ptext37:
 11939                           	callstack 0
 11940  0051A6                     _PWM1_Set_Duty:
 11941                           	callstack 27
 11942                           
 11943                           ;incstack = 0
 11944                           ;PWM1_Set_Duty@d stored from wreg
 11945  0051A6  6E21               	movwf	PWM1_Set_Duty@d^0,c
 11946  0051A8                     
 11947                           ;pwm.c: 103: unsigned int temp;;pwm.c: 105: temp=(((unsigned long)(d))*((PR2<<2)|0x03))/
      +                          255;
 11948  0051A8  5021               	movf	PWM1_Set_Duty@d^0,w,c
 11949  0051AA  6E06               	movwf	___lmul@multiplier^0,c
 11950  0051AC  6A07               	clrf	(___lmul@multiplier+1)^0,c
 11951  0051AE  6A08               	clrf	(___lmul@multiplier+2)^0,c
 11952  0051B0  6A09               	clrf	(___lmul@multiplier+3)^0,c
 11953  0051B2  50CB               	movf	203,w,c	;volatile
 11954  0051B4  6E1F               	movwf	??_PWM1_Set_Duty^0,c
 11955  0051B6  6A20               	clrf	(??_PWM1_Set_Duty+1)^0,c
 11956  0051B8  90D8               	bcf	status,0,c
 11957  0051BA  361F               	rlcf	??_PWM1_Set_Duty^0,f,c
 11958  0051BC  3620               	rlcf	(??_PWM1_Set_Duty+1)^0,f,c
 11959  0051BE  90D8               	bcf	status,0,c
 11960  0051C0  361F               	rlcf	??_PWM1_Set_Duty^0,f,c
 11961  0051C2  3620               	rlcf	(??_PWM1_Set_Duty+1)^0,f,c
 11962  0051C4  0E03               	movlw	3
 11963  0051C6  121F               	iorwf	??_PWM1_Set_Duty^0,f,c
 11964  0051C8  0E00               	movlw	0
 11965  0051CA  1220               	iorwf	(??_PWM1_Set_Duty+1)^0,f,c
 11966  0051CC  C01F  F00A         	movff	??_PWM1_Set_Duty,___lmul@multiplicand
 11967  0051D0  C020  F00B         	movff	??_PWM1_Set_Duty+1,___lmul@multiplicand+1
 11968  0051D4  0E00               	movlw	0
 11969  0051D6  BE0B               	btfsc	(___lmul@multiplicand+1)^0,7,c
 11970  0051D8  0EFF               	movlw	-1
 11971  0051DA  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
 11972  0051DC  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
 11973  0051DE  EC4C  F02A         	call	___lmul	;wreg free
 11974  0051E2  C006  F012         	movff	?___lmul,___lldiv@dividend
 11975  0051E6  C007  F013         	movff	?___lmul+1,___lldiv@dividend+1
 11976  0051EA  C008  F014         	movff	?___lmul+2,___lldiv@dividend+2
 11977  0051EE  C009  F015         	movff	?___lmul+3,___lldiv@dividend+3
 11978  0051F2  0EFF               	movlw	255
 11979  0051F4  6E16               	movwf	___lldiv@divisor^0,c
 11980  0051F6  0E00               	movlw	0
 11981  0051F8  6E17               	movwf	(___lldiv@divisor+1)^0,c
 11982  0051FA  0E00               	movlw	0
 11983  0051FC  6E18               	movwf	(___lldiv@divisor+2)^0,c
 11984  0051FE  0E00               	movlw	0
 11985  005200  6E19               	movwf	(___lldiv@divisor+3)^0,c
 11986  005202  EC81  F028         	call	___lldiv	;wreg free
 11987  005206  C012  F022         	movff	?___lldiv,PWM1_Set_Duty@temp
 11988  00520A  C013  F023         	movff	?___lldiv+1,PWM1_Set_Duty@temp+1
 11989  00520E                     
 11990                           ;pwm.c: 107: CCPR1L= (0x03FC&temp)>>2;
 11991  00520E  C022  F01F         	movff	PWM1_Set_Duty@temp,??_PWM1_Set_Duty
 11992  005212  C023  F020         	movff	PWM1_Set_Duty@temp+1,??_PWM1_Set_Duty+1
 11993  005216  90D8               	bcf	status,0,c
 11994  005218  3220               	rrcf	(??_PWM1_Set_Duty+1)^0,f,c
 11995  00521A  321F               	rrcf	??_PWM1_Set_Duty^0,f,c
 11996  00521C  90D8               	bcf	status,0,c
 11997  00521E  3220               	rrcf	(??_PWM1_Set_Duty+1)^0,f,c
 11998  005220  321F               	rrcf	??_PWM1_Set_Duty^0,f,c
 11999  005222  501F               	movf	??_PWM1_Set_Duty^0,w,c
 12000  005224  6EBE               	movwf	190,c	;volatile
 12001  005226                     
 12002                           ;pwm.c: 108: CCP1CON=((0x0003&temp)<<4)|0x0F;
 12003  005226  C022  F01F         	movff	PWM1_Set_Duty@temp,??_PWM1_Set_Duty
 12004  00522A  0E03               	movlw	3
 12005  00522C  161F               	andwf	??_PWM1_Set_Duty^0,f,c
 12006  00522E  381F               	swapf	??_PWM1_Set_Duty^0,w,c
 12007  005230  0BF0               	andlw	240
 12008  005232  090F               	iorlw	15
 12009  005234  6EBD               	movwf	189,c	;volatile
 12010  005236  0012               	return		;funcret
 12011  005238                     __end_of_PWM1_Set_Duty:
 12012                           	callstack 0
 12013                           
 12014 ;; *************** function ___lmul *****************
 12015 ;; Defined at:
 12016 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c"
 12017 ;; Parameters:    Size  Location     Type
 12018 ;;  multiplier      4    5[COMRAM] unsigned long 
 12019 ;;  multiplicand    4    9[COMRAM] unsigned long 
 12020 ;; Auto vars:     Size  Location     Type
 12021 ;;  product         4   13[COMRAM] unsigned long 
 12022 ;; Return value:  Size  Location     Type
 12023 ;;                  4    5[COMRAM] unsigned long 
 12024 ;; Registers used:
 12025 ;;		wreg, status,2, status,0
 12026 ;; Tracked objects:
 12027 ;;		On entry : 0/0
 12028 ;;		On exit  : 0/0
 12029 ;;		Unchanged: 0/0
 12030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12031 ;;      Params:         8       0       0       0       0       0       0
 12032 ;;      Locals:         4       0       0       0       0       0       0
 12033 ;;      Temps:          0       0       0       0       0       0       0
 12034 ;;      Totals:        12       0       0       0       0       0       0
 12035 ;;Total ram usage:       12 bytes
 12036 ;; Hardware stack levels used:    1
 12037 ;; Hardware stack levels required when called:    2
 12038 ;; This function calls:
 12039 ;;		Nothing
 12040 ;; This function is called by:
 12041 ;;		_PWM1_Set_Duty
 12042 ;; This function uses a non-reentrant model
 12043 ;;
 12044                           
 12045                           	psect	text38
 12046  005498                     __ptext38:
 12047                           	callstack 0
 12048  005498                     ___lmul:
 12049                           	callstack 27
 12050  005498  0E00               	movlw	0
 12051  00549A  6E0E               	movwf	___lmul@product^0,c
 12052  00549C  0E00               	movlw	0
 12053  00549E  6E0F               	movwf	(___lmul@product+1)^0,c
 12054  0054A0  0E00               	movlw	0
 12055  0054A2  6E10               	movwf	(___lmul@product+2)^0,c
 12056  0054A4  0E00               	movlw	0
 12057  0054A6  6E11               	movwf	(___lmul@product+3)^0,c
 12058  0054A8                     l7541:
 12059  0054A8  A006               	btfss	___lmul@multiplier^0,0,c
 12060  0054AA  EF59  F02A         	goto	u7991
 12061  0054AE  EF5B  F02A         	goto	u7990
 12062  0054B2                     u7991:
 12063  0054B2  EF63  F02A         	goto	l7545
 12064  0054B6                     u7990:
 12065  0054B6  500A               	movf	___lmul@multiplicand^0,w,c
 12066  0054B8  260E               	addwf	___lmul@product^0,f,c
 12067  0054BA  500B               	movf	(___lmul@multiplicand+1)^0,w,c
 12068  0054BC  220F               	addwfc	(___lmul@product+1)^0,f,c
 12069  0054BE  500C               	movf	(___lmul@multiplicand+2)^0,w,c
 12070  0054C0  2210               	addwfc	(___lmul@product+2)^0,f,c
 12071  0054C2  500D               	movf	(___lmul@multiplicand+3)^0,w,c
 12072  0054C4  2211               	addwfc	(___lmul@product+3)^0,f,c
 12073  0054C6                     l7545:
 12074  0054C6  90D8               	bcf	status,0,c
 12075  0054C8  360A               	rlcf	___lmul@multiplicand^0,f,c
 12076  0054CA  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
 12077  0054CC  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
 12078  0054CE  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
 12079  0054D0  90D8               	bcf	status,0,c
 12080  0054D2  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
 12081  0054D4  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
 12082  0054D6  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
 12083  0054D8  3206               	rrcf	___lmul@multiplier^0,f,c
 12084  0054DA  5006               	movf	___lmul@multiplier^0,w,c
 12085  0054DC  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
 12086  0054DE  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
 12087  0054E0  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
 12088  0054E2  A4D8               	btfss	status,2,c
 12089  0054E4  EF76  F02A         	goto	u8001
 12090  0054E8  EF78  F02A         	goto	u8000
 12091  0054EC                     u8001:
 12092  0054EC  EF54  F02A         	goto	l7541
 12093  0054F0                     u8000:
 12094  0054F0  C00E  F006         	movff	___lmul@product,?___lmul
 12095  0054F4  C00F  F007         	movff	___lmul@product+1,?___lmul+1
 12096  0054F8  C010  F008         	movff	___lmul@product+2,?___lmul+2
 12097  0054FC  C011  F009         	movff	___lmul@product+3,?___lmul+3
 12098  005500  0012               	return		;funcret
 12099  005502                     __end_of___lmul:
 12100                           	callstack 0
 12101                           
 12102 ;; *************** function ___lldiv *****************
 12103 ;; Defined at:
 12104 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
 12105 ;; Parameters:    Size  Location     Type
 12106 ;;  dividend        4   17[COMRAM] unsigned long 
 12107 ;;  divisor         4   21[COMRAM] unsigned long 
 12108 ;; Auto vars:     Size  Location     Type
 12109 ;;  quotient        4   25[COMRAM] unsigned long 
 12110 ;;  counter         1   29[COMRAM] unsigned char 
 12111 ;; Return value:  Size  Location     Type
 12112 ;;                  4   17[COMRAM] unsigned long 
 12113 ;; Registers used:
 12114 ;;		wreg, status,2, status,0
 12115 ;; Tracked objects:
 12116 ;;		On entry : 0/0
 12117 ;;		On exit  : 0/0
 12118 ;;		Unchanged: 0/0
 12119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12120 ;;      Params:         8       0       0       0       0       0       0
 12121 ;;      Locals:         5       0       0       0       0       0       0
 12122 ;;      Temps:          0       0       0       0       0       0       0
 12123 ;;      Totals:        13       0       0       0       0       0       0
 12124 ;;Total ram usage:       13 bytes
 12125 ;; Hardware stack levels used:    1
 12126 ;; Hardware stack levels required when called:    2
 12127 ;; This function calls:
 12128 ;;		Nothing
 12129 ;; This function is called by:
 12130 ;;		_PWM1_Set_Duty
 12131 ;;		_sprintf
 12132 ;; This function uses a non-reentrant model
 12133 ;;
 12134                           
 12135                           	psect	text39
 12136  005102                     __ptext39:
 12137                           	callstack 0
 12138  005102                     ___lldiv:
 12139                           	callstack 27
 12140  005102  0E00               	movlw	0
 12141  005104  6E1A               	movwf	___lldiv@quotient^0,c
 12142  005106  0E00               	movlw	0
 12143  005108  6E1B               	movwf	(___lldiv@quotient+1)^0,c
 12144  00510A  0E00               	movlw	0
 12145  00510C  6E1C               	movwf	(___lldiv@quotient+2)^0,c
 12146  00510E  0E00               	movlw	0
 12147  005110  6E1D               	movwf	(___lldiv@quotient+3)^0,c
 12148  005112  5016               	movf	___lldiv@divisor^0,w,c
 12149  005114  1017               	iorwf	(___lldiv@divisor+1)^0,w,c
 12150  005116  1018               	iorwf	(___lldiv@divisor+2)^0,w,c
 12151  005118  1019               	iorwf	(___lldiv@divisor+3)^0,w,c
 12152  00511A  B4D8               	btfsc	status,2,c
 12153  00511C  EF92  F028         	goto	u8011
 12154  005120  EF94  F028         	goto	u8010
 12155  005124                     u8011:
 12156  005124  EFCA  F028         	goto	l698
 12157  005128                     u8010:
 12158  005128  0E01               	movlw	1
 12159  00512A  6E1E               	movwf	___lldiv@counter^0,c
 12160  00512C  EF9E  F028         	goto	l7557
 12161  005130                     l7555:
 12162  005130  90D8               	bcf	status,0,c
 12163  005132  3616               	rlcf	___lldiv@divisor^0,f,c
 12164  005134  3617               	rlcf	(___lldiv@divisor+1)^0,f,c
 12165  005136  3618               	rlcf	(___lldiv@divisor+2)^0,f,c
 12166  005138  3619               	rlcf	(___lldiv@divisor+3)^0,f,c
 12167  00513A  2A1E               	incf	___lldiv@counter^0,f,c
 12168  00513C                     l7557:
 12169  00513C  AE19               	btfss	(___lldiv@divisor+3)^0,7,c
 12170  00513E  EFA3  F028         	goto	u8021
 12171  005142  EFA5  F028         	goto	u8020
 12172  005146                     u8021:
 12173  005146  EF98  F028         	goto	l7555
 12174  00514A                     u8020:
 12175  00514A                     l7559:
 12176  00514A  90D8               	bcf	status,0,c
 12177  00514C  361A               	rlcf	___lldiv@quotient^0,f,c
 12178  00514E  361B               	rlcf	(___lldiv@quotient+1)^0,f,c
 12179  005150  361C               	rlcf	(___lldiv@quotient+2)^0,f,c
 12180  005152  361D               	rlcf	(___lldiv@quotient+3)^0,f,c
 12181  005154  5016               	movf	___lldiv@divisor^0,w,c
 12182  005156  5C12               	subwf	___lldiv@dividend^0,w,c
 12183  005158  5017               	movf	(___lldiv@divisor+1)^0,w,c
 12184  00515A  5813               	subwfb	(___lldiv@dividend+1)^0,w,c
 12185  00515C  5018               	movf	(___lldiv@divisor+2)^0,w,c
 12186  00515E  5814               	subwfb	(___lldiv@dividend+2)^0,w,c
 12187  005160  5019               	movf	(___lldiv@divisor+3)^0,w,c
 12188  005162  5815               	subwfb	(___lldiv@dividend+3)^0,w,c
 12189  005164  A0D8               	btfss	status,0,c
 12190  005166  EFB7  F028         	goto	u8031
 12191  00516A  EFB9  F028         	goto	u8030
 12192  00516E                     u8031:
 12193  00516E  EFC2  F028         	goto	l7567
 12194  005172                     u8030:
 12195  005172  5016               	movf	___lldiv@divisor^0,w,c
 12196  005174  5E12               	subwf	___lldiv@dividend^0,f,c
 12197  005176  5017               	movf	(___lldiv@divisor+1)^0,w,c
 12198  005178  5A13               	subwfb	(___lldiv@dividend+1)^0,f,c
 12199  00517A  5018               	movf	(___lldiv@divisor+2)^0,w,c
 12200  00517C  5A14               	subwfb	(___lldiv@dividend+2)^0,f,c
 12201  00517E  5019               	movf	(___lldiv@divisor+3)^0,w,c
 12202  005180  5A15               	subwfb	(___lldiv@dividend+3)^0,f,c
 12203  005182  801A               	bsf	___lldiv@quotient^0,0,c
 12204  005184                     l7567:
 12205  005184  90D8               	bcf	status,0,c
 12206  005186  3219               	rrcf	(___lldiv@divisor+3)^0,f,c
 12207  005188  3218               	rrcf	(___lldiv@divisor+2)^0,f,c
 12208  00518A  3217               	rrcf	(___lldiv@divisor+1)^0,f,c
 12209  00518C  3216               	rrcf	___lldiv@divisor^0,f,c
 12210  00518E  2E1E               	decfsz	___lldiv@counter^0,f,c
 12211  005190  EFA5  F028         	goto	l7559
 12212  005194                     l698:
 12213  005194  C01A  F012         	movff	___lldiv@quotient,?___lldiv
 12214  005198  C01B  F013         	movff	___lldiv@quotient+1,?___lldiv+1
 12215  00519C  C01C  F014         	movff	___lldiv@quotient+2,?___lldiv+2
 12216  0051A0  C01D  F015         	movff	___lldiv@quotient+3,?___lldiv+3
 12217  0051A4  0012               	return		;funcret
 12218  0051A6                     __end_of___lldiv:
 12219                           	callstack 0
 12220                           
 12221 ;; *************** function _PWM1_Init *****************
 12222 ;; Defined at:
 12223 ;;		line 31 in file "pwm.c"
 12224 ;; Parameters:    Size  Location     Type
 12225 ;;  f               2   19[COMRAM] unsigned int 
 12226 ;; Auto vars:     Size  Location     Type
 12227 ;;  temp            2   25[COMRAM] unsigned int 
 12228 ;; Return value:  Size  Location     Type
 12229 ;;                  1    wreg      void 
 12230 ;; Registers used:
 12231 ;;		wreg, status,2, status,0, cstack
 12232 ;; Tracked objects:
 12233 ;;		On entry : 0/0
 12234 ;;		On exit  : 0/0
 12235 ;;		Unchanged: 0/0
 12236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12237 ;;      Params:         2       0       0       0       0       0       0
 12238 ;;      Locals:         2       0       0       0       0       0       0
 12239 ;;      Temps:          4       0       0       0       0       0       0
 12240 ;;      Totals:         8       0       0       0       0       0       0
 12241 ;;Total ram usage:        8 bytes
 12242 ;; Hardware stack levels used:    1
 12243 ;; Hardware stack levels required when called:    3
 12244 ;; This function calls:
 12245 ;;		___aldiv
 12246 ;; This function is called by:
 12247 ;;		_main
 12248 ;; This function uses a non-reentrant model
 12249 ;;
 12250                           
 12251                           	psect	text40
 12252  004B7C                     __ptext40:
 12253                           	callstack 0
 12254  004B7C                     _PWM1_Init:
 12255                           	callstack 27
 12256  004B7C                     
 12257                           ;pwm.c: 33: unsigned int temp;;pwm.c: 39: CCP1CON=0x00;
 12258  004B7C  0E00               	movlw	0
 12259  004B7E  6EBD               	movwf	189,c	;volatile
 12260  004B80                     
 12261                           ;pwm.c: 40: TRISCbits.TRISC2=1;
 12262  004B80  8494               	bsf	148,2,c	;volatile
 12263  004B82                     
 12264                           ;pwm.c: 41: TRISDbits.TRISD5=1;
 12265  004B82  8A95               	bsf	149,5,c	;volatile
 12266  004B84                     
 12267                           ;pwm.c: 43: PORTCbits.RC2=0;
 12268  004B84  9482               	bcf	130,2,c	;volatile
 12269  004B86                     
 12270                           ;pwm.c: 44: PORTDbits.RD5=0;
 12271  004B86  9A83               	bcf	131,5,c	;volatile
 12272                           
 12273                           ;pwm.c: 46: CCPR1L=0;
 12274  004B88  0E00               	movlw	0
 12275  004B8A  6EBE               	movwf	190,c	;volatile
 12276  004B8C                     
 12277                           ;pwm.c: 51: T2CONbits.TMR2ON=0;
 12278  004B8C  94CA               	bcf	202,2,c	;volatile
 12279  004B8E                     
 12280                           ;pwm.c: 53: temp=8000000/(f*4l);
 12281  004B8E  0E00               	movlw	0
 12282  004B90  6E06               	movwf	___aldiv@dividend^0,c
 12283  004B92  0E12               	movlw	18
 12284  004B94  6E07               	movwf	(___aldiv@dividend+1)^0,c
 12285  004B96  0E7A               	movlw	122
 12286  004B98  6E08               	movwf	(___aldiv@dividend+2)^0,c
 12287  004B9A  0E00               	movlw	0
 12288  004B9C  6E09               	movwf	(___aldiv@dividend+3)^0,c
 12289  004B9E  5014               	movf	PWM1_Init@f^0,w,c
 12290  004BA0  6E16               	movwf	??_PWM1_Init^0,c
 12291  004BA2  5015               	movf	(PWM1_Init@f+1)^0,w,c
 12292  004BA4  6E17               	movwf	(??_PWM1_Init+1)^0,c
 12293  004BA6  6A18               	clrf	(??_PWM1_Init+2)^0,c
 12294  004BA8  6A19               	clrf	(??_PWM1_Init+3)^0,c
 12295  004BAA  0E02               	movlw	2
 12296  004BAC                     u8455:
 12297  004BAC  90D8               	bcf	status,0,c
 12298  004BAE  3616               	rlcf	??_PWM1_Init^0,f,c
 12299  004BB0  3617               	rlcf	(??_PWM1_Init+1)^0,f,c
 12300  004BB2  3618               	rlcf	(??_PWM1_Init+2)^0,f,c
 12301  004BB4  3619               	rlcf	(??_PWM1_Init+3)^0,f,c
 12302  004BB6  2EE8               	decfsz	wreg,f,c
 12303  004BB8  EFD6  F025         	goto	u8455
 12304  004BBC  C016  F00A         	movff	??_PWM1_Init,___aldiv@divisor
 12305  004BC0  C017  F00B         	movff	??_PWM1_Init+1,___aldiv@divisor+1
 12306  004BC4  C018  F00C         	movff	??_PWM1_Init+2,___aldiv@divisor+2
 12307  004BC8  C019  F00D         	movff	??_PWM1_Init+3,___aldiv@divisor+3
 12308  004BCC  ECB0  F023         	call	___aldiv	;wreg free
 12309  004BD0  C006  F01A         	movff	?___aldiv,PWM1_Init@temp
 12310  004BD4  C007  F01B         	movff	?___aldiv+1,PWM1_Init@temp+1
 12311  004BD8                     
 12312                           ;pwm.c: 55: if (temp < 256)
 12313  004BD8  041B               	decf	(PWM1_Init@temp+1)^0,w,c
 12314  004BDA  B0D8               	btfsc	status,0,c
 12315  004BDC  EFF2  F025         	goto	u8461
 12316  004BE0  EFF4  F025         	goto	u8460
 12317  004BE4                     u8461:
 12318  004BE4  EFFA  F025         	goto	l7889
 12319  004BE8                     u8460:
 12320  004BE8                     
 12321                           ;pwm.c: 56: {;pwm.c: 57: T2CONbits.T2CKPS=0;
 12322  004BE8  0EFC               	movlw	-4
 12323  004BEA  16CA               	andwf	202,f,c	;volatile
 12324  004BEC                     
 12325                           ;pwm.c: 58: PR2=temp;
 12326  004BEC  C01A  FFCB         	movff	PWM1_Init@temp,4043	;volatile
 12327                           
 12328                           ;pwm.c: 59: }
 12329  004BF0  EF34  F026         	goto	l7899
 12330  004BF4                     l7889:
 12331                           
 12332                           ;pwm.c: 60: else if(temp/4 < 256 )
 12333  004BF4  C01A  F016         	movff	PWM1_Init@temp,??_PWM1_Init
 12334  004BF8  C01B  F017         	movff	PWM1_Init@temp+1,??_PWM1_Init+1
 12335  004BFC  90D8               	bcf	status,0,c
 12336  004BFE  3217               	rrcf	(??_PWM1_Init+1)^0,f,c
 12337  004C00  3216               	rrcf	??_PWM1_Init^0,f,c
 12338  004C02  90D8               	bcf	status,0,c
 12339  004C04  3217               	rrcf	(??_PWM1_Init+1)^0,f,c
 12340  004C06  3216               	rrcf	??_PWM1_Init^0,f,c
 12341  004C08  0417               	decf	(??_PWM1_Init+1)^0,w,c
 12342  004C0A  B0D8               	btfsc	status,0,c
 12343  004C0C  EF0A  F026         	goto	u8471
 12344  004C10  EF0C  F026         	goto	u8470
 12345  004C14                     u8471:
 12346  004C14  EF20  F026         	goto	l7895
 12347  004C18                     u8470:
 12348  004C18                     
 12349                           ;pwm.c: 61: {;pwm.c: 62: T2CONbits.T2CKPS=1;
 12350  004C18  50CA               	movf	202,w,c	;volatile
 12351  004C1A  0BFC               	andlw	-4
 12352  004C1C  0901               	iorlw	1
 12353  004C1E  6ECA               	movwf	202,c	;volatile
 12354  004C20                     
 12355                           ;pwm.c: 63: PR2=(temp+2)/4;
 12356  004C20  0E02               	movlw	2
 12357  004C22  241A               	addwf	PWM1_Init@temp^0,w,c
 12358  004C24  6E16               	movwf	??_PWM1_Init^0,c
 12359  004C26  0E00               	movlw	0
 12360  004C28  201B               	addwfc	(PWM1_Init@temp+1)^0,w,c
 12361  004C2A  6E17               	movwf	(??_PWM1_Init+1)^0,c
 12362  004C2C  90D8               	bcf	status,0,c
 12363  004C2E  3217               	rrcf	(??_PWM1_Init+1)^0,f,c
 12364  004C30  3216               	rrcf	??_PWM1_Init^0,f,c
 12365  004C32  90D8               	bcf	status,0,c
 12366  004C34  3217               	rrcf	(??_PWM1_Init+1)^0,f,c
 12367  004C36  3216               	rrcf	??_PWM1_Init^0,f,c
 12368  004C38  5016               	movf	??_PWM1_Init^0,w,c
 12369  004C3A  6ECB               	movwf	203,c	;volatile
 12370                           
 12371                           ;pwm.c: 64: }
 12372  004C3C  EF34  F026         	goto	l7899
 12373  004C40                     l7895:
 12374                           
 12375                           ;pwm.c: 65: else;pwm.c: 66: {;pwm.c: 67: PR2=(temp+8)/16;
 12376  004C40  0E08               	movlw	8
 12377  004C42  241A               	addwf	PWM1_Init@temp^0,w,c
 12378  004C44  6E16               	movwf	??_PWM1_Init^0,c
 12379  004C46  0E00               	movlw	0
 12380  004C48  201B               	addwfc	(PWM1_Init@temp+1)^0,w,c
 12381  004C4A  6E17               	movwf	(??_PWM1_Init+1)^0,c
 12382  004C4C  0E04               	movlw	4
 12383  004C4E  6E18               	movwf	(??_PWM1_Init+2)^0,c
 12384  004C50                     u8485:
 12385  004C50  90D8               	bcf	status,0,c
 12386  004C52  3217               	rrcf	(??_PWM1_Init+1)^0,f,c
 12387  004C54  3216               	rrcf	??_PWM1_Init^0,f,c
 12388  004C56  2E18               	decfsz	(??_PWM1_Init+2)^0,f,c
 12389  004C58  EF28  F026         	goto	u8485
 12390  004C5C  5016               	movf	??_PWM1_Init^0,w,c
 12391  004C5E  6ECB               	movwf	203,c	;volatile
 12392  004C60                     
 12393                           ;pwm.c: 68: T2CONbits.T2CKPS=2;
 12394  004C60  50CA               	movf	202,w,c	;volatile
 12395  004C62  0BFC               	andlw	-4
 12396  004C64  0902               	iorlw	2
 12397  004C66  6ECA               	movwf	202,c	;volatile
 12398  004C68                     l7899:
 12399                           
 12400                           ;pwm.c: 69: };pwm.c: 71: T2CONbits.T2OUTPS=0;
 12401  004C68  0E87               	movlw	-121
 12402  004C6A  16CA               	andwf	202,f,c	;volatile
 12403  004C6C  0012               	return		;funcret
 12404  004C6E                     __end_of_PWM1_Init:
 12405                           	callstack 0
 12406                           
 12407 ;; *************** function ___aldiv *****************
 12408 ;; Defined at:
 12409 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
 12410 ;; Parameters:    Size  Location     Type
 12411 ;;  dividend        4    5[COMRAM] long 
 12412 ;;  divisor         4    9[COMRAM] long 
 12413 ;; Auto vars:     Size  Location     Type
 12414 ;;  quotient        4   15[COMRAM] long 
 12415 ;;  sign            1   14[COMRAM] unsigned char 
 12416 ;;  counter         1   13[COMRAM] unsigned char 
 12417 ;; Return value:  Size  Location     Type
 12418 ;;                  4    5[COMRAM] long 
 12419 ;; Registers used:
 12420 ;;		wreg, status,2, status,0
 12421 ;; Tracked objects:
 12422 ;;		On entry : 0/0
 12423 ;;		On exit  : 0/0
 12424 ;;		Unchanged: 0/0
 12425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12426 ;;      Params:         8       0       0       0       0       0       0
 12427 ;;      Locals:         6       0       0       0       0       0       0
 12428 ;;      Temps:          0       0       0       0       0       0       0
 12429 ;;      Totals:        14       0       0       0       0       0       0
 12430 ;;Total ram usage:       14 bytes
 12431 ;; Hardware stack levels used:    1
 12432 ;; Hardware stack levels required when called:    2
 12433 ;; This function calls:
 12434 ;;		Nothing
 12435 ;; This function is called by:
 12436 ;;		_PWM1_Init
 12437 ;; This function uses a non-reentrant model
 12438 ;;
 12439                           
 12440                           	psect	text41
 12441  004760                     __ptext41:
 12442                           	callstack 0
 12443  004760                     ___aldiv:
 12444                           	callstack 27
 12445  004760  0E00               	movlw	0
 12446  004762  6E0F               	movwf	___aldiv@sign^0,c
 12447  004764  BE0D               	btfsc	(___aldiv@divisor+3)^0,7,c
 12448  004766  EFB9  F023         	goto	u8040
 12449  00476A  EFB7  F023         	goto	u8041
 12450  00476E                     u8041:
 12451  00476E  EFC3  F023         	goto	l7579
 12452  004772                     u8040:
 12453  004772  1E0D               	comf	(___aldiv@divisor+3)^0,f,c
 12454  004774  1E0C               	comf	(___aldiv@divisor+2)^0,f,c
 12455  004776  1E0B               	comf	(___aldiv@divisor+1)^0,f,c
 12456  004778  6C0A               	negf	___aldiv@divisor^0,c
 12457  00477A  0E00               	movlw	0
 12458  00477C  220B               	addwfc	(___aldiv@divisor+1)^0,f,c
 12459  00477E  220C               	addwfc	(___aldiv@divisor+2)^0,f,c
 12460  004780  220D               	addwfc	(___aldiv@divisor+3)^0,f,c
 12461  004782  0E01               	movlw	1
 12462  004784  6E0F               	movwf	___aldiv@sign^0,c
 12463  004786                     l7579:
 12464  004786  BE09               	btfsc	(___aldiv@dividend+3)^0,7,c
 12465  004788  EFCA  F023         	goto	u8050
 12466  00478C  EFC8  F023         	goto	u8051
 12467  004790                     u8051:
 12468  004790  EFD4  F023         	goto	l7585
 12469  004794                     u8050:
 12470  004794  1E09               	comf	(___aldiv@dividend+3)^0,f,c
 12471  004796  1E08               	comf	(___aldiv@dividend+2)^0,f,c
 12472  004798  1E07               	comf	(___aldiv@dividend+1)^0,f,c
 12473  00479A  6C06               	negf	___aldiv@dividend^0,c
 12474  00479C  0E00               	movlw	0
 12475  00479E  2207               	addwfc	(___aldiv@dividend+1)^0,f,c
 12476  0047A0  2208               	addwfc	(___aldiv@dividend+2)^0,f,c
 12477  0047A2  2209               	addwfc	(___aldiv@dividend+3)^0,f,c
 12478  0047A4  0E01               	movlw	1
 12479  0047A6  1A0F               	xorwf	___aldiv@sign^0,f,c
 12480  0047A8                     l7585:
 12481  0047A8  0E00               	movlw	0
 12482  0047AA  6E10               	movwf	___aldiv@quotient^0,c
 12483  0047AC  0E00               	movlw	0
 12484  0047AE  6E11               	movwf	(___aldiv@quotient+1)^0,c
 12485  0047B0  0E00               	movlw	0
 12486  0047B2  6E12               	movwf	(___aldiv@quotient+2)^0,c
 12487  0047B4  0E00               	movlw	0
 12488  0047B6  6E13               	movwf	(___aldiv@quotient+3)^0,c
 12489  0047B8  500A               	movf	___aldiv@divisor^0,w,c
 12490  0047BA  100B               	iorwf	(___aldiv@divisor+1)^0,w,c
 12491  0047BC  100C               	iorwf	(___aldiv@divisor+2)^0,w,c
 12492  0047BE  100D               	iorwf	(___aldiv@divisor+3)^0,w,c
 12493  0047C0  B4D8               	btfsc	status,2,c
 12494  0047C2  EFE5  F023         	goto	u8061
 12495  0047C6  EFE7  F023         	goto	u8060
 12496  0047CA                     u8061:
 12497  0047CA  EF1D  F024         	goto	l7607
 12498  0047CE                     u8060:
 12499  0047CE  0E01               	movlw	1
 12500  0047D0  6E0E               	movwf	___aldiv@counter^0,c
 12501  0047D2  EFF1  F023         	goto	l7593
 12502  0047D6                     l7591:
 12503  0047D6  90D8               	bcf	status,0,c
 12504  0047D8  360A               	rlcf	___aldiv@divisor^0,f,c
 12505  0047DA  360B               	rlcf	(___aldiv@divisor+1)^0,f,c
 12506  0047DC  360C               	rlcf	(___aldiv@divisor+2)^0,f,c
 12507  0047DE  360D               	rlcf	(___aldiv@divisor+3)^0,f,c
 12508  0047E0  2A0E               	incf	___aldiv@counter^0,f,c
 12509  0047E2                     l7593:
 12510  0047E2  AE0D               	btfss	(___aldiv@divisor+3)^0,7,c
 12511  0047E4  EFF6  F023         	goto	u8071
 12512  0047E8  EFF8  F023         	goto	u8070
 12513  0047EC                     u8071:
 12514  0047EC  EFEB  F023         	goto	l7591
 12515  0047F0                     u8070:
 12516  0047F0                     l7595:
 12517  0047F0  90D8               	bcf	status,0,c
 12518  0047F2  3610               	rlcf	___aldiv@quotient^0,f,c
 12519  0047F4  3611               	rlcf	(___aldiv@quotient+1)^0,f,c
 12520  0047F6  3612               	rlcf	(___aldiv@quotient+2)^0,f,c
 12521  0047F8  3613               	rlcf	(___aldiv@quotient+3)^0,f,c
 12522  0047FA  500A               	movf	___aldiv@divisor^0,w,c
 12523  0047FC  5C06               	subwf	___aldiv@dividend^0,w,c
 12524  0047FE  500B               	movf	(___aldiv@divisor+1)^0,w,c
 12525  004800  5807               	subwfb	(___aldiv@dividend+1)^0,w,c
 12526  004802  500C               	movf	(___aldiv@divisor+2)^0,w,c
 12527  004804  5808               	subwfb	(___aldiv@dividend+2)^0,w,c
 12528  004806  500D               	movf	(___aldiv@divisor+3)^0,w,c
 12529  004808  5809               	subwfb	(___aldiv@dividend+3)^0,w,c
 12530  00480A  A0D8               	btfss	status,0,c
 12531  00480C  EF0A  F024         	goto	u8081
 12532  004810  EF0C  F024         	goto	u8080
 12533  004814                     u8081:
 12534  004814  EF15  F024         	goto	l7603
 12535  004818                     u8080:
 12536  004818  500A               	movf	___aldiv@divisor^0,w,c
 12537  00481A  5E06               	subwf	___aldiv@dividend^0,f,c
 12538  00481C  500B               	movf	(___aldiv@divisor+1)^0,w,c
 12539  00481E  5A07               	subwfb	(___aldiv@dividend+1)^0,f,c
 12540  004820  500C               	movf	(___aldiv@divisor+2)^0,w,c
 12541  004822  5A08               	subwfb	(___aldiv@dividend+2)^0,f,c
 12542  004824  500D               	movf	(___aldiv@divisor+3)^0,w,c
 12543  004826  5A09               	subwfb	(___aldiv@dividend+3)^0,f,c
 12544  004828  8010               	bsf	___aldiv@quotient^0,0,c
 12545  00482A                     l7603:
 12546  00482A  90D8               	bcf	status,0,c
 12547  00482C  320D               	rrcf	(___aldiv@divisor+3)^0,f,c
 12548  00482E  320C               	rrcf	(___aldiv@divisor+2)^0,f,c
 12549  004830  320B               	rrcf	(___aldiv@divisor+1)^0,f,c
 12550  004832  320A               	rrcf	___aldiv@divisor^0,f,c
 12551  004834  2E0E               	decfsz	___aldiv@counter^0,f,c
 12552  004836  EFF8  F023         	goto	l7595
 12553  00483A                     l7607:
 12554  00483A  500F               	movf	___aldiv@sign^0,w,c
 12555  00483C  B4D8               	btfsc	status,2,c
 12556  00483E  EF23  F024         	goto	u8091
 12557  004842  EF25  F024         	goto	u8090
 12558  004846                     u8091:
 12559  004846  EF2D  F024         	goto	l7611
 12560  00484A                     u8090:
 12561  00484A  1E13               	comf	(___aldiv@quotient+3)^0,f,c
 12562  00484C  1E12               	comf	(___aldiv@quotient+2)^0,f,c
 12563  00484E  1E11               	comf	(___aldiv@quotient+1)^0,f,c
 12564  004850  6C10               	negf	___aldiv@quotient^0,c
 12565  004852  0E00               	movlw	0
 12566  004854  2211               	addwfc	(___aldiv@quotient+1)^0,f,c
 12567  004856  2212               	addwfc	(___aldiv@quotient+2)^0,f,c
 12568  004858  2213               	addwfc	(___aldiv@quotient+3)^0,f,c
 12569  00485A                     l7611:
 12570  00485A  C010  F006         	movff	___aldiv@quotient,?___aldiv
 12571  00485E  C011  F007         	movff	___aldiv@quotient+1,?___aldiv+1
 12572  004862  C012  F008         	movff	___aldiv@quotient+2,?___aldiv+2
 12573  004866  C013  F009         	movff	___aldiv@quotient+3,?___aldiv+3
 12574  00486A  0012               	return		;funcret
 12575  00486C                     __end_of___aldiv:
 12576                           	callstack 0
 12577                           
 12578 ;; *************** function _Lcd_Out *****************
 12579 ;; Defined at:
 12580 ;;		line 96 in file "flexlcd.h"
 12581 ;; Parameters:    Size  Location     Type
 12582 ;;  y               1    wreg     unsigned char 
 12583 ;;  x               1    8[COMRAM] unsigned char 
 12584 ;;  buffer          2    9[COMRAM] PTR const unsigned char 
 12585 ;;		 -> STR_6(11), strLcd2(50), strLcd1(50), 
 12586 ;; Auto vars:     Size  Location     Type
 12587 ;;  y               1   11[COMRAM] unsigned char 
 12588 ;;  data            1   12[COMRAM] unsigned char 
 12589 ;; Return value:  Size  Location     Type
 12590 ;;                  1    wreg      void 
 12591 ;; Registers used:
 12592 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12593 ;; Tracked objects:
 12594 ;;		On entry : 0/0
 12595 ;;		On exit  : 0/0
 12596 ;;		Unchanged: 0/0
 12597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12598 ;;      Params:         3       0       0       0       0       0       0
 12599 ;;      Locals:         2       0       0       0       0       0       0
 12600 ;;      Temps:          0       0       0       0       0       0       0
 12601 ;;      Totals:         5       0       0       0       0       0       0
 12602 ;;Total ram usage:        5 bytes
 12603 ;; Hardware stack levels used:    1
 12604 ;; Hardware stack levels required when called:    3
 12605 ;; This function calls:
 12606 ;;		_Lcd_Chr_CP
 12607 ;;		_Lcd_Cmd
 12608 ;; This function is called by:
 12609 ;;		_main
 12610 ;; This function uses a non-reentrant model
 12611 ;;
 12612                           
 12613                           	psect	text42
 12614  004EF0                     __ptext42:
 12615                           	callstack 0
 12616  004EF0                     _Lcd_Out:
 12617                           	callstack 27
 12618                           
 12619                           ;incstack = 0
 12620                           ;Lcd_Out@y stored from wreg
 12621  004EF0  6E0C               	movwf	Lcd_Out@y^0,c
 12622  004EF2                     
 12623                           ;flexlcd.h: 98: unsigned char data;;flexlcd.h: 99: switch (y)
 12624  004EF2  EF8F  F027         	goto	l7859
 12625  004EF6                     l7849:
 12626  004EF6  5009               	movf	Lcd_Out@x^0,w,c
 12627  004EF8  0F80               	addlw	128
 12628  004EFA  6E0D               	movwf	Lcd_Out@data^0,c
 12629  004EFC  EFA2  F027         	goto	l7861
 12630  004F00                     l7851:
 12631  004F00  5009               	movf	Lcd_Out@x^0,w,c
 12632  004F02  0FC0               	addlw	192
 12633  004F04  6E0D               	movwf	Lcd_Out@data^0,c
 12634  004F06  EFA2  F027         	goto	l7861
 12635  004F0A                     l7853:
 12636  004F0A  5009               	movf	Lcd_Out@x^0,w,c
 12637  004F0C  0F94               	addlw	148
 12638  004F0E  6E0D               	movwf	Lcd_Out@data^0,c
 12639  004F10  EFA2  F027         	goto	l7861
 12640  004F14                     l7855:
 12641  004F14  5009               	movf	Lcd_Out@x^0,w,c
 12642  004F16  0FD4               	addlw	212
 12643  004F18  6E0D               	movwf	Lcd_Out@data^0,c
 12644  004F1A  EFA2  F027         	goto	l7861
 12645  004F1E                     l7859:
 12646  004F1E  500C               	movf	Lcd_Out@y^0,w,c
 12647                           
 12648                           ; Switch size 1, requested type "simple"
 12649                           ; Number of cases is 4, Range of values is 1 to 4
 12650                           ; switch strategies available:
 12651                           ; Name         Instructions Cycles
 12652                           ; simple_byte           13     7 (average)
 12653                           ;	Chosen strategy is simple_byte
 12654  004F20  0A01               	xorlw	1	; case 1
 12655  004F22  B4D8               	btfsc	status,2,c
 12656  004F24  EF7B  F027         	goto	l7849
 12657  004F28  0A03               	xorlw	3	; case 2
 12658  004F2A  B4D8               	btfsc	status,2,c
 12659  004F2C  EF80  F027         	goto	l7851
 12660  004F30  0A01               	xorlw	1	; case 3
 12661  004F32  B4D8               	btfsc	status,2,c
 12662  004F34  EF85  F027         	goto	l7853
 12663  004F38  0A07               	xorlw	7	; case 4
 12664  004F3A  B4D8               	btfsc	status,2,c
 12665  004F3C  EF8A  F027         	goto	l7855
 12666  004F40  EFA2  F027         	goto	l7861
 12667  004F44                     l7861:
 12668                           
 12669                           ;flexlcd.h: 107: Lcd_Cmd(data);
 12670  004F44  500D               	movf	Lcd_Out@data^0,w,c
 12671  004F46  ECD6  F020         	call	_Lcd_Cmd
 12672                           
 12673                           ;flexlcd.h: 108: while(*buffer)
 12674  004F4A  EFBB  F027         	goto	l7867
 12675  004F4E                     l7863:
 12676                           
 12677                           ;flexlcd.h: 109: {;flexlcd.h: 110: Lcd_Chr_CP(*buffer);
 12678  004F4E  C00A  FFF6         	movff	Lcd_Out@buffer,tblptrl
 12679  004F52  C00B  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
 12680  004F56  6AF8               	clrf	tblptru,c
 12681  004F58  0E05               	movlw	(high __ramtop+-1)
 12682  004F5A  64F7               	cpfsgt	tblptrh,c
 12683  004F5C  D003               	bra	u8427
 12684  004F5E  0008               	tblrd		*
 12685  004F60  50F5               	movf	tablat,w,c
 12686  004F62  D005               	bra	u8420
 12687  004F64                     u8427:
 12688  004F64  CFF6 FFE1          	movff	tblptrl,fsr1l
 12689  004F68  CFF7 FFE2          	movff	tblptrh,fsr1h
 12690  004F6C  50E7               	movf	indf1,w,c
 12691  004F6E                     u8420:
 12692  004F6E  EC3C  F020         	call	_Lcd_Chr_CP
 12693  004F72                     
 12694                           ;flexlcd.h: 111: buffer++;
 12695  004F72  4A0A               	infsnz	Lcd_Out@buffer^0,f,c
 12696  004F74  2A0B               	incf	(Lcd_Out@buffer+1)^0,f,c
 12697  004F76                     l7867:
 12698  004F76  C00A  FFF6         	movff	Lcd_Out@buffer,tblptrl
 12699  004F7A  C00B  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
 12700  004F7E  6AF8               	clrf	tblptru,c
 12701  004F80  0E05               	movlw	(high __ramtop+-1)
 12702  004F82  64F7               	cpfsgt	tblptrh,c
 12703  004F84  D003               	bra	u8437
 12704  004F86  0008               	tblrd		*
 12705  004F88  50F5               	movf	tablat,w,c
 12706  004F8A  D005               	bra	u8430
 12707  004F8C                     u8437:
 12708  004F8C  CFF6 FFE1          	movff	tblptrl,fsr1l
 12709  004F90  CFF7 FFE2          	movff	tblptrh,fsr1h
 12710  004F94  50E7               	movf	indf1,w,c
 12711  004F96                     u8430:
 12712  004F96  0900               	iorlw	0
 12713  004F98  A4D8               	btfss	status,2,c
 12714  004F9A  EFD1  F027         	goto	u8441
 12715  004F9E  EFD3  F027         	goto	u8440
 12716  004FA2                     u8441:
 12717  004FA2  EFA7  F027         	goto	l7863
 12718  004FA6                     u8440:
 12719  004FA6  0012               	return		;funcret
 12720  004FA8                     __end_of_Lcd_Out:
 12721                           	callstack 0
 12722                           
 12723 ;; *************** function _Lcd_Chr_CP *****************
 12724 ;; Defined at:
 12725 ;;		line 138 in file "flexlcd.h"
 12726 ;; Parameters:    Size  Location     Type
 12727 ;;  data            1    wreg     unsigned char 
 12728 ;; Auto vars:     Size  Location     Type
 12729 ;;  data            1    7[COMRAM] unsigned char 
 12730 ;; Return value:  Size  Location     Type
 12731 ;;                  1    wreg      void 
 12732 ;; Registers used:
 12733 ;;		wreg, status,2, status,0
 12734 ;; Tracked objects:
 12735 ;;		On entry : 0/0
 12736 ;;		On exit  : 0/0
 12737 ;;		Unchanged: 0/0
 12738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12739 ;;      Params:         0       0       0       0       0       0       0
 12740 ;;      Locals:         1       0       0       0       0       0       0
 12741 ;;      Temps:          2       0       0       0       0       0       0
 12742 ;;      Totals:         3       0       0       0       0       0       0
 12743 ;;Total ram usage:        3 bytes
 12744 ;; Hardware stack levels used:    1
 12745 ;; Hardware stack levels required when called:    2
 12746 ;; This function calls:
 12747 ;;		Nothing
 12748 ;; This function is called by:
 12749 ;;		_Lcd_Out
 12750 ;;		_Lcd_Out2
 12751 ;; This function uses a non-reentrant model
 12752 ;;
 12753                           
 12754                           	psect	text43
 12755  004078                     __ptext43:
 12756                           	callstack 0
 12757  004078                     _Lcd_Chr_CP:
 12758                           	callstack 27
 12759                           
 12760                           ;incstack = 0
 12761                           ;Lcd_Chr_CP@data stored from wreg
 12762  004078  6E08               	movwf	Lcd_Chr_CP@data^0,c
 12763  00407A                     
 12764                           ;flexlcd.h: 139: PORTEbits.RE1 = 0; PORTEbits.RE2 = 1;
 12765  00407A  9284               	bcf	132,1,c	;volatile
 12766  00407C  8484               	bsf	132,2,c	;volatile
 12767  00407E                     
 12768                           ;flexlcd.h: 140: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
 12769  00407E  6A06               	clrf	??_Lcd_Chr_CP^0,c
 12770  004080  AE08               	btfss	Lcd_Chr_CP@data^0,7,c
 12771  004082  D001               	bra	u7315
 12772  004084  2A06               	incf	??_Lcd_Chr_CP^0,f,c
 12773  004086                     u7315:
 12774  004086  0E01               	movlw	1
 12775  004088  1606               	andwf	??_Lcd_Chr_CP^0,f,c
 12776  00408A  3206               	rrcf	??_Lcd_Chr_CP^0,f,c
 12777  00408C  3206               	rrcf	??_Lcd_Chr_CP^0,f,c
 12778  00408E  5083               	movf	131,w,c	;volatile
 12779  004090  1806               	xorwf	??_Lcd_Chr_CP^0,w,c
 12780  004092  0B7F               	andlw	-129
 12781  004094  1806               	xorwf	??_Lcd_Chr_CP^0,w,c
 12782  004096  6E83               	movwf	131,c	;volatile
 12783  004098  C008  F006         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 12784  00409C  0E06               	movlw	6
 12785  00409E  6E07               	movwf	(??_Lcd_Chr_CP+1)^0,c
 12786  0040A0                     u7325:
 12787  0040A0  90D8               	bcf	status,0,c
 12788  0040A2  3206               	rrcf	??_Lcd_Chr_CP^0,f,c
 12789  0040A4  2E07               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
 12790  0040A6  EF50  F020         	goto	u7325
 12791  0040AA  0E01               	movlw	1
 12792  0040AC  1606               	andwf	??_Lcd_Chr_CP^0,f,c
 12793  0040AE  3A06               	swapf	??_Lcd_Chr_CP^0,f,c
 12794  0040B0  4606               	rlncf	??_Lcd_Chr_CP^0,f,c
 12795  0040B2  4606               	rlncf	??_Lcd_Chr_CP^0,f,c
 12796  0040B4  5083               	movf	131,w,c	;volatile
 12797  0040B6  1806               	xorwf	??_Lcd_Chr_CP^0,w,c
 12798  0040B8  0BBF               	andlw	-65
 12799  0040BA  1806               	xorwf	??_Lcd_Chr_CP^0,w,c
 12800  0040BC  6E83               	movwf	131,c	;volatile
 12801                           
 12802                           ;flexlcd.h: 141: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
 12803  0040BE  C008  F006         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 12804  0040C2  0E05               	movlw	5
 12805  0040C4  6E07               	movwf	(??_Lcd_Chr_CP+1)^0,c
 12806  0040C6                     u7335:
 12807  0040C6  90D8               	bcf	status,0,c
 12808  0040C8  3206               	rrcf	??_Lcd_Chr_CP^0,f,c
 12809  0040CA  2E07               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
 12810  0040CC  EF63  F020         	goto	u7335
 12811  0040D0  0E01               	movlw	1
 12812  0040D2  1606               	andwf	??_Lcd_Chr_CP^0,f,c
 12813  0040D4  3A06               	swapf	??_Lcd_Chr_CP^0,f,c
 12814  0040D6  4606               	rlncf	??_Lcd_Chr_CP^0,f,c
 12815  0040D8  5083               	movf	131,w,c	;volatile
 12816  0040DA  1806               	xorwf	??_Lcd_Chr_CP^0,w,c
 12817  0040DC  0BDF               	andlw	-33
 12818  0040DE  1806               	xorwf	??_Lcd_Chr_CP^0,w,c
 12819  0040E0  6E83               	movwf	131,c	;volatile
 12820  0040E2  C008  F006         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 12821  0040E6  3A06               	swapf	??_Lcd_Chr_CP^0,f,c
 12822  0040E8  0E0F               	movlw	15
 12823  0040EA  1606               	andwf	??_Lcd_Chr_CP^0,f,c
 12824  0040EC  0E01               	movlw	1
 12825  0040EE  1606               	andwf	??_Lcd_Chr_CP^0,f,c
 12826  0040F0  3A06               	swapf	??_Lcd_Chr_CP^0,f,c
 12827  0040F2  5083               	movf	131,w,c	;volatile
 12828  0040F4  1806               	xorwf	??_Lcd_Chr_CP^0,w,c
 12829  0040F6  0BEF               	andlw	-17
 12830  0040F8  1806               	xorwf	??_Lcd_Chr_CP^0,w,c
 12831  0040FA  6E83               	movwf	131,c	;volatile
 12832  0040FC                     
 12833                           ;flexlcd.h: 142: _delay(10);
 12834  0040FC  0E03               	movlw	3
 12835  0040FE                     u9527:
 12836  0040FE  2EE8               	decfsz	wreg,f,c
 12837  004100  D7FE               	bra	u9527
 12838  004102  F000               	nop	
 12839  004104                     
 12840                           ;flexlcd.h: 143: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
 12841  004104  8284               	bsf	132,1,c	;volatile
 12842  004106  0E03               	movlw	3
 12843  004108                     u9537:
 12844  004108  2EE8               	decfsz	wreg,f,c
 12845  00410A  D7FE               	bra	u9537
 12846  00410C  F000               	nop	
 12847  00410E  9284               	bcf	132,1,c	;volatile
 12848                           
 12849                           ;flexlcd.h: 144: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
 12850  004110  C008  F006         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 12851  004114  90D8               	bcf	status,0,c
 12852  004116  3206               	rrcf	??_Lcd_Chr_CP^0,f,c
 12853  004118  90D8               	bcf	status,0,c
 12854  00411A  3206               	rrcf	??_Lcd_Chr_CP^0,f,c
 12855  00411C  90D8               	bcf	status,0,c
 12856  00411E  3206               	rrcf	??_Lcd_Chr_CP^0,f,c
 12857  004120  0E01               	movlw	1
 12858  004122  1606               	andwf	??_Lcd_Chr_CP^0,f,c
 12859  004124  3206               	rrcf	??_Lcd_Chr_CP^0,f,c
 12860  004126  3206               	rrcf	??_Lcd_Chr_CP^0,f,c
 12861  004128  5083               	movf	131,w,c	;volatile
 12862  00412A  1806               	xorwf	??_Lcd_Chr_CP^0,w,c
 12863  00412C  0B7F               	andlw	-129
 12864  00412E  1806               	xorwf	??_Lcd_Chr_CP^0,w,c
 12865  004130  6E83               	movwf	131,c	;volatile
 12866  004132  C008  F006         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 12867  004136  90D8               	bcf	status,0,c
 12868  004138  3206               	rrcf	??_Lcd_Chr_CP^0,f,c
 12869  00413A  90D8               	bcf	status,0,c
 12870  00413C  3206               	rrcf	??_Lcd_Chr_CP^0,f,c
 12871  00413E  0E01               	movlw	1
 12872  004140  1606               	andwf	??_Lcd_Chr_CP^0,f,c
 12873  004142  3A06               	swapf	??_Lcd_Chr_CP^0,f,c
 12874  004144  4606               	rlncf	??_Lcd_Chr_CP^0,f,c
 12875  004146  4606               	rlncf	??_Lcd_Chr_CP^0,f,c
 12876  004148  5083               	movf	131,w,c	;volatile
 12877  00414A  1806               	xorwf	??_Lcd_Chr_CP^0,w,c
 12878  00414C  0BBF               	andlw	-65
 12879  00414E  1806               	xorwf	??_Lcd_Chr_CP^0,w,c
 12880  004150  6E83               	movwf	131,c	;volatile
 12881                           
 12882                           ;flexlcd.h: 145: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
 12883  004152  C008  F006         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 12884  004156  90D8               	bcf	status,0,c
 12885  004158  3206               	rrcf	??_Lcd_Chr_CP^0,f,c
 12886  00415A  0E01               	movlw	1
 12887  00415C  1606               	andwf	??_Lcd_Chr_CP^0,f,c
 12888  00415E  3A06               	swapf	??_Lcd_Chr_CP^0,f,c
 12889  004160  4606               	rlncf	??_Lcd_Chr_CP^0,f,c
 12890  004162  5083               	movf	131,w,c	;volatile
 12891  004164  1806               	xorwf	??_Lcd_Chr_CP^0,w,c
 12892  004166  0BDF               	andlw	-33
 12893  004168  1806               	xorwf	??_Lcd_Chr_CP^0,w,c
 12894  00416A  6E83               	movwf	131,c	;volatile
 12895  00416C  C008  F006         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
 12896  004170  0E01               	movlw	1
 12897  004172  1606               	andwf	??_Lcd_Chr_CP^0,f,c
 12898  004174  3A06               	swapf	??_Lcd_Chr_CP^0,f,c
 12899  004176  5083               	movf	131,w,c	;volatile
 12900  004178  1806               	xorwf	??_Lcd_Chr_CP^0,w,c
 12901  00417A  0BEF               	andlw	-17
 12902  00417C  1806               	xorwf	??_Lcd_Chr_CP^0,w,c
 12903  00417E  6E83               	movwf	131,c	;volatile
 12904  004180                     
 12905                           ;flexlcd.h: 146: _delay(10);
 12906  004180  0E03               	movlw	3
 12907  004182                     u9547:
 12908  004182  2EE8               	decfsz	wreg,f,c
 12909  004184  D7FE               	bra	u9547
 12910  004186  F000               	nop	
 12911  004188                     
 12912                           ;flexlcd.h: 147: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
 12913  004188  8284               	bsf	132,1,c	;volatile
 12914  00418A  0E03               	movlw	3
 12915  00418C                     u9557:
 12916  00418C  2EE8               	decfsz	wreg,f,c
 12917  00418E  D7FE               	bra	u9557
 12918  004190  F000               	nop	
 12919  004192  9284               	bcf	132,1,c	;volatile
 12920  004194                     
 12921                           ;flexlcd.h: 148: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
 12922  004194  0E03               	movlw	3
 12923  004196                     u9567:
 12924  004196  2EE8               	decfsz	wreg,f,c
 12925  004198  D7FE               	bra	u9567
 12926  00419A  F000               	nop	
 12927  00419C  0E0F               	movlw	15
 12928  00419E  6E06               	movwf	??_Lcd_Chr_CP^0,c
 12929  0041A0  0E48               	movlw	72
 12930  0041A2                     u9577:
 12931  0041A2  2EE8               	decfsz	wreg,f,c
 12932  0041A4  D7FE               	bra	u9577
 12933  0041A6  2E06               	decfsz	??_Lcd_Chr_CP^0,f,c
 12934  0041A8  D7FC               	bra	u9577
 12935  0041AA  0012               	return		;funcret
 12936  0041AC                     __end_of_Lcd_Chr_CP:
 12937                           	callstack 0
 12938                           
 12939 ;; *************** function _Lcd_Init *****************
 12940 ;; Defined at:
 12941 ;;		line 54 in file "flexlcd.h"
 12942 ;; Parameters:    Size  Location     Type
 12943 ;;		None
 12944 ;; Auto vars:     Size  Location     Type
 12945 ;;  data            1    9[COMRAM] unsigned char 
 12946 ;; Return value:  Size  Location     Type
 12947 ;;                  1    wreg      void 
 12948 ;; Registers used:
 12949 ;;		wreg, status,2, status,0, cstack
 12950 ;; Tracked objects:
 12951 ;;		On entry : 0/0
 12952 ;;		On exit  : 0/0
 12953 ;;		Unchanged: 0/0
 12954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12955 ;;      Params:         0       0       0       0       0       0       0
 12956 ;;      Locals:         1       0       0       0       0       0       0
 12957 ;;      Temps:          1       0       0       0       0       0       0
 12958 ;;      Totals:         2       0       0       0       0       0       0
 12959 ;;Total ram usage:        2 bytes
 12960 ;; Hardware stack levels used:    1
 12961 ;; Hardware stack levels required when called:    3
 12962 ;; This function calls:
 12963 ;;		_Lcd_Cmd
 12964 ;; This function is called by:
 12965 ;;		_main
 12966 ;; This function uses a non-reentrant model
 12967 ;;
 12968                           
 12969                           	psect	text44
 12970  004650                     __ptext44:
 12971                           	callstack 0
 12972  004650                     _Lcd_Init:
 12973                           	callstack 27
 12974  004650                     
 12975                           ;flexlcd.h: 55: unsigned char data;;flexlcd.h: 56: TRISDbits.TRISD7 = 0;
 12976  004650  9E95               	bcf	149,7,c	;volatile
 12977                           
 12978                           ;flexlcd.h: 57: TRISDbits.TRISD6 = 0;
 12979  004652  9C95               	bcf	149,6,c	;volatile
 12980                           
 12981                           ;flexlcd.h: 58: TRISDbits.TRISD5 = 0;
 12982  004654  9A95               	bcf	149,5,c	;volatile
 12983                           
 12984                           ;flexlcd.h: 59: TRISDbits.TRISD4 = 0;
 12985  004656  9895               	bcf	149,4,c	;volatile
 12986                           
 12987                           ;flexlcd.h: 60: TRISEbits.TRISE2 = 0;
 12988  004658  9496               	bcf	150,2,c	;volatile
 12989                           
 12990                           ;flexlcd.h: 61: TRISEbits.TRISE1 = 0;
 12991  00465A  9296               	bcf	150,1,c	;volatile
 12992                           
 12993                           ;flexlcd.h: 62: PORTDbits.RD7 = 0;
 12994  00465C  9E83               	bcf	131,7,c	;volatile
 12995                           
 12996                           ;flexlcd.h: 63: PORTDbits.RD6 = 0;
 12997  00465E  9C83               	bcf	131,6,c	;volatile
 12998                           
 12999                           ;flexlcd.h: 64: PORTDbits.RD5 = 0;
 13000  004660  9A83               	bcf	131,5,c	;volatile
 13001                           
 13002                           ;flexlcd.h: 65: PORTDbits.RD4 = 0;
 13003  004662  9883               	bcf	131,4,c	;volatile
 13004                           
 13005                           ;flexlcd.h: 66: PORTEbits.RE1 = 0;
 13006  004664  9284               	bcf	132,1,c	;volatile
 13007                           
 13008                           ;flexlcd.h: 67: PORTEbits.RE2 = 0;
 13009  004666  9484               	bcf	132,2,c	;volatile
 13010  004668                     
 13011                           ;flexlcd.h: 68: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 13012  004668  0E0F               	movlw	15
 13013  00466A  6E09               	movwf	??_Lcd_Init^0,c
 13014  00466C  0E48               	movlw	72
 13015  00466E                     u9587:
 13016  00466E  2EE8               	decfsz	wreg,f,c
 13017  004670  D7FE               	bra	u9587
 13018  004672  2E09               	decfsz	??_Lcd_Init^0,f,c
 13019  004674  D7FC               	bra	u9587
 13020                           
 13021                           ;flexlcd.h: 69: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 13022  004676  0E0F               	movlw	15
 13023  004678  6E09               	movwf	??_Lcd_Init^0,c
 13024  00467A  0E48               	movlw	72
 13025  00467C                     u9597:
 13026  00467C  2EE8               	decfsz	wreg,f,c
 13027  00467E  D7FE               	bra	u9597
 13028  004680  2E09               	decfsz	??_Lcd_Init^0,f,c
 13029  004682  D7FC               	bra	u9597
 13030                           
 13031                           ;flexlcd.h: 70: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 13032  004684  0E0F               	movlw	15
 13033  004686  6E09               	movwf	??_Lcd_Init^0,c
 13034  004688  0E48               	movlw	72
 13035  00468A                     u9607:
 13036  00468A  2EE8               	decfsz	wreg,f,c
 13037  00468C  D7FE               	bra	u9607
 13038  00468E  2E09               	decfsz	??_Lcd_Init^0,f,c
 13039  004690  D7FC               	bra	u9607
 13040                           
 13041                           ;flexlcd.h: 71: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 13042  004692  0E0F               	movlw	15
 13043  004694  6E09               	movwf	??_Lcd_Init^0,c
 13044  004696  0E48               	movlw	72
 13045  004698                     u9617:
 13046  004698  2EE8               	decfsz	wreg,f,c
 13047  00469A  D7FE               	bra	u9617
 13048  00469C  2E09               	decfsz	??_Lcd_Init^0,f,c
 13049  00469E  D7FC               	bra	u9617
 13050                           
 13051                           ;flexlcd.h: 72: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 13052  0046A0  0E0F               	movlw	15
 13053  0046A2  6E09               	movwf	??_Lcd_Init^0,c
 13054  0046A4  0E48               	movlw	72
 13055  0046A6                     u9627:
 13056  0046A6  2EE8               	decfsz	wreg,f,c
 13057  0046A8  D7FE               	bra	u9627
 13058  0046AA  2E09               	decfsz	??_Lcd_Init^0,f,c
 13059  0046AC  D7FC               	bra	u9627
 13060                           
 13061                           ;flexlcd.h: 73: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 13062  0046AE  0E0F               	movlw	15
 13063  0046B0  6E09               	movwf	??_Lcd_Init^0,c
 13064  0046B2  0E48               	movlw	72
 13065  0046B4                     u9637:
 13066  0046B4  2EE8               	decfsz	wreg,f,c
 13067  0046B6  D7FE               	bra	u9637
 13068  0046B8  2E09               	decfsz	??_Lcd_Init^0,f,c
 13069  0046BA  D7FC               	bra	u9637
 13070  0046BC                     
 13071                           ;flexlcd.h: 74: for(data = 1; data < 4; data ++)
 13072  0046BC  0E01               	movlw	1
 13073  0046BE  6E0A               	movwf	Lcd_Init@data^0,c
 13074  0046C0                     l114:
 13075                           
 13076                           ;flexlcd.h: 75: {;flexlcd.h: 76: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 1; PORTEbits.RE1 = 0;
 13077  0046C0  9E83               	bcf	131,7,c	;volatile
 13078  0046C2  9C83               	bcf	131,6,c	;volatile
 13079  0046C4  8A83               	bsf	131,5,c	;volatile
 13080  0046C6  8883               	bsf	131,4,c	;volatile
 13081  0046C8  9284               	bcf	132,1,c	;volatile
 13082                           
 13083                           ;flexlcd.h: 77: PORTEbits.RE2 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 1;
 13084  0046CA  9484               	bcf	132,2,c	;volatile
 13085  0046CC  9E83               	bcf	131,7,c	;volatile
 13086  0046CE  9C83               	bcf	131,6,c	;volatile
 13087  0046D0  8A83               	bsf	131,5,c	;volatile
 13088  0046D2  8883               	bsf	131,4,c	;volatile
 13089                           
 13090                           ;flexlcd.h: 78: PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
 13091  0046D4  8284               	bsf	132,1,c	;volatile
 13092  0046D6  9484               	bcf	132,2,c	;volatile
 13093  0046D8                     
 13094                           ;flexlcd.h: 79: _delay((unsigned long)((5)*(8000000/4000000.0)));
 13095  0046D8  0E03               	movlw	3
 13096  0046DA                     u9647:
 13097  0046DA  2EE8               	decfsz	wreg,f,c
 13098  0046DC  D7FE               	bra	u9647
 13099  0046DE  F000               	nop	
 13100  0046E0                     
 13101                           ;flexlcd.h: 80: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           1; PORTEbits.RE1 = 0;
 13102  0046E0  9E83               	bcf	131,7,c	;volatile
 13103  0046E2  9C83               	bcf	131,6,c	;volatile
 13104  0046E4  8A83               	bsf	131,5,c	;volatile
 13105  0046E6  8883               	bsf	131,4,c	;volatile
 13106  0046E8  9284               	bcf	132,1,c	;volatile
 13107  0046EA                     
 13108                           ;flexlcd.h: 81: PORTEbits.RE2 = 0;
 13109  0046EA  9484               	bcf	132,2,c	;volatile
 13110                           
 13111                           ;flexlcd.h: 82: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 13112  0046EC  0E0F               	movlw	15
 13113  0046EE  6E09               	movwf	??_Lcd_Init^0,c
 13114  0046F0  0E48               	movlw	72
 13115  0046F2                     u9657:
 13116  0046F2  2EE8               	decfsz	wreg,f,c
 13117  0046F4  D7FE               	bra	u9657
 13118  0046F6  2E09               	decfsz	??_Lcd_Init^0,f,c
 13119  0046F8  D7FC               	bra	u9657
 13120  0046FA  2A0A               	incf	Lcd_Init@data^0,f,c
 13121  0046FC  0E03               	movlw	3
 13122  0046FE  640A               	cpfsgt	Lcd_Init@data^0,c
 13123  004700  EF84  F023         	goto	u8411
 13124  004704  EF86  F023         	goto	u8410
 13125  004708                     u8411:
 13126  004708  EF60  F023         	goto	l114
 13127  00470C                     u8410:
 13128  00470C                     
 13129                           ;flexlcd.h: 83: };flexlcd.h: 84: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
 13130  00470C  9E83               	bcf	131,7,c	;volatile
 13131  00470E  9C83               	bcf	131,6,c	;volatile
 13132  004710  8A83               	bsf	131,5,c	;volatile
 13133  004712  9883               	bcf	131,4,c	;volatile
 13134  004714  9284               	bcf	132,1,c	;volatile
 13135  004716  9484               	bcf	132,2,c	;volatile
 13136                           
 13137                           ;flexlcd.h: 85: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
 13138  004718  9E83               	bcf	131,7,c	;volatile
 13139  00471A  9C83               	bcf	131,6,c	;volatile
 13140  00471C  8A83               	bsf	131,5,c	;volatile
 13141  00471E  9883               	bcf	131,4,c	;volatile
 13142  004720  8284               	bsf	132,1,c	;volatile
 13143  004722  9484               	bcf	132,2,c	;volatile
 13144  004724                     
 13145                           ;flexlcd.h: 86: _delay((unsigned long)((5)*(8000000/4000000.0)));
 13146  004724  0E03               	movlw	3
 13147  004726                     u9667:
 13148  004726  2EE8               	decfsz	wreg,f,c
 13149  004728  D7FE               	bra	u9667
 13150  00472A  F000               	nop	
 13151  00472C                     
 13152                           ;flexlcd.h: 87: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
 13153  00472C  9E83               	bcf	131,7,c	;volatile
 13154  00472E  9C83               	bcf	131,6,c	;volatile
 13155  004730  8A83               	bsf	131,5,c	;volatile
 13156  004732  9883               	bcf	131,4,c	;volatile
 13157  004734  9284               	bcf	132,1,c	;volatile
 13158  004736  9484               	bcf	132,2,c	;volatile
 13159                           
 13160                           ;flexlcd.h: 88: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 13161  004738  0E0F               	movlw	15
 13162  00473A  6E09               	movwf	??_Lcd_Init^0,c
 13163  00473C  0E48               	movlw	72
 13164  00473E                     u9677:
 13165  00473E  2EE8               	decfsz	wreg,f,c
 13166  004740  D7FE               	bra	u9677
 13167  004742  2E09               	decfsz	??_Lcd_Init^0,f,c
 13168  004744  D7FC               	bra	u9677
 13169  004746  0E28               	movlw	40
 13170  004748  ECD6  F020         	call	_Lcd_Cmd
 13171  00474C  0E10               	movlw	16
 13172  00474E  ECD6  F020         	call	_Lcd_Cmd
 13173  004752  0E01               	movlw	1
 13174  004754  ECD6  F020         	call	_Lcd_Cmd
 13175  004758  0E0F               	movlw	15
 13176  00475A  ECD6  F020         	call	_Lcd_Cmd
 13177  00475E  0012               	return		;funcret
 13178  004760                     __end_of_Lcd_Init:
 13179                           	callstack 0
 13180                           
 13181 ;; *************** function _Lcd_Cmd *****************
 13182 ;; Defined at:
 13183 ;;		line 152 in file "flexlcd.h"
 13184 ;; Parameters:    Size  Location     Type
 13185 ;;  data            1    wreg     unsigned char 
 13186 ;; Auto vars:     Size  Location     Type
 13187 ;;  data            1    7[COMRAM] unsigned char 
 13188 ;; Return value:  Size  Location     Type
 13189 ;;                  1    wreg      void 
 13190 ;; Registers used:
 13191 ;;		wreg, status,2, status,0
 13192 ;; Tracked objects:
 13193 ;;		On entry : 0/0
 13194 ;;		On exit  : 0/0
 13195 ;;		Unchanged: 0/0
 13196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13197 ;;      Params:         0       0       0       0       0       0       0
 13198 ;;      Locals:         1       0       0       0       0       0       0
 13199 ;;      Temps:          2       0       0       0       0       0       0
 13200 ;;      Totals:         3       0       0       0       0       0       0
 13201 ;;Total ram usage:        3 bytes
 13202 ;; Hardware stack levels used:    1
 13203 ;; Hardware stack levels required when called:    2
 13204 ;; This function calls:
 13205 ;;		Nothing
 13206 ;; This function is called by:
 13207 ;;		_Lcd_Init
 13208 ;;		_Lcd_Out
 13209 ;;		_main
 13210 ;;		_Lcd_Out2
 13211 ;; This function uses a non-reentrant model
 13212 ;;
 13213                           
 13214                           	psect	text45
 13215  0041AC                     __ptext45:
 13216                           	callstack 0
 13217  0041AC                     _Lcd_Cmd:
 13218                           	callstack 27
 13219                           
 13220                           ;incstack = 0
 13221                           ;Lcd_Cmd@data stored from wreg
 13222  0041AC  6E08               	movwf	Lcd_Cmd@data^0,c
 13223  0041AE                     
 13224                           ;flexlcd.h: 153: PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
 13225  0041AE  9284               	bcf	132,1,c	;volatile
 13226  0041B0  9484               	bcf	132,2,c	;volatile
 13227  0041B2                     
 13228                           ;flexlcd.h: 154: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
 13229  0041B2  6A06               	clrf	??_Lcd_Cmd^0,c
 13230  0041B4  AE08               	btfss	Lcd_Cmd@data^0,7,c
 13231  0041B6  D001               	bra	u7285
 13232  0041B8  2A06               	incf	??_Lcd_Cmd^0,f,c
 13233  0041BA                     u7285:
 13234  0041BA  0E01               	movlw	1
 13235  0041BC  1606               	andwf	??_Lcd_Cmd^0,f,c
 13236  0041BE  3206               	rrcf	??_Lcd_Cmd^0,f,c
 13237  0041C0  3206               	rrcf	??_Lcd_Cmd^0,f,c
 13238  0041C2  5083               	movf	131,w,c	;volatile
 13239  0041C4  1806               	xorwf	??_Lcd_Cmd^0,w,c
 13240  0041C6  0B7F               	andlw	-129
 13241  0041C8  1806               	xorwf	??_Lcd_Cmd^0,w,c
 13242  0041CA  6E83               	movwf	131,c	;volatile
 13243  0041CC  C008  F006         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 13244  0041D0  0E06               	movlw	6
 13245  0041D2  6E07               	movwf	(??_Lcd_Cmd+1)^0,c
 13246  0041D4                     u7295:
 13247  0041D4  90D8               	bcf	status,0,c
 13248  0041D6  3206               	rrcf	??_Lcd_Cmd^0,f,c
 13249  0041D8  2E07               	decfsz	(??_Lcd_Cmd+1)^0,f,c
 13250  0041DA  EFEA  F020         	goto	u7295
 13251  0041DE  0E01               	movlw	1
 13252  0041E0  1606               	andwf	??_Lcd_Cmd^0,f,c
 13253  0041E2  3A06               	swapf	??_Lcd_Cmd^0,f,c
 13254  0041E4  4606               	rlncf	??_Lcd_Cmd^0,f,c
 13255  0041E6  4606               	rlncf	??_Lcd_Cmd^0,f,c
 13256  0041E8  5083               	movf	131,w,c	;volatile
 13257  0041EA  1806               	xorwf	??_Lcd_Cmd^0,w,c
 13258  0041EC  0BBF               	andlw	-65
 13259  0041EE  1806               	xorwf	??_Lcd_Cmd^0,w,c
 13260  0041F0  6E83               	movwf	131,c	;volatile
 13261                           
 13262                           ;flexlcd.h: 155: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
 13263  0041F2  C008  F006         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 13264  0041F6  0E05               	movlw	5
 13265  0041F8  6E07               	movwf	(??_Lcd_Cmd+1)^0,c
 13266  0041FA                     u7305:
 13267  0041FA  90D8               	bcf	status,0,c
 13268  0041FC  3206               	rrcf	??_Lcd_Cmd^0,f,c
 13269  0041FE  2E07               	decfsz	(??_Lcd_Cmd+1)^0,f,c
 13270  004200  EFFD  F020         	goto	u7305
 13271  004204  0E01               	movlw	1
 13272  004206  1606               	andwf	??_Lcd_Cmd^0,f,c
 13273  004208  3A06               	swapf	??_Lcd_Cmd^0,f,c
 13274  00420A  4606               	rlncf	??_Lcd_Cmd^0,f,c
 13275  00420C  5083               	movf	131,w,c	;volatile
 13276  00420E  1806               	xorwf	??_Lcd_Cmd^0,w,c
 13277  004210  0BDF               	andlw	-33
 13278  004212  1806               	xorwf	??_Lcd_Cmd^0,w,c
 13279  004214  6E83               	movwf	131,c	;volatile
 13280  004216  C008  F006         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 13281  00421A  3A06               	swapf	??_Lcd_Cmd^0,f,c
 13282  00421C  0E0F               	movlw	15
 13283  00421E  1606               	andwf	??_Lcd_Cmd^0,f,c
 13284  004220  0E01               	movlw	1
 13285  004222  1606               	andwf	??_Lcd_Cmd^0,f,c
 13286  004224  3A06               	swapf	??_Lcd_Cmd^0,f,c
 13287  004226  5083               	movf	131,w,c	;volatile
 13288  004228  1806               	xorwf	??_Lcd_Cmd^0,w,c
 13289  00422A  0BEF               	andlw	-17
 13290  00422C  1806               	xorwf	??_Lcd_Cmd^0,w,c
 13291  00422E  6E83               	movwf	131,c	;volatile
 13292  004230                     
 13293                           ;flexlcd.h: 156: _delay(10);
 13294  004230  0E03               	movlw	3
 13295  004232                     u9687:
 13296  004232  2EE8               	decfsz	wreg,f,c
 13297  004234  D7FE               	bra	u9687
 13298  004236  F000               	nop	
 13299  004238                     
 13300                           ;flexlcd.h: 157: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
 13301  004238  8284               	bsf	132,1,c	;volatile
 13302  00423A  0E03               	movlw	3
 13303  00423C                     u9697:
 13304  00423C  2EE8               	decfsz	wreg,f,c
 13305  00423E  D7FE               	bra	u9697
 13306  004240  F000               	nop	
 13307  004242  9284               	bcf	132,1,c	;volatile
 13308                           
 13309                           ;flexlcd.h: 158: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
 13310  004244  C008  F006         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 13311  004248  90D8               	bcf	status,0,c
 13312  00424A  3206               	rrcf	??_Lcd_Cmd^0,f,c
 13313  00424C  90D8               	bcf	status,0,c
 13314  00424E  3206               	rrcf	??_Lcd_Cmd^0,f,c
 13315  004250  90D8               	bcf	status,0,c
 13316  004252  3206               	rrcf	??_Lcd_Cmd^0,f,c
 13317  004254  0E01               	movlw	1
 13318  004256  1606               	andwf	??_Lcd_Cmd^0,f,c
 13319  004258  3206               	rrcf	??_Lcd_Cmd^0,f,c
 13320  00425A  3206               	rrcf	??_Lcd_Cmd^0,f,c
 13321  00425C  5083               	movf	131,w,c	;volatile
 13322  00425E  1806               	xorwf	??_Lcd_Cmd^0,w,c
 13323  004260  0B7F               	andlw	-129
 13324  004262  1806               	xorwf	??_Lcd_Cmd^0,w,c
 13325  004264  6E83               	movwf	131,c	;volatile
 13326  004266  C008  F006         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 13327  00426A  90D8               	bcf	status,0,c
 13328  00426C  3206               	rrcf	??_Lcd_Cmd^0,f,c
 13329  00426E  90D8               	bcf	status,0,c
 13330  004270  3206               	rrcf	??_Lcd_Cmd^0,f,c
 13331  004272  0E01               	movlw	1
 13332  004274  1606               	andwf	??_Lcd_Cmd^0,f,c
 13333  004276  3A06               	swapf	??_Lcd_Cmd^0,f,c
 13334  004278  4606               	rlncf	??_Lcd_Cmd^0,f,c
 13335  00427A  4606               	rlncf	??_Lcd_Cmd^0,f,c
 13336  00427C  5083               	movf	131,w,c	;volatile
 13337  00427E  1806               	xorwf	??_Lcd_Cmd^0,w,c
 13338  004280  0BBF               	andlw	-65
 13339  004282  1806               	xorwf	??_Lcd_Cmd^0,w,c
 13340  004284  6E83               	movwf	131,c	;volatile
 13341                           
 13342                           ;flexlcd.h: 159: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
 13343  004286  C008  F006         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 13344  00428A  90D8               	bcf	status,0,c
 13345  00428C  3206               	rrcf	??_Lcd_Cmd^0,f,c
 13346  00428E  0E01               	movlw	1
 13347  004290  1606               	andwf	??_Lcd_Cmd^0,f,c
 13348  004292  3A06               	swapf	??_Lcd_Cmd^0,f,c
 13349  004294  4606               	rlncf	??_Lcd_Cmd^0,f,c
 13350  004296  5083               	movf	131,w,c	;volatile
 13351  004298  1806               	xorwf	??_Lcd_Cmd^0,w,c
 13352  00429A  0BDF               	andlw	-33
 13353  00429C  1806               	xorwf	??_Lcd_Cmd^0,w,c
 13354  00429E  6E83               	movwf	131,c	;volatile
 13355  0042A0  C008  F006         	movff	Lcd_Cmd@data,??_Lcd_Cmd
 13356  0042A4  0E01               	movlw	1
 13357  0042A6  1606               	andwf	??_Lcd_Cmd^0,f,c
 13358  0042A8  3A06               	swapf	??_Lcd_Cmd^0,f,c
 13359  0042AA  5083               	movf	131,w,c	;volatile
 13360  0042AC  1806               	xorwf	??_Lcd_Cmd^0,w,c
 13361  0042AE  0BEF               	andlw	-17
 13362  0042B0  1806               	xorwf	??_Lcd_Cmd^0,w,c
 13363  0042B2  6E83               	movwf	131,c	;volatile
 13364  0042B4                     
 13365                           ;flexlcd.h: 160: _delay(10);
 13366  0042B4  0E03               	movlw	3
 13367  0042B6                     u9707:
 13368  0042B6  2EE8               	decfsz	wreg,f,c
 13369  0042B8  D7FE               	bra	u9707
 13370  0042BA  F000               	nop	
 13371  0042BC                     
 13372                           ;flexlcd.h: 161: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
 13373  0042BC  8284               	bsf	132,1,c	;volatile
 13374  0042BE  0E03               	movlw	3
 13375  0042C0                     u9717:
 13376  0042C0  2EE8               	decfsz	wreg,f,c
 13377  0042C2  D7FE               	bra	u9717
 13378  0042C4  F000               	nop	
 13379  0042C6  9284               	bcf	132,1,c	;volatile
 13380  0042C8                     
 13381                           ;flexlcd.h: 162: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 13382  0042C8  0E0F               	movlw	15
 13383  0042CA  6E06               	movwf	??_Lcd_Cmd^0,c
 13384  0042CC  0E48               	movlw	72
 13385  0042CE                     u9727:
 13386  0042CE  2EE8               	decfsz	wreg,f,c
 13387  0042D0  D7FE               	bra	u9727
 13388  0042D2  2E06               	decfsz	??_Lcd_Cmd^0,f,c
 13389  0042D4  D7FC               	bra	u9727
 13390  0042D6  0012               	return		;funcret
 13391  0042D8                     __end_of_Lcd_Cmd:
 13392                           	callstack 0
 13393                           
 13394 ;; *************** function _ConfigInterrupts *****************
 13395 ;; Defined at:
 13396 ;;		line 94 in file "system.c"
 13397 ;; Parameters:    Size  Location     Type
 13398 ;;		None
 13399 ;; Auto vars:     Size  Location     Type
 13400 ;;		None
 13401 ;; Return value:  Size  Location     Type
 13402 ;;                  1    wreg      void 
 13403 ;; Registers used:
 13404 ;;		None
 13405 ;; Tracked objects:
 13406 ;;		On entry : 0/0
 13407 ;;		On exit  : 0/0
 13408 ;;		Unchanged: 0/0
 13409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13410 ;;      Params:         0       0       0       0       0       0       0
 13411 ;;      Locals:         0       0       0       0       0       0       0
 13412 ;;      Temps:          0       0       0       0       0       0       0
 13413 ;;      Totals:         0       0       0       0       0       0       0
 13414 ;;Total ram usage:        0 bytes
 13415 ;; Hardware stack levels used:    1
 13416 ;; Hardware stack levels required when called:    2
 13417 ;; This function calls:
 13418 ;;		Nothing
 13419 ;; This function is called by:
 13420 ;;		_main
 13421 ;; This function uses a non-reentrant model
 13422 ;;
 13423                           
 13424                           	psect	text46
 13425  0056BC                     __ptext46:
 13426                           	callstack 0
 13427  0056BC                     _ConfigInterrupts:
 13428                           	callstack 28
 13429  0056BC                     
 13430                           ;system.c: 96: RCONbits.IPEN = 0;
 13431  0056BC  9ED0               	bcf	208,7,c	;volatile
 13432                           
 13433                           ;system.c: 97: PIR1bits.RCIF = 0;
 13434  0056BE  9A9E               	bcf	158,5,c	;volatile
 13435                           
 13436                           ;system.c: 98: INTCONbits.TMR0IF = 0;
 13437  0056C0  94F2               	bcf	242,2,c	;volatile
 13438                           
 13439                           ;system.c: 99: INTCONbits.PEIE = 1;
 13440  0056C2  8CF2               	bsf	242,6,c	;volatile
 13441                           
 13442                           ;system.c: 100: INTCONbits.GIE = 1;
 13443  0056C4  8EF2               	bsf	242,7,c	;volatile
 13444  0056C6  0012               	return		;funcret
 13445  0056C8                     __end_of_ConfigInterrupts:
 13446                           	callstack 0
 13447                           
 13448 ;; *************** function _isr *****************
 13449 ;; Defined at:
 13450 ;;		line 217 in file "mainTP.c"
 13451 ;; Parameters:    Size  Location     Type
 13452 ;;		None
 13453 ;; Auto vars:     Size  Location     Type
 13454 ;;		None
 13455 ;; Return value:  Size  Location     Type
 13456 ;;                  1    wreg      void 
 13457 ;; Registers used:
 13458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13459 ;; Tracked objects:
 13460 ;;		On entry : 0/0
 13461 ;;		On exit  : 0/0
 13462 ;;		Unchanged: 0/0
 13463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13464 ;;      Params:         0       0       0       0       0       0       0
 13465 ;;      Locals:         0       0       0       0       0       0       0
 13466 ;;      Temps:          2       0       0       0       0       0       0
 13467 ;;      Totals:         2       0       0       0       0       0       0
 13468 ;;Total ram usage:        2 bytes
 13469 ;; Hardware stack levels used:    1
 13470 ;; Hardware stack levels required when called:    1
 13471 ;; This function calls:
 13472 ;;		_OpenTmr0
 13473 ;;		_modbusDelay
 13474 ;;		i2_Lcd_Cmd
 13475 ;; This function is called by:
 13476 ;;		Interrupt level 2
 13477 ;; This function uses a non-reentrant model
 13478 ;;
 13479                           
 13480                           	psect	intcode
 13481  000008                     __pintcode:
 13482                           	callstack 0
 13483  000008                     _isr:
 13484                           	callstack 24
 13485                           
 13486                           ;incstack = 0
 13487  000008  8277               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13488  00000A  ED1C  F01E         	call	int_func,f	;refresh shadow registers
 13489                           
 13490                           	psect	intcode_body
 13491  003C38                     __pintcode_body:
 13492                           	callstack 24
 13493  003C38                     int_func:
 13494                           	callstack 24
 13495  003C38  0006               	pop		; remove dummy address from shadow register refresh
 13496  003C3A  CFD9 F004          	movff	fsr2l,??_isr
 13497  003C3E  CFDA F005          	movff	fsr2h,??_isr+1
 13498  003C42                     
 13499                           ;mainTP.c: 219: if (INTCONbits.INT0IF == 1) {
 13500  003C42  A2F2               	btfss	242,1,c	;volatile
 13501  003C44  EF26  F01E         	goto	i2u632_41
 13502  003C48  EF28  F01E         	goto	i2u632_40
 13503  003C4C                     i2u632_41:
 13504  003C4C  EF3A  F01E         	goto	i2l6221
 13505  003C50                     i2u632_40:
 13506  003C50                     
 13507                           ;mainTP.c: 220: INTCONbits.INT0IF = 0;
 13508  003C50  92F2               	bcf	242,1,c	;volatile
 13509  003C52                     
 13510                           ;mainTP.c: 221: Lcd_Cmd(1);
 13511  003C52  0E01               	movlw	1
 13512  003C54  EC6C  F021         	call	i2_Lcd_Cmd
 13513  003C58                     
 13514                           ;mainTP.c: 222: modoOperacao = !modoOperacao;
 13515  003C58  0100               	movlb	0	; () banked
 13516  003C5A  51AA               	movf	_modoOperacao& (0+255),w,b
 13517  003C5C  11AB               	iorwf	(_modoOperacao+1)& (0+255),w,b
 13518  003C5E  B4D8               	btfsc	status,2,c
 13519  003C60  EF34  F01E         	goto	i2u633_41
 13520  003C64  EF37  F01E         	goto	i2u633_40
 13521  003C68                     i2u633_41:
 13522  003C68  0E01               	movlw	1
 13523  003C6A  EF38  F01E         	goto	i2u634_40
 13524  003C6E                     i2u633_40:
 13525  003C6E  0E00               	movlw	0
 13526  003C70                     i2u634_40:
 13527  003C70  6FAA               	movwf	_modoOperacao& (0+255),b
 13528  003C72  6BAB               	clrf	(_modoOperacao+1)& (0+255),b
 13529  003C74                     i2l6221:
 13530                           
 13531                           ;mainTP.c: 223: };mainTP.c: 226: if (INTCON3bits.INT1F == 1) {
 13532  003C74  A0F0               	btfss	240,0,c	;volatile
 13533  003C76  EF3F  F01E         	goto	i2u635_41
 13534  003C7A  EF41  F01E         	goto	i2u635_40
 13535  003C7E                     i2u635_41:
 13536  003C7E  EF54  F01E         	goto	i2l6229
 13537  003C82                     i2u635_40:
 13538  003C82                     
 13539                           ;mainTP.c: 227: INTCON3bits.INT1F = 0;
 13540  003C82  90F0               	bcf	240,0,c	;volatile
 13541  003C84                     
 13542                           ;mainTP.c: 228: if (tempSetpoint > 1) {
 13543  003C84  0100               	movlb	0	; () banked
 13544  003C86  BFD6               	btfsc	(_tempSetpoint+1)& (0+255),7,b
 13545  003C88  EF4F  F01E         	goto	i2u636_41
 13546  003C8C  51D6               	movf	(_tempSetpoint+1)& (0+255),w,b
 13547  003C8E  E109               	bnz	i2u636_40
 13548  003C90  0E02               	movlw	2
 13549  003C92  5DD5               	subwf	_tempSetpoint& (0+255),w,b
 13550  003C94  A0D8               	btfss	status,0,c
 13551  003C96  EF4F  F01E         	goto	i2u636_41
 13552  003C9A  EF51  F01E         	goto	i2u636_40
 13553  003C9E                     i2u636_41:
 13554  003C9E  EF54  F01E         	goto	i2l6229
 13555  003CA2                     i2u636_40:
 13556  003CA2                     
 13557                           ; BSR set to: 0
 13558                           ;mainTP.c: 229: tempSetpoint--;
 13559  003CA2  07D5               	decf	_tempSetpoint& (0+255),f,b
 13560  003CA4  A0D8               	btfss	status,0,c
 13561  003CA6  07D6               	decf	(_tempSetpoint+1)& (0+255),f,b
 13562  003CA8                     i2l6229:
 13563                           
 13564                           ;mainTP.c: 230: };mainTP.c: 231: };mainTP.c: 234: if (INTCON3bits.INT2F == 1) {
 13565  003CA8  A2F0               	btfss	240,1,c	;volatile
 13566  003CAA  EF59  F01E         	goto	i2u637_41
 13567  003CAE  EF5B  F01E         	goto	i2u637_40
 13568  003CB2                     i2u637_41:
 13569  003CB2  EF5F  F01E         	goto	i2l6235
 13570  003CB6                     i2u637_40:
 13571  003CB6                     
 13572                           ;mainTP.c: 235: INTCON3bits.INT2F = 0;
 13573  003CB6  92F0               	bcf	240,1,c	;volatile
 13574  003CB8                     
 13575                           ;mainTP.c: 236: tempSetpoint++;
 13576  003CB8  0100               	movlb	0	; () banked
 13577  003CBA  4BD5               	infsnz	_tempSetpoint& (0+255),f,b
 13578  003CBC  2BD6               	incf	(_tempSetpoint+1)& (0+255),f,b
 13579  003CBE                     i2l6235:
 13580                           
 13581                           ;mainTP.c: 237: };mainTP.c: 239: if (PIR1bits.RCIF) {
 13582  003CBE  AA9E               	btfss	158,5,c	;volatile
 13583  003CC0  EF64  F01E         	goto	i2u638_41
 13584  003CC4  EF66  F01E         	goto	i2u638_40
 13585  003CC8                     i2u638_41:
 13586  003CC8  EFAF  F01E         	goto	i2l247
 13587  003CCC                     i2u638_40:
 13588  003CCC                     
 13589                           ;mainTP.c: 241: if ((!endOfMessage)&&(!newMessage)) {
 13590  003CCC  5075               	movf	_endOfMessage^0,w,c	;volatile
 13591  003CCE  A4D8               	btfss	status,2,c
 13592  003CD0  EF6C  F01E         	goto	i2u639_41
 13593  003CD4  EF6E  F01E         	goto	i2u639_40
 13594  003CD8                     i2u639_41:
 13595  003CD8  EF88  F01E         	goto	i2l6249
 13596  003CDC                     i2u639_40:
 13597  003CDC  5076               	movf	_newMessage^0,w,c	;volatile
 13598  003CDE  A4D8               	btfss	status,2,c
 13599  003CE0  EF74  F01E         	goto	i2u640_41
 13600  003CE4  EF76  F01E         	goto	i2u640_40
 13601  003CE8                     i2u640_41:
 13602  003CE8  EF88  F01E         	goto	i2l6249
 13603  003CEC                     i2u640_40:
 13604  003CEC                     
 13605                           ;mainTP.c: 242: if (PIR1bits.TXIF) {
 13606  003CEC  A89E               	btfss	158,4,c	;volatile
 13607  003CEE  EF7B  F01E         	goto	i2u641_41
 13608  003CF2  EF7D  F01E         	goto	i2u641_40
 13609  003CF6                     i2u641_41:
 13610  003CF6  EF88  F01E         	goto	i2l6249
 13611  003CFA                     i2u641_40:
 13612  003CFA                     
 13613                           ;mainTP.c: 243: received[z] = RCREG;
 13614  003CFA  0E00               	movlw	low _received
 13615  003CFC  2471               	addwf	_z^0,w,c	;volatile
 13616  003CFE  6ED9               	movwf	fsr2l,c
 13617  003D00  6ADA               	clrf	fsr2h,c
 13618  003D02  0E02               	movlw	high _received
 13619  003D04  22DA               	addwfc	fsr2h,f,c
 13620  003D06  CFAE FFDF          	movff	4014,indf2	;volatile
 13621  003D0A                     
 13622                           ;mainTP.c: 244: z++;
 13623  003D0A  2A71               	incf	_z^0,f,c	;volatile
 13624  003D0C                     
 13625                           ;mainTP.c: 245: timerCount = 0;
 13626  003D0C  0E00               	movlw	0
 13627  003D0E  6E74               	movwf	_timerCount^0,c	;volatile
 13628  003D10                     i2l6249:
 13629                           
 13630                           ;mainTP.c: 246: };mainTP.c: 247: };mainTP.c: 248: if (newMessage) {
 13631  003D10  5076               	movf	_newMessage^0,w,c	;volatile
 13632  003D12  B4D8               	btfsc	status,2,c
 13633  003D14  EF8E  F01E         	goto	i2u642_41
 13634  003D18  EF90  F01E         	goto	i2u642_40
 13635  003D1C                     i2u642_41:
 13636  003D1C  EFAE  F01E         	goto	i2l250
 13637  003D20                     i2u642_40:
 13638  003D20                     
 13639                           ;mainTP.c: 249: OpenTmr0();
 13640  003D20  EC4C  F02B         	call	_OpenTmr0	;wreg free
 13641  003D24                     
 13642                           ;mainTP.c: 250: if (PIR1bits.TXIF) {
 13643  003D24  A89E               	btfss	158,4,c	;volatile
 13644  003D26  EF97  F01E         	goto	i2u643_41
 13645  003D2A  EF99  F01E         	goto	i2u643_40
 13646  003D2E                     i2u643_41:
 13647  003D2E  EFAE  F01E         	goto	i2l250
 13648  003D32                     i2u643_40:
 13649  003D32                     
 13650                           ;mainTP.c: 251: received[z] = RCREG;
 13651  003D32  0E00               	movlw	low _received
 13652  003D34  2471               	addwf	_z^0,w,c	;volatile
 13653  003D36  6ED9               	movwf	fsr2l,c
 13654  003D38  6ADA               	clrf	fsr2h,c
 13655  003D3A  0E02               	movlw	high _received
 13656  003D3C  22DA               	addwfc	fsr2h,f,c
 13657  003D3E  CFAE FFDF          	movff	4014,indf2	;volatile
 13658  003D42                     
 13659                           ;mainTP.c: 252: z++;
 13660  003D42  2A71               	incf	_z^0,f,c	;volatile
 13661  003D44                     
 13662                           ;mainTP.c: 253: newMessage = 0;
 13663  003D44  0E00               	movlw	0
 13664  003D46  6E76               	movwf	_newMessage^0,c	;volatile
 13665  003D48                     
 13666                           ;mainTP.c: 254: endOfMessage = 0;
 13667  003D48  0E00               	movlw	0
 13668  003D4A  6E75               	movwf	_endOfMessage^0,c	;volatile
 13669  003D4C                     
 13670                           ;mainTP.c: 255: messageLength = 0;
 13671  003D4C  0E00               	movlw	0
 13672  003D4E  6E73               	movwf	_messageLength^0,c	;volatile
 13673  003D50                     
 13674                           ;mainTP.c: 256: modbusMessage = 0;
 13675  003D50  0E00               	movlw	0
 13676  003D52  6E72               	movwf	_modbusMessage^0,c	;volatile
 13677  003D54                     
 13678                           ;mainTP.c: 257: timerCount = 0;
 13679  003D54  0E00               	movlw	0
 13680  003D56  6E74               	movwf	_timerCount^0,c	;volatile
 13681  003D58  EFE5  F01E         	goto	i2l252
 13682  003D5C                     i2l250:
 13683                           
 13684                           ;mainTP.c: 259: };mainTP.c: 260: };mainTP.c: 261: PIR1bits.RCIF = 0;
 13685  003D5C  9A9E               	bcf	158,5,c	;volatile
 13686  003D5E                     i2l247:
 13687                           
 13688                           ;mainTP.c: 262: };mainTP.c: 263: if (INTCONbits.TMR0IF) {
 13689  003D5E  A4F2               	btfss	242,2,c	;volatile
 13690  003D60  EFB4  F01E         	goto	i2u644_41
 13691  003D64  EFB6  F01E         	goto	i2u644_40
 13692  003D68                     i2u644_41:
 13693  003D68  EFE5  F01E         	goto	i2l252
 13694  003D6C                     i2u644_40:
 13695  003D6C                     
 13696                           ;mainTP.c: 264: modbusDelay();
 13697  003D6C  EC69  F02B         	call	_modbusDelay	;wreg free
 13698  003D70                     
 13699                           ;mainTP.c: 265: timerCount++;
 13700  003D70  2A74               	incf	_timerCount^0,f,c	;volatile
 13701  003D72                     
 13702                           ;mainTP.c: 266: if (timerCount > 4) {
 13703  003D72  0E04               	movlw	4
 13704  003D74  6474               	cpfsgt	_timerCount^0,c	;volatile
 13705  003D76  EFBF  F01E         	goto	i2u645_41
 13706  003D7A  EFC1  F01E         	goto	i2u645_40
 13707  003D7E                     i2u645_41:
 13708  003D7E  EFE4  F01E         	goto	i2l6293
 13709  003D82                     i2u645_40:
 13710  003D82                     
 13711                           ;mainTP.c: 267: endOfMessage = 1;
 13712  003D82  0E01               	movlw	1
 13713  003D84  6E75               	movwf	_endOfMessage^0,c	;volatile
 13714                           
 13715                           ;mainTP.c: 268: newMessage = 1;
 13716  003D86  0E01               	movlw	1
 13717  003D88  6E76               	movwf	_newMessage^0,c	;volatile
 13718  003D8A                     
 13719                           ;mainTP.c: 269: messageLength = z;
 13720  003D8A  C071  F073         	movff	_z,_messageLength	;volatile
 13721                           
 13722                           ;mainTP.c: 270: modbusMessage = 1;
 13723  003D8E  0E01               	movlw	1
 13724  003D90  6E72               	movwf	_modbusMessage^0,c	;volatile
 13725  003D92                     
 13726                           ;mainTP.c: 271: for (z = (messageLength); z != 125; z++) {
 13727  003D92  C073  F071         	movff	_messageLength,_z	;volatile
 13728  003D96  EFD6  F01E         	goto	i2l6287
 13729  003D9A                     i2l6283:
 13730                           
 13731                           ;mainTP.c: 272: received[z] = 0;
 13732  003D9A  0E00               	movlw	low _received
 13733  003D9C  2471               	addwf	_z^0,w,c	;volatile
 13734  003D9E  6ED9               	movwf	fsr2l,c
 13735  003DA0  6ADA               	clrf	fsr2h,c
 13736  003DA2  0E02               	movlw	high _received
 13737  003DA4  22DA               	addwfc	fsr2h,f,c
 13738  003DA6  0E00               	movlw	0
 13739  003DA8  6EDF               	movwf	indf2,c
 13740  003DAA  2A71               	incf	_z^0,f,c	;volatile
 13741  003DAC                     i2l6287:
 13742  003DAC  0E7D               	movlw	125
 13743  003DAE  1871               	xorwf	_z^0,w,c	;volatile
 13744  003DB0  A4D8               	btfss	status,2,c
 13745  003DB2  EFDD  F01E         	goto	i2u646_41
 13746  003DB6  EFDF  F01E         	goto	i2u646_40
 13747  003DBA                     i2u646_41:
 13748  003DBA  EFCD  F01E         	goto	i2l6283
 13749  003DBE                     i2u646_40:
 13750  003DBE                     
 13751                           ;mainTP.c: 273: };mainTP.c: 274: z = 0;
 13752  003DBE  0E00               	movlw	0
 13753  003DC0  6E71               	movwf	_z^0,c	;volatile
 13754  003DC2                     
 13755                           ;mainTP.c: 275: T0CONbits.TMR0ON = 0;
 13756  003DC2  9ED5               	bcf	213,7,c	;volatile
 13757                           
 13758                           ;mainTP.c: 276: timerCount = 0;
 13759  003DC4  0E00               	movlw	0
 13760  003DC6  6E74               	movwf	_timerCount^0,c	;volatile
 13761  003DC8                     i2l6293:
 13762                           
 13763                           ;mainTP.c: 277: };mainTP.c: 278: INTCONbits.TMR0IF = 0;
 13764  003DC8  94F2               	bcf	242,2,c	;volatile
 13765  003DCA                     i2l252:
 13766  003DCA  C005  FFDA         	movff	??_isr+1,fsr2h
 13767  003DCE  C004  FFD9         	movff	??_isr,fsr2l
 13768  003DD2  9277               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13769  003DD4  0011               	retfie		f
 13770  003DD6                     __end_of_isr:
 13771                           	callstack 0
 13772                           
 13773 ;; *************** function i2_Lcd_Cmd *****************
 13774 ;; Defined at:
 13775 ;;		line 152 in file "flexlcd.h"
 13776 ;; Parameters:    Size  Location     Type
 13777 ;;  data            1    wreg     unsigned char 
 13778 ;; Auto vars:     Size  Location     Type
 13779 ;;  data            1    2[COMRAM] unsigned char 
 13780 ;; Return value:  Size  Location     Type
 13781 ;;                  1    wreg      void 
 13782 ;; Registers used:
 13783 ;;		wreg, status,2, status,0
 13784 ;; Tracked objects:
 13785 ;;		On entry : 0/0
 13786 ;;		On exit  : 0/0
 13787 ;;		Unchanged: 0/0
 13788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13789 ;;      Params:         0       0       0       0       0       0       0
 13790 ;;      Locals:         1       0       0       0       0       0       0
 13791 ;;      Temps:          2       0       0       0       0       0       0
 13792 ;;      Totals:         3       0       0       0       0       0       0
 13793 ;;Total ram usage:        3 bytes
 13794 ;; Hardware stack levels used:    1
 13795 ;; This function calls:
 13796 ;;		Nothing
 13797 ;; This function is called by:
 13798 ;;		_isr
 13799 ;; This function uses a non-reentrant model
 13800 ;;
 13801                           
 13802                           	psect	text48
 13803  0042D8                     __ptext48:
 13804                           	callstack 0
 13805  0042D8                     i2_Lcd_Cmd:
 13806                           	callstack 24
 13807                           
 13808                           ;incstack = 0
 13809                           ;i2Lcd_Cmd@data stored from wreg
 13810  0042D8  6E03               	movwf	i2Lcd_Cmd@data^0,c
 13811  0042DA                     
 13812                           ;flexlcd.h: 153: PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
 13813  0042DA  9284               	bcf	132,1,c	;volatile
 13814  0042DC  9484               	bcf	132,2,c	;volatile
 13815  0042DE                     
 13816                           ;flexlcd.h: 154: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
 13817  0042DE  6A01               	clrf	??i2_Lcd_Cmd^0,c
 13818  0042E0  AE03               	btfss	i2Lcd_Cmd@data^0,7,c
 13819  0042E2  D001               	bra	i2u613_45
 13820  0042E4  2A01               	incf	??i2_Lcd_Cmd^0,f,c
 13821  0042E6                     i2u613_45:
 13822  0042E6  0E01               	movlw	1
 13823  0042E8  1601               	andwf	??i2_Lcd_Cmd^0,f,c
 13824  0042EA  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 13825  0042EC  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 13826  0042EE  5083               	movf	131,w,c	;volatile
 13827  0042F0  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 13828  0042F2  0B7F               	andlw	-129
 13829  0042F4  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 13830  0042F6  6E83               	movwf	131,c	;volatile
 13831  0042F8  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
 13832  0042FC  0E06               	movlw	6
 13833  0042FE  6E02               	movwf	(??i2_Lcd_Cmd+1)^0,c
 13834  004300                     i2u614_45:
 13835  004300  90D8               	bcf	status,0,c
 13836  004302  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 13837  004304  2E02               	decfsz	(??i2_Lcd_Cmd+1)^0,f,c
 13838  004306  EF80  F021         	goto	i2u614_45
 13839  00430A  0E01               	movlw	1
 13840  00430C  1601               	andwf	??i2_Lcd_Cmd^0,f,c
 13841  00430E  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
 13842  004310  4601               	rlncf	??i2_Lcd_Cmd^0,f,c
 13843  004312  4601               	rlncf	??i2_Lcd_Cmd^0,f,c
 13844  004314  5083               	movf	131,w,c	;volatile
 13845  004316  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 13846  004318  0BBF               	andlw	-65
 13847  00431A  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 13848  00431C  6E83               	movwf	131,c	;volatile
 13849                           
 13850                           ;flexlcd.h: 155: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
 13851  00431E  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
 13852  004322  0E05               	movlw	5
 13853  004324  6E02               	movwf	(??i2_Lcd_Cmd+1)^0,c
 13854  004326                     i2u615_45:
 13855  004326  90D8               	bcf	status,0,c
 13856  004328  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 13857  00432A  2E02               	decfsz	(??i2_Lcd_Cmd+1)^0,f,c
 13858  00432C  EF93  F021         	goto	i2u615_45
 13859  004330  0E01               	movlw	1
 13860  004332  1601               	andwf	??i2_Lcd_Cmd^0,f,c
 13861  004334  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
 13862  004336  4601               	rlncf	??i2_Lcd_Cmd^0,f,c
 13863  004338  5083               	movf	131,w,c	;volatile
 13864  00433A  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 13865  00433C  0BDF               	andlw	-33
 13866  00433E  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 13867  004340  6E83               	movwf	131,c	;volatile
 13868  004342  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
 13869  004346  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
 13870  004348  0E0F               	movlw	15
 13871  00434A  1601               	andwf	??i2_Lcd_Cmd^0,f,c
 13872  00434C  0E01               	movlw	1
 13873  00434E  1601               	andwf	??i2_Lcd_Cmd^0,f,c
 13874  004350  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
 13875  004352  5083               	movf	131,w,c	;volatile
 13876  004354  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 13877  004356  0BEF               	andlw	-17
 13878  004358  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 13879  00435A  6E83               	movwf	131,c	;volatile
 13880  00435C                     
 13881                           ;flexlcd.h: 156: _delay(10);
 13882  00435C  0E03               	movlw	3
 13883  00435E                     i2u973_47:
 13884  00435E  2EE8               	decfsz	wreg,f,c
 13885  004360  D7FE               	bra	i2u973_47
 13886  004362  F000               	nop	
 13887  004364                     
 13888                           ;flexlcd.h: 157: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
 13889  004364  8284               	bsf	132,1,c	;volatile
 13890  004366  0E03               	movlw	3
 13891  004368                     i2u974_47:
 13892  004368  2EE8               	decfsz	wreg,f,c
 13893  00436A  D7FE               	bra	i2u974_47
 13894  00436C  F000               	nop	
 13895  00436E  9284               	bcf	132,1,c	;volatile
 13896                           
 13897                           ;flexlcd.h: 158: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
 13898  004370  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
 13899  004374  90D8               	bcf	status,0,c
 13900  004376  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 13901  004378  90D8               	bcf	status,0,c
 13902  00437A  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 13903  00437C  90D8               	bcf	status,0,c
 13904  00437E  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 13905  004380  0E01               	movlw	1
 13906  004382  1601               	andwf	??i2_Lcd_Cmd^0,f,c
 13907  004384  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 13908  004386  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 13909  004388  5083               	movf	131,w,c	;volatile
 13910  00438A  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 13911  00438C  0B7F               	andlw	-129
 13912  00438E  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 13913  004390  6E83               	movwf	131,c	;volatile
 13914  004392  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
 13915  004396  90D8               	bcf	status,0,c
 13916  004398  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 13917  00439A  90D8               	bcf	status,0,c
 13918  00439C  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 13919  00439E  0E01               	movlw	1
 13920  0043A0  1601               	andwf	??i2_Lcd_Cmd^0,f,c
 13921  0043A2  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
 13922  0043A4  4601               	rlncf	??i2_Lcd_Cmd^0,f,c
 13923  0043A6  4601               	rlncf	??i2_Lcd_Cmd^0,f,c
 13924  0043A8  5083               	movf	131,w,c	;volatile
 13925  0043AA  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 13926  0043AC  0BBF               	andlw	-65
 13927  0043AE  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 13928  0043B0  6E83               	movwf	131,c	;volatile
 13929                           
 13930                           ;flexlcd.h: 159: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
 13931  0043B2  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
 13932  0043B6  90D8               	bcf	status,0,c
 13933  0043B8  3201               	rrcf	??i2_Lcd_Cmd^0,f,c
 13934  0043BA  0E01               	movlw	1
 13935  0043BC  1601               	andwf	??i2_Lcd_Cmd^0,f,c
 13936  0043BE  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
 13937  0043C0  4601               	rlncf	??i2_Lcd_Cmd^0,f,c
 13938  0043C2  5083               	movf	131,w,c	;volatile
 13939  0043C4  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 13940  0043C6  0BDF               	andlw	-33
 13941  0043C8  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 13942  0043CA  6E83               	movwf	131,c	;volatile
 13943  0043CC  C003  F001         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
 13944  0043D0  0E01               	movlw	1
 13945  0043D2  1601               	andwf	??i2_Lcd_Cmd^0,f,c
 13946  0043D4  3A01               	swapf	??i2_Lcd_Cmd^0,f,c
 13947  0043D6  5083               	movf	131,w,c	;volatile
 13948  0043D8  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 13949  0043DA  0BEF               	andlw	-17
 13950  0043DC  1801               	xorwf	??i2_Lcd_Cmd^0,w,c
 13951  0043DE  6E83               	movwf	131,c	;volatile
 13952  0043E0                     
 13953                           ;flexlcd.h: 160: _delay(10);
 13954  0043E0  0E03               	movlw	3
 13955  0043E2                     i2u975_47:
 13956  0043E2  2EE8               	decfsz	wreg,f,c
 13957  0043E4  D7FE               	bra	i2u975_47
 13958  0043E6  F000               	nop	
 13959  0043E8                     
 13960                           ;flexlcd.h: 161: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
 13961  0043E8  8284               	bsf	132,1,c	;volatile
 13962  0043EA  0E03               	movlw	3
 13963  0043EC                     i2u976_47:
 13964  0043EC  2EE8               	decfsz	wreg,f,c
 13965  0043EE  D7FE               	bra	i2u976_47
 13966  0043F0  F000               	nop	
 13967  0043F2  9284               	bcf	132,1,c	;volatile
 13968  0043F4                     
 13969                           ;flexlcd.h: 162: _delay((unsigned long)((5500)*(8000000/4000000.0)));
 13970  0043F4  0E0F               	movlw	15
 13971  0043F6  6E01               	movwf	??i2_Lcd_Cmd^0,c
 13972  0043F8  0E48               	movlw	72
 13973  0043FA                     i2u977_47:
 13974  0043FA  2EE8               	decfsz	wreg,f,c
 13975  0043FC  D7FE               	bra	i2u977_47
 13976  0043FE  2E01               	decfsz	??i2_Lcd_Cmd^0,f,c
 13977  004400  D7FC               	bra	i2u977_47
 13978  004402  0012               	return		;funcret
 13979  004404                     __end_ofi2_Lcd_Cmd:
 13980                           	callstack 0
 13981                           
 13982 ;; *************** function _modbusDelay *****************
 13983 ;; Defined at:
 13984 ;;		line 30 in file "modbus.c"
 13985 ;; Parameters:    Size  Location     Type
 13986 ;;		None
 13987 ;; Auto vars:     Size  Location     Type
 13988 ;;		None
 13989 ;; Return value:  Size  Location     Type
 13990 ;;                  1    wreg      void 
 13991 ;; Registers used:
 13992 ;;		wreg, status,2
 13993 ;; Tracked objects:
 13994 ;;		On entry : 0/0
 13995 ;;		On exit  : 0/0
 13996 ;;		Unchanged: 0/0
 13997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13998 ;;      Params:         0       0       0       0       0       0       0
 13999 ;;      Locals:         0       0       0       0       0       0       0
 14000 ;;      Temps:          0       0       0       0       0       0       0
 14001 ;;      Totals:         0       0       0       0       0       0       0
 14002 ;;Total ram usage:        0 bytes
 14003 ;; Hardware stack levels used:    1
 14004 ;; This function calls:
 14005 ;;		Nothing
 14006 ;; This function is called by:
 14007 ;;		_isr
 14008 ;; This function uses a non-reentrant model
 14009 ;;
 14010                           
 14011                           	psect	text49
 14012  0056D2                     __ptext49:
 14013                           	callstack 0
 14014  0056D2                     _modbusDelay:
 14015                           	callstack 24
 14016  0056D2                     
 14017                           ;modbus.c: 33: TMR0H = 0xF5;
 14018  0056D2  0EF5               	movlw	245
 14019  0056D4  6ED7               	movwf	215,c	;volatile
 14020                           
 14021                           ;modbus.c: 34: TMR0L = 0xD7;
 14022  0056D6  0ED7               	movlw	215
 14023  0056D8  6ED6               	movwf	214,c	;volatile
 14024  0056DA  0012               	return		;funcret
 14025  0056DC                     __end_of_modbusDelay:
 14026                           	callstack 0
 14027                           
 14028 ;; *************** function _OpenTmr0 *****************
 14029 ;; Defined at:
 14030 ;;		line 76 in file "system.c"
 14031 ;; Parameters:    Size  Location     Type
 14032 ;;		None
 14033 ;; Auto vars:     Size  Location     Type
 14034 ;;		None
 14035 ;; Return value:  Size  Location     Type
 14036 ;;                  1    wreg      void 
 14037 ;; Registers used:
 14038 ;;		wreg, status,2
 14039 ;; Tracked objects:
 14040 ;;		On entry : 0/0
 14041 ;;		On exit  : 0/0
 14042 ;;		Unchanged: 0/0
 14043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14044 ;;      Params:         0       0       0       0       0       0       0
 14045 ;;      Locals:         0       0       0       0       0       0       0
 14046 ;;      Temps:          0       0       0       0       0       0       0
 14047 ;;      Totals:         0       0       0       0       0       0       0
 14048 ;;Total ram usage:        0 bytes
 14049 ;; Hardware stack levels used:    1
 14050 ;; This function calls:
 14051 ;;		Nothing
 14052 ;; This function is called by:
 14053 ;;		_isr
 14054 ;; This function uses a non-reentrant model
 14055 ;;
 14056                           
 14057                           	psect	text50
 14058  005698                     __ptext50:
 14059                           	callstack 0
 14060  005698                     _OpenTmr0:
 14061                           	callstack 24
 14062  005698                     
 14063                           ;system.c: 78: T0CONbits.TMR0ON = 0;
 14064  005698  9ED5               	bcf	213,7,c	;volatile
 14065                           
 14066                           ;system.c: 79: T0CONbits.T08BIT = 0;
 14067  00569A  9CD5               	bcf	213,6,c	;volatile
 14068                           
 14069                           ;system.c: 80: T0CONbits.T0CS = 0;
 14070  00569C  9AD5               	bcf	213,5,c	;volatile
 14071                           
 14072                           ;system.c: 81: T0CONbits.PSA = 1;
 14073  00569E  86D5               	bsf	213,3,c	;volatile
 14074  0056A0                     
 14075                           ;system.c: 83: TMR0H = 0xF5;
 14076  0056A0  0EF5               	movlw	245
 14077  0056A2  6ED7               	movwf	215,c	;volatile
 14078                           
 14079                           ;system.c: 84: TMR0L = 0xD7;
 14080  0056A4  0ED7               	movlw	215
 14081  0056A6  6ED6               	movwf	214,c	;volatile
 14082  0056A8                     
 14083                           ;system.c: 86: T0CONbits.TMR0ON = 1;
 14084  0056A8  8ED5               	bsf	213,7,c	;volatile
 14085  0056AA                     
 14086                           ;system.c: 88: INTCONbits.TMR0IF = 0;
 14087  0056AA  94F2               	bcf	242,2,c	;volatile
 14088  0056AC                     
 14089                           ;system.c: 89: INTCONbits.TMR0IE = 1;
 14090  0056AC  8AF2               	bsf	242,5,c	;volatile
 14091  0056AE  0012               	return		;funcret
 14092  0056B0                     __end_of_OpenTmr0:
 14093                           	callstack 0
 14094                           
 14095                           	psect	rparam
 14096  0000                     
 14097                           	psect	temp
 14098  000077                     btemp:
 14099                           	callstack 0
 14100  000077                     	ds	1
 14101  0000                     int$flags	set	btemp
 14102  0000                     wtemp8	set	btemp+1
 14103  0000                     ttemp5	set	btemp+1
 14104  0000                     ttemp6	set	btemp+4
 14105  0000                     ttemp7	set	btemp+8
 14106                           
 14107                           	psect	idloc
 14108                           
 14109                           ;Config register IDLOC0 @ 0x200000
 14110                           ;	unspecified, using default values
 14111  200000                     	org	2097152
 14112  200000  FF                 	db	255
 14113                           
 14114                           ;Config register IDLOC1 @ 0x200001
 14115                           ;	unspecified, using default values
 14116  200001                     	org	2097153
 14117  200001  FF                 	db	255
 14118                           
 14119                           ;Config register IDLOC2 @ 0x200002
 14120                           ;	unspecified, using default values
 14121  200002                     	org	2097154
 14122  200002  FF                 	db	255
 14123                           
 14124                           ;Config register IDLOC3 @ 0x200003
 14125                           ;	unspecified, using default values
 14126  200003                     	org	2097155
 14127  200003  FF                 	db	255
 14128                           
 14129                           ;Config register IDLOC4 @ 0x200004
 14130                           ;	unspecified, using default values
 14131  200004                     	org	2097156
 14132  200004  FF                 	db	255
 14133                           
 14134                           ;Config register IDLOC5 @ 0x200005
 14135                           ;	unspecified, using default values
 14136  200005                     	org	2097157
 14137  200005  FF                 	db	255
 14138                           
 14139                           ;Config register IDLOC6 @ 0x200006
 14140                           ;	unspecified, using default values
 14141  200006                     	org	2097158
 14142  200006  FF                 	db	255
 14143                           
 14144                           ;Config register IDLOC7 @ 0x200007
 14145                           ;	unspecified, using default values
 14146  200007                     	org	2097159
 14147  200007  FF                 	db	255
 14148                           
 14149                           	psect	config
 14150                           
 14151                           ; Padding undefined space
 14152  300000                     	org	3145728
 14153  300000  FF                 	db	255
 14154                           
 14155                           ;Config register CONFIG1H @ 0x300001
 14156                           ;	Oscillator Selection bits
 14157                           ;	OSC = HS, HS oscillator
 14158                           ;	Fail-Safe Clock Monitor Enable bit
 14159                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 14160                           ;	Internal/External Oscillator Switchover bit
 14161                           ;	IESO = OFF, Oscillator Switchover mode disabled
 14162  300001                     	org	3145729
 14163  300001  02                 	db	2
 14164                           
 14165                           ;Config register CONFIG2L @ 0x300002
 14166                           ;	Power-up Timer Enable bit
 14167                           ;	PWRT = OFF, PWRT disabled
 14168                           ;	Brown-out Reset Enable bits
 14169                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 14170                           ;	Brown Out Reset Voltage bits
 14171                           ;	BORV = 3, Minimum setting
 14172  300002                     	org	3145730
 14173  300002  1F                 	db	31
 14174                           
 14175                           ;Config register CONFIG2H @ 0x300003
 14176                           ;	Watchdog Timer Enable bit
 14177                           ;	WDT = ON, WDT enabled
 14178                           ;	Watchdog Timer Postscale Select bits
 14179                           ;	WDTPS = 32768, 1:32768
 14180  300003                     	org	3145731
 14181  300003  1F                 	db	31
 14182                           
 14183                           ; Padding undefined space
 14184  300004                     	org	3145732
 14185  300004  FF                 	db	255
 14186                           
 14187                           ;Config register CONFIG3H @ 0x300005
 14188                           ;	CCP2 MUX bit
 14189                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 14190                           ;	PORTB A/D Enable bit
 14191                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 14192                           ;	Low-Power Timer1 Oscillator Enable bit
 14193                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 14194                           ;	MCLR Pin Enable bit
 14195                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 14196  300005                     	org	3145733
 14197  300005  81                 	db	129
 14198                           
 14199                           ;Config register CONFIG4L @ 0x300006
 14200                           ;	Stack Full/Underflow Reset Enable bit
 14201                           ;	STVREN = ON, Stack full/underflow will cause Reset
 14202                           ;	Single-Supply ICSP Enable bit
 14203                           ;	LVP = ON, Single-Supply ICSP enabled
 14204                           ;	Extended Instruction Set Enable bit
 14205                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 14206                           ;	Background Debugger Enable bit
 14207                           ;	DEBUG = 0x1, unprogrammed default
 14208  300006                     	org	3145734
 14209  300006  85                 	db	133
 14210                           
 14211                           ; Padding undefined space
 14212  300007                     	org	3145735
 14213  300007  FF                 	db	255
 14214                           
 14215                           ;Config register CONFIG5L @ 0x300008
 14216                           ;	Code Protection bit
 14217                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 14218                           ;	Code Protection bit
 14219                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 14220                           ;	Code Protection bit
 14221                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 14222                           ;	Code Protection bit
 14223                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 14224  300008                     	org	3145736
 14225  300008  0F                 	db	15
 14226                           
 14227                           ;Config register CONFIG5H @ 0x300009
 14228                           ;	Boot Block Code Protection bit
 14229                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 14230                           ;	Data EEPROM Code Protection bit
 14231                           ;	CPD = OFF, Data EEPROM not code-protected
 14232  300009                     	org	3145737
 14233  300009  C0                 	db	192
 14234                           
 14235                           ;Config register CONFIG6L @ 0x30000A
 14236                           ;	Write Protection bit
 14237                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 14238                           ;	Write Protection bit
 14239                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 14240                           ;	Write Protection bit
 14241                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 14242                           ;	Write Protection bit
 14243                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 14244  30000A                     	org	3145738
 14245  30000A  0F                 	db	15
 14246                           
 14247                           ;Config register CONFIG6H @ 0x30000B
 14248                           ;	Configuration Register Write Protection bit
 14249                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 14250                           ;	Boot Block Write Protection bit
 14251                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
 14252                           ;	Data EEPROM Write Protection bit
 14253                           ;	WRTD = OFF, Data EEPROM not write-protected
 14254  30000B                     	org	3145739
 14255  30000B  E0                 	db	224
 14256                           
 14257                           ;Config register CONFIG7L @ 0x30000C
 14258                           ;	Table Read Protection bit
 14259                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 14260                           ;	Table Read Protection bit
 14261                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 14262                           ;	Table Read Protection bit
 14263                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 14264                           ;	Table Read Protection bit
 14265                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 14266  30000C                     	org	3145740
 14267  30000C  0F                 	db	15
 14268                           
 14269                           ;Config register CONFIG7H @ 0x30000D
 14270                           ;	Boot Block Table Read Protection bit
 14271                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 14272  30000D                     	org	3145741
 14273  30000D  40                 	db	64
 14274                           tosu	equ	0xFFF
 14275                           tosh	equ	0xFFE
 14276                           tosl	equ	0xFFD
 14277                           stkptr	equ	0xFFC
 14278                           pclatu	equ	0xFFB
 14279                           pclath	equ	0xFFA
 14280                           pcl	equ	0xFF9
 14281                           tblptru	equ	0xFF8
 14282                           tblptrh	equ	0xFF7
 14283                           tblptrl	equ	0xFF6
 14284                           tablat	equ	0xFF5
 14285                           prodh	equ	0xFF4
 14286                           prodl	equ	0xFF3
 14287                           indf0	equ	0xFEF
 14288                           postinc0	equ	0xFEE
 14289                           postdec0	equ	0xFED
 14290                           preinc0	equ	0xFEC
 14291                           plusw0	equ	0xFEB
 14292                           fsr0h	equ	0xFEA
 14293                           fsr0l	equ	0xFE9
 14294                           wreg	equ	0xFE8
 14295                           indf1	equ	0xFE7
 14296                           postinc1	equ	0xFE6
 14297                           postdec1	equ	0xFE5
 14298                           preinc1	equ	0xFE4
 14299                           plusw1	equ	0xFE3
 14300                           fsr1h	equ	0xFE2
 14301                           fsr1l	equ	0xFE1
 14302                           bsr	equ	0xFE0
 14303                           indf2	equ	0xFDF
 14304                           postinc2	equ	0xFDE
 14305                           postdec2	equ	0xFDD
 14306                           preinc2	equ	0xFDC
 14307                           plusw2	equ	0xFDB
 14308                           fsr2h	equ	0xFDA
 14309                           fsr2l	equ	0xFD9
 14310                           status	equ	0xFD8

Data Sizes:
    Strings     89
    Constant    144
    Data        9
    BSS         555
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    112     118
    BANK0           128     35      93
    BANK1           256      0     225
    BANK2           256      0     225
    BANK3           256      0      50
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[14]), STR_7(CODE[6]), STR_5(CODE[20]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[12]), STR_1(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> strLcd2(BANK2[50]), strLcd1(BANK3[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_6(CODE[11]), strLcd2(BANK2[50]), strLcd1(BANK3[50]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___wmul
    ___flmul->___xxtofl
    ___xxtofl->___lwdiv
    ___llmod->___lldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->_fround
    ___flge->___xxtofl
    _decodeIt->_readCoil
    _decodeIt->_readInputCoil
    _writeReg->_generateCRC
    _writeCoil->_generateCRC
    _readReg->_generateCRC
    _readInputReg->_generateCRC
    _readInputCoil->_generateCRC
    _readCoil->_generateCRC
    _clearResponse->_OpnUSART
    ___fldiv->___flmul
    _PWM1_Set_Duty->___lldiv
    ___lldiv->___lmul
    _PWM1_Init->___aldiv
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _isr in COMRAM

    _isr->i2_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   93928
                                            110 COMRAM     2     2      0
                                             27 BANK0      8     8      0
                   _ConfigInterrupts
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _OpnUSART
                          _PWM1_Init
                      _PWM1_Set_Duty
                         _PWM1_Start
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                            ___lwdiv
                             ___wmul
                           ___xxtofl
                        _adc_amostra
                           _adc_init
                           _decodeIt
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             49    37     12   53685
                                             94 COMRAM    16     4     12
                                              0 BANK0     27    27      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4   10680
                                             57 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1513
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1705
                                             11 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4   10260
                                             57 COMRAM    13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    1444
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1633
                                             11 COMRAM     7     3      4
                            ___lwmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    6833
                                             32 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     634
                                              5 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     634
                                              5 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1826
                                             18 COMRAM    14    10      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
                        _adc_amostra (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     952
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     952
                                             30 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    1417
                                             82 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    4727
                                             86 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3982
                                             70 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     155
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1346
                                             32 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     950
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _decodeIt                                             0     0      0    7856
                           _checkCRC
                           _readCoil
                      _readInputCoil
                       _readInputReg
                            _readReg
                          _writeCoil
                           _writeReg
 ---------------------------------------------------------------------------------
 (2) _writeReg                                            16    16      0     935
                                             23 COMRAM    16    16      0
                      _clearResponse
                        _generateCRC
 ---------------------------------------------------------------------------------
 (2) _writeCoil                                           16    16      0     966
                                             23 COMRAM    16    16      0
                      _clearResponse
                        _generateCRC
 ---------------------------------------------------------------------------------
 (2) _readReg                                             11    11      0    1251
                                             23 COMRAM    11    11      0
                      _clearResponse
                        _generateCRC
 ---------------------------------------------------------------------------------
 (2) _readInputReg                                        11    11      0    1251
                                             23 COMRAM    11    11      0
                      _clearResponse
                        _generateCRC
 ---------------------------------------------------------------------------------
 (2) _readInputCoil                                       17    17      0    1535
                                             23 COMRAM    17    17      0
                      _clearResponse
                        _generateCRC
 ---------------------------------------------------------------------------------
 (2) _readCoil                                            17    17      0    1535
                                             23 COMRAM    17    17      0
                      _clearResponse
                        _generateCRC
 ---------------------------------------------------------------------------------
 (3) _generateCRC                                         18    16      2     389
                                              5 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (3) _clearResponse                                        1     1      0     142
                                             10 COMRAM     1     1      0
                           _ClsUSART
                           _OpnUSART
 ---------------------------------------------------------------------------------
 (4) _OpnUSART                                             5     5      0      43
                                              5 COMRAM     5     5      0
                           _ClsUSART
 ---------------------------------------------------------------------------------
 (5) _ClsUSART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _checkCRC                                            15    15      0     383
                                              5 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_amostra                                          7     5      2      31
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    3623
                                             57 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Set_Duty                                        5     5      0    1513
                                             30 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     961
                                             17 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            8     6      2     904
                                             19 COMRAM     8     6      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     625
                                              5 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3    1839
                                              8 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     248
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     452
                                              8 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     248
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ConfigInterrupts                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0     176
                                              3 COMRAM     2     2      0
                           _OpenTmr0
                        _modbusDelay
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i2_Lcd_Cmd                                            3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _modbusDelay                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _OpenTmr0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigInterrupts
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _OpnUSART
     _ClsUSART
   _PWM1_Init
     ___aldiv
   _PWM1_Set_Duty
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _PWM1_Start
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
         ___wmul (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _adc_amostra (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _adc_amostra (ARG)
     _fround (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _adc_amostra (ARG)
       ___lwdiv
         ___lwmod (ARG)
         ___wmul (ARG)
       ___lwmod
   ___fldiv
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
         ___wmul (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _adc_amostra (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _adc_amostra (ARG)
   ___fleq
   ___flge
     ___xxtofl (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _adc_amostra (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
       ___wmul (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _adc_amostra (ARG)
   ___flsub
     ___fladd
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _adc_amostra (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _adc_amostra (ARG)
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
             ___wmul (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _adc_amostra (ARG)
         ___lwdiv
           ___lwmod (ARG)
           ___wmul (ARG)
         ___lwmod
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
         ___wmul (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _adc_amostra (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _adc_amostra (ARG)
   ___fltol
     ___fldiv (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _adc_amostra (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _adc_amostra (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
         ___wmul (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _adc_amostra (ARG)
     ___xxtofl (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _adc_amostra (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _adc_amostra (ARG)
   ___lwdiv
     ___lwmod (ARG)
     ___wmul (ARG)
   ___wmul
   ___xxtofl
     ___lwdiv (ARG)
       ___lwmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
     _adc_amostra (ARG)
   _adc_amostra
   _adc_init
   _decodeIt
     _checkCRC
     _readCoil
       _clearResponse
         _ClsUSART
         _OpnUSART
           _ClsUSART
       _generateCRC
     _readInputCoil
       _clearResponse
         _ClsUSART
         _OpnUSART
           _ClsUSART
       _generateCRC
     _readInputReg
       _clearResponse
         _ClsUSART
         _OpnUSART
           _ClsUSART
       _generateCRC
     _readReg
       _clearResponse
         _ClsUSART
         _OpnUSART
           _ClsUSART
       _generateCRC
     _writeCoil
       _clearResponse
         _ClsUSART
         _OpnUSART
           _ClsUSART
       _generateCRC
     _writeReg
       _clearResponse
         _ClsUSART
         _OpnUSART
           _ClsUSART
       _generateCRC
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _adc_amostra (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _adc_amostra (ARG)
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
             ___wmul (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _adc_amostra (ARG)
         ___lwdiv
           ___lwmod (ARG)
           ___wmul (ARG)
         ___lwmod
     ___fleq
     ___flge
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _adc_amostra (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
         ___wmul (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _adc_amostra (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
             ___wmul (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _adc_amostra (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _adc_amostra (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
               ___wmul (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
               _adc_amostra (ARG)
           ___lwdiv
             ___lwmod (ARG)
             ___wmul (ARG)
           ___lwmod
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _adc_amostra (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _adc_amostra (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
             ___wmul (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _adc_amostra (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _adc_amostra (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _adc_amostra (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _adc_amostra (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
             ___wmul (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _adc_amostra (ARG)
     ___lldiv
       ___lmul (ARG)
     ___llmod
       ___lldiv (ARG)
         ___lmul (ARG)
     ___wmul
     ___xxtofl
       ___lwdiv (ARG)
         ___lwmod (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _adc_amostra (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _adc_amostra (ARG)
       ___lwdiv
         ___lwmod (ARG)
         ___wmul (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
           ___wmul (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _adc_amostra (ARG)

 _isr (ROOT)
   _OpenTmr0
   _modbusDelay
   i2_Lcd_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      32      11       19.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E1       9       87.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E1       7       87.9%
BITBANK0            80      0       0       4        0.0%
BANK0               80     23      5D       5       72.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     70      76       1       93.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C7      15        0.0%
DATA                 0      0     2C7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Sep 26 17:40:19 2021

_valPotenciometroHeatToDuty 0098                ___fldiv@aexp 0052                ___fldiv@bexp 0051  
                         _z 0071                ___fldiv@sign 004A                          l21 52FE  
                        l13 56D0                          l24 533A                          l18 52FC  
         PWM1_Set_Duty@temp 0022                ___awdiv@sign 0011                generateCRC@i 0012  
              generateCRC@j 0014                          _kd 00A8                          _ki 00D7  
                        _kp 00D9          writeReg@wr_Address 0020         ___wmul@multiplicand 0008  
      __size_of_adc_amostra 007C                         l114 46C0                         l115 470C  
                       l116 475E                         l220 1526                         l223 1A62  
                       l145 41AA                         l129 4FA6                         l401 4A70  
                       l217 14E6                         l402 4A3A                         l148 42D6  
                       l405 4A76                         l352 5644                         l424 36A8  
                       l416 3668                         l282 4C6C                         l522 5496  
                       l450 34C8                         l531 56C6                         l291 5670  
                       l427 36F4                         l451 34CE                         l355 4E26  
                       l428 36FA                         l285 5652                         l525 56BA  
                       l461 464E                         l294 5236                         l382 38B8  
                       l287 5660                         l471 4D5C                         l447 347C  
                       l439 343C                         l383 38BE                         l551 32A2  
                       l631 0F3E                         l288 5662                         l705 51A4  
                       l393 3A3C                         l457 4648                         l369 4E2A  
                       l482 452C                         l466 4CAC                         l458 4612  
                       l379 3878                         l476 4440                         l396 3A7C  
                       l469 4CD2                         l397 3A82                         l750 486A  
                       l902 4EEE                         l558 2C66                         l479 4466  
                       l671 5696                         l682 54F0                         l683 5500  
                       l915 5056                         l668 146C                         l925 4076  
                       l950 4B7A                         l934 4066                         l943 5100  
                       l698 5194                         l954 55E2                         l949 4B34  
                       l977 4970                         _PR2 000FCB                         _err 0080  
                       _isr 0008                ___awmod@sign 000B                         wreg 000FE8  
              ___flmul@aexp 002E                ___flmul@bexp 0033                ___flmul@sign 002D  
              ___flmul@temp 0038                ___flmul@prod 0034                ___fltol@exp1 005C  
                      l1120 52BE                        l1113 52AE                        l1201 5564  
                      l1034 3F2A                        l1043 3F1A                        l1036 3E70  
                      l1221 2160                        l1037 3EA2                        l1230 2430  
                      l1222 214E                        l1223 2114                        l1311 285A  
                      l1314 26EC                        l1307 24F6                        l1324 281C  
                      l1316 2764                        l1317 2752                        l1238 227A  
                      l1247 234A                        l1263 55AA                        l1351 3C36  
                      l1191 5428                        l1280 2E24                        l1248 2338  
                      l1184 5420                        l1362 3BCE                        l1194 555C  
                      l1275 3000                        l1355 3B72                        l1348 3ADA  
                      l1277 2E60                        l1286 2EA6                        l1288 2F1E  
                      l1289 2F0C                        l1369 5614                        l7001 3650  
                      l7011 367E                        l7003 3652                        l7021 36C6  
                      l7013 368E                        l7101 3442                        l6303 56B0  
                      l6311 545E                        l7023 36C8                        l7015 369E  
                      l7111 348A                        l7103 3452                        l7031 32D0  
                      l6305 56B4                        l6321 5474                        l6313 5468  
                      l7025 36F6                        l7017 36A0                        l7009 366E  
                      l7113 349A                        l7105 3462                        l7041 3314  
                      l7033 32D6                        l7201 3974                        l7121 3718  
                      l6401 1F7E                        l8001 08E0                        l6331 5480  
                      l6323 5478                        l6315 546C                        l6307 542A  
                      l7019 36B6                        l7115 349C                        l7107 3472  
                      l7051 3332                        l7043 3324                        l7035 32DC  
                      l7027 32A4                        l7211 39D2                        l7203 399C  
                      l7131 3740                        l7123 3724                        l6411 1FBE  
                      l6403 1F8C                        l8011 0924                        l8003 08EE  
                      l6341 548A                        l6333 5482                        l6325 547A  
                      l6317 546E                        l6309 544A                        l7117 34CA  
                      l7109 3474                        l7053 3336                        l7045 3326  
                      l7037 32E6                        l7029 32C4                        l7221 3A1A  
                      l7205 39AC                        l7213 39D6                        l7141 37B0  
                      l7133 374A                        l7125 372A                        l7301 49BC  
                      l6501 217E                        l6421 1FF0                        l6413 1FC0  
                      l6405 1F8E                        l8101 0DA2                        l8021 0998  
                      l8013 0948                        l8005 08F6                        l6343 548C  
                      l6335 5484                        l6327 547C                        l6319 5470  
                      l6351 5616                        l7071 3386                        l7047 332A  
                      l7039 32EC                        l7231 3A5A                        l7223 3A2A  
                      l7215 39F8                        l7207 39AE                        l7151 380E  
                      l7143 37D8                        l7135 3756                        l7127 3730  
                      l7119 36FC                        l7311 49DE                        l7303 49C2  
                      l6511 21BE                        l6431 2018                        l6423 1FF2  
                      l6407 1F9E                        l6415 1FC8                        l8111 0DDE  
                      l8103 0DAA                        l8031 09EC                        l8023 099E  
                      l8015 094E                        l8007 090E                        l6345 548E  
                      l6337 5486                        l6329 547E                        l6361 562C  
                      l7073 33AE                        l7065 335E                        l7081 33CA  
                      l7057 334A                        l7049 332E                        l7233 3A5E  
                      l7225 3A2E                        l7217 3A08                        l7209 39D0  
                      l7161 3856                        l7145 37E8                        l7137 377E  
                      l7153 3812                        l7129 373A                        l7241 4566  
                      l7321 4A0C                        l7313 49E4                        l7305 49C8  
                      l6521 21E8                        l6513 21CA                        l6505 2192  
                      l6441 2052                        l6433 2028                        l6425 1FF8  
                      l6417 1FD8                        l6409 1FAE                        l6601 2432  
                      l7401 2C3E                        l8201 1164                        l8121 0E2C  
                      l8113 0DEA                        l8105 0DB6                        l8041 0AA8  
                      l8033 0A04                        l8025 09BA                        l8017 0956  
                      l8009 0916                        l6347 5492                        l6339 5488  
                      l6363 563C                        l6371 4CA4                        l7091 3422  
                      l7083 33D2                        l7075 33B0                        l7067 337A  
                      l7059 335A                        l7235 3A7E                        l7227 3A30  
                      l7219 3A18                        l7171 3896                        l7163 3866  
                      l7155 3834                        l7147 37EA                        l7139 37AE  
                      l7251 458A                        l7243 4572                        l7331 4A2C  
                      l7323 4A10                        l7315 49FE                        l7307 49CE  
                      l6531 225A                        l6515 21CE                        l6507 21A2  
                      l6523 21EE                        l6451 207E                        l6443 2064  
                      l6435 2038                        l6427 2006                        l6419 1FDE  
                      l6611 246E                        l6603 243E                        l7411 560A  
                      l8211 11D6                        l8123 0E38                        l8115 0DEE  
                      l8107 0DBA                        l8051 0B56                        l8035 0A38  
                      l8027 09D6                        l8019 0988                        l8043 0AAE  
                      l8301 2CD4                        l6349 5494                        l6357 561A  
                      l6381 4CCC                        l6365 4C70                        l7093 3424  
                      l7085 33EE                        l7077 33B2                        l7069 3382  
                      l7237 3A7E                        l7229 3A4A                        l7181 38DC  
                      l7173 389A                        l7165 386A                        l7157 3844  
                      l7149 380C                        l7261 45D6                        l7253 4594  
                      l7245 4578                        l7341 4A48                        l7333 4A30  
                      l7325 4A14                        l7317 4A04                        l7309 49D8  
                      l6541 22B4                        l6525 2214                        l6533 226A  
                      l6517 21DC                        l6509 21B0                        l6461 2092  
                      l6453 2082                        l6445 2072                        l6437 203A  
                      l6429 2008                        l7501 3FBC                        l6701 2774  
                      l6621 24A0                        l6613 247E                        l6605 244C  
                      l7413 560E                        l7405 55E6                        l8221 1238  
                      l8213 11DE                        l8205 119E                        l8141 0F00  
                      l8125 0E40                        l8133 0ED4                        l8109 0DC0  
                      l8117 0DF4                        l8061 0BE8                        l8053 0B80  
                      l8045 0ACC                        l8037 0A6A                        l8029 09E6  
                      l8311 2D0A                        l8303 2CDA                        l6359 562A  
                      l6391 4D44                        l6383 4CD8                        l6367 4C74  
                      l7087 33F6                        l7095 3426                        l7079 33C4  
                      l7191 3904                        l7183 38E8                        l7175 38BA  
                      l7167 386C                        l7159 3854                        l7271 45EC  
                      l7263 45DC                        l7255 459A                        l7247 457E  
                      l7239 452E                        l7343 4A58                        l7335 4A32  
                      l7327 4A18                        l7319 4A08                        l6551 22E4  
                      l6543 22BE                        l6535 2290                        l6527 2248  
                      l6519 21DE                        l6471 20A6                        l6463 2096  
                      l6455 2086                        l6447 2076                        l6439 2042  
                      l7511 3FFC                        l7503 3FDA                        l7431 3E38  
                      l7423 3E0E                        l6711 27D6                        l6703 2780  
                      l6631 24E0                        l6623 24AE                        l6615 2484  
                      l6607 244E                        l7351 3014                        l7407 55EA  
                      l8231 127E                        l8223 123E                        l8215 1202  
                      l8207 11A0                        l8151 0F5A                        l8143 0F1A  
                      l8135 0EEA                        l8127 0E8C                        l8119 0E0E  
                      l8071 0CB6                        l8063 0BFE                        l8055 0B9E  
                      l8047 0B06                        l8039 0A76                        l7601 4828  
                      l8401 2FC0                        l8321 2D4A                        l8313 2D1A  
                      l8305 2CE8                        l6393 4D4C                        l6385 4CEA  
                      l6377 4CBA                        l6369 4C90                        l7089 33FA  
                      l7193 390E                        l7185 38EE                        l7177 38BA  
                      l7169 3886                        l7281 460A                        l7273 45F0  
                      l7265 45E0                        l7257 45B2                        l7249 4584  
                      l7345 4A5C                        l7329 4A26                        l6561 230C  
                      l6553 22E8                        l6545 22CC                        l6537 22A0  
                      l6529 224A                        l6481 20E0                        l6473 20AA  
                      l6465 209A                        l6457 208A                        l6449 207A  
                      l7521 402C                        l7513 400A                        l7505 3FEA  
                      l7441 3E6C                        l7433 3E46                        l7417 3DD6  
                      l6721 283E                        l6713 27EA                        l6705 278E  
                      l6641 252A                        l6633 24E6                        l6625 24B0  
                      l6617 2494                        l6609 245E                        l7409 55FA  
                      l6801 5030                        l8241 12E2                        l8233 12A2  
                      l8225 124C                        l8217 1208                        l8209 11B2  
                      l8161 1018                        l8153 0F66                        l8145 0F36  
                      l8137 0EF6                        l8129 0EC0                        l8073 0CC0  
                      l8057 0BD0                        l8049 0B24                        l7611 485A  
                      l7603 482A                        l8411 2FF6                        l8403 2FDC  
                      l8323 2D5A                        l8331 2D7A                        l8315 2D1C  
                      l8307 2CEA                        l6395 4D54                        l6379 4CC0  
                      l6387 4CEE                        l7195 391A                        l7187 38F4  
                      l7179 38C0                        l7291 4634                        l7275 45FE  
                      l7267 45E4                        l7259 45C6                        l7347 4A72  
                      l6571 2366                        l6563 231A                        l6555 22F8  
                      l6547 22CE                        l6491 2132                        l6483 20FC  
                      l6475 20AE                        l6467 209E                        l6459 208E  
                      l7531 4056                        l7523 4036                        l7507 3FEC  
                      l7451 3EB0                        l7443 3E7A                        l7435 3E52  
                      l7419 3DFA                        l6723 2840                        l6715 2804  
                      l6707 27B8                        l6651 257A                        l6643 2536  
                      l6635 2506                        l6627 24C0                        l6619 249A  
                      l6811 53B6                        l7363 3256                        l6731 4E2C  
                      l6803 5036                        l7371 2882                        l8251 1314  
                      l8243 12EE                        l8235 12AE                        l8227 126A  
                      l8219 121A                        l8171 10C4                        l8163 104C  
                      l8155 0F6A                        l8147 0F42                        l8139 0EFA  
                      l8091 0D46                        l8083 0CFE                        l8067 0C32  
                      l8059 0BDE                        ?_isr 0001                        l7605 4834  
                      l7541 54A8                        l8405 2FE0                        l8341 2DB8  
                      l8333 2D8A                        l8325 2D62                        l8309 2CFA  
                      l8317 2D24                        l6901 4438                        l6389 4D22  
                      l7197 3942                        l7189 38FE                        l7293 464A  
                      l7277 4604                        l7269 45E8                        l7621 5058  
                      l6581 23D0                        l6573 2374                        l6565 2330  
                      l6549 22DC                        l6557 22FA                        l6493 2140  
                      l6485 210C                        l6469 20A2                        l6477 20B2  
                      l7701 4930                        l7533 5672                        l7509 3FF6  
                      l7461 3EE0                        l7453 3EBE                        l7445 3E94  
                      l7437 3E62                        l7429 3E36                        l6717 2820  
                      l6725 2846                        l6709 27BC                        l6661 25BC  
                      l6653 2586                        l6645 2540                        l6637 2516  
                      l6629 24D0                        l6821 53EE                        l6813 53BE  
                      l7357 316E                        l7349 3004                        l6741 4E58  
                      l6733 4E30                        l6805 5046                        l8261 136A  
                      l8245 12F2                        l8253 1330                        l8237 12B6  
                      l8229 1276                        l8181 110A                        l8173 10D0  
                      l8165 105C                        l8157 0F80                        l8149 0F4A  
                      l8093 0D64                        l8085 0D00                        l8069 0C48  
                      l8501 1716                        l7607 483A                        l7551 5112  
                      l7543 54B6                        l8407 2FEE                        l8351 2E00  
                      l8343 2DC8                        l8335 2D8A                        l8327 2D66  
                      l8319 2D34                        l6911 4460                        l7199 3972  
                      l7287 4620                        l7279 4608                        l7295 4972  
                      l7631 50F8                        l7623 5086                        l6591 240A  
                      l6583 23F0                        l6575 23AE                        l6559 2308  
                      l6495 2142                        l6487 2122                        l6479 20B6  
                      l6399 1F72                        l7615 5566                        l7703 4940  
                      l7711 5238                        l7535 568E                        l7519 4022  
                      l7471 3F0A                        l7463 3EEA                        l7447 3EA0  
                      l7439 3E66                        l6727 284A                        l6719 2830  
                      l6671 261E                        l6663 25C8                        l6655 2592  
                      l6647 2556                        l6831 541A                        l6823 53F4  
                      l6815 53D0                        l7359 317E                        l6751 4E86  
                      l6743 4E60                        l6735 4E3E                        l6807 504E  
                      l7383 2A40                        l7367 285E                        l8263 1388  
                      l8255 1342                        l8247 1304                        l8239 12C4  
                      l8191 1146                        l8183 1112                        l8175 10D4  
                      l8167 1060                        l8159 0FCC                        l8095 0D6A  
                      l8087 0D12                        l8079 0CC4                        l8511 184E  
                      l8503 175E                        l7801 46D8                        l7609 484A  
                      l7561 5154                        l7553 5128                        l7545 54C6  
                      l8409 2FF4                        l8361 2E4E                        l8353 2E14  
                      l8345 2DD8                        l8281 2C68                        l6921 44D0  
                      l6913 446C                        l7289 4630                        l7297 49AA  
                      l7633 50FE                        l7625 5096                        l7641 4AB6  
                      l6593 2410                        l6585 23F4                        l6569 235A  
                      l6577 23B0                        l6497 214C                        l6489 212E  
                      l7617 5576                        l7705 4950                        l7721 528E  
                      l7713 524E                        l7529 404A                        l7473 3F2C  
                      l7449 3EAA                        l6681 26B4                        l6673 262A  
                      l6665 25D8                        l6657 25A0                        l6649 2562  
                      l6825 540A                        l6817 53D8                        l6841 5532  
                      l6833 5502                        l6761 4EC0                        l6753 4E8E  
                      l6745 4E64                        l6737 4E46                        l7377 2994  
                      l7369 286C                        l8265 1394                        l8257 134E  
                      l8249 1310                        l8273 1424                        l8193 115C  
                      l8185 1120                        l8177 10DA                        l8169 10AC  
                      l8097 0D78                        l8089 0D40                        l8521 19B8  
                      l8505 176E                        l8513 18AA                        l8441 146E  
                      l6851 41B2                        l7811 46E8                        l7803 46E0  
                      l7571 4760                        l7563 5172                        l7555 5130  
                      l7547 54D0                        l7539 5498                        l8371 2E96  
                      l8363 2E5E                        l8355 2E22                        l8347 2DE8  
                      l8339 2D9E                        l8291 2CA4                        l8283 2C74  
                      l6923 44FA                        l6931 452A                        l6915 447E  
                      l6907 444E                        l7299 49B6                        l7627 50C4  
                      l7651 4B22                        l7643 4AE4                        l6595 241E  
                      l6587 2402                        l6579 23C0                        l6499 216E  
                      l7707 4960                        l7723 529E                        l7715 5256  
                      l7731 3AA4                        l7491 3F94                        l7475 3F42  
                      l7459 3ED6                        l6691 270A                        l6683 26D2  
                      l6675 2646                        l6667 25F2                        l6659 25AC  
                      l6827 5412                        l6819 53E0                        l6843 5548  
                      l6835 5514                        l6771 4EE6                        l6763 4EC2  
                      l6755 4E9C                        l6747 4E6C                        l6739 4E4A  
                      l7395 2B92                        l7379 29A8                        l7387 2A6C  
                      l8267 139C                        l8259 1352                        l8195 1160  
                      l8187 1124                        l8099 0D96                        l8179 10F0  
                      l8275 143E                        l8531 1A52                        l8523 19BE  
                      l8515 18CC                        l8507 17D4                        l8451 14B6  
                      l8443 1476                        l6861 42B4                        l6853 4230  
                      l7821 472E                        l7813 46EA                        l7805 46E2  
                      l7581 4794                        l7573 4764                        l7565 5182  
                      l7557 513C                        l7549 5102                        l7901 5646  
                      l8381 2ED6                        l8373 2EA4                        l8365 2E70  
                      l8357 2E2E                        l8349 2DF0                        l8293 2CB4  
                      l8285 2C82                        l6925 4524                        l6909 4454  
                      l6917 4482                        l6941 3502                        l7629 50D4  
                      l7653 4B72                        l7645 4AF4                        l7637 4A78  
                      l7661 55C2                        l6597 2420                        l6589 2408  
                      l7725 52A8                        l7717 5262                        l7741 3B1C  
                      l7733 3AEA                        l7493 3FA4                        l7485 3F70  
                      l7469 3EFE                        l6693 270E                        l6685 26DC  
                      l6677 2670                        l6669 2602                        l6829 5414  
                      l6845 5550                        l6837 551C                        l6765 4EC8  
                      l6757 4EA2                        l6749 4E7E                        l6781 4FC2  
                      l7397 2BA6                        l7389 2A80                        l8269 1414  
                      l8189 1134                        l8277 1460                        l8541 1C34  
                      l8533 1A54                        l8525 1A08                        l8517 1924  
                      l8509 183E                        l8461 14C0                        l8453 14B8  
                      l8445 1478                        l6863 42BC                        l6855 4238  
                      l7831 4746                        l7823 4730                        l7815 46FA  
                      l7807 46E4                        l6871 407A                        l7591 47D6  
                      l7583 47A4                        l7575 4772                        l7567 5184  
                      l7559 514A                        l7903 564A                        l8391 2F48  
                      l8383 2F04                        l8367 2E86                        l8375 2EB6  
                      l8359 2E4C                        l8295 2CB6                        l8287 2C84  
                      l6919 44B6                        l6951 3550                        l6943 3508  
                      l6935 34D0                        l7911 4D5E                        l7655 4B78  
                      l7647 4B02                        l7639 4AA6                        l7663 55D2  
                      l7719 5270                        l7751 3BA4                        l7743 3B28  
                      l7735 3B00                        l7727 3A86                        l7495 3FA8  
                      l7487 3F72                        l7479 3F56                        l6695 271C  
                      l6687 26EA                        l6679 26A6                        l6847 5556  
                      l6839 5524                        l6759 4EB8                        l6767 4ECE  
                      l6791 4FF6                        l6783 4FC6                        l6775 4FA8  
                      l8551 1D24                        l8543 1C76                        l8535 1A64  
                      l8527 1A0A                        l8519 199E                        l8471 14DE  
                      l8463 14C4                        l8455 14BA                        l8447 14B2  
                      l6865 42BE                        l6857 423A                        l6849 41AE  
                      l7841 4752                        l7833 4746                        l7825 4732  
                      l7817 4724                        l7809 46E6                        l6881 410E  
                      l6873 407E                        l7593 47E2                        l7585 47A8  
                      l7577 4782                        l7569 518E                        l7905 564E  
                      l8393 2F72                        l8377 2EC4                        l8369 2E8C  
                      l8289 2C94                        l8297 2CBE                        l6961 3562  
                      l6953 3552                        l6945 3512                        l6937 34F0  
                      l7921 4DB0                        l7913 4D70                        l7649 4B14  
                      l7681 48D6                        l7673 4896                        l7761 3BE2  
                      l7753 3BB0                        l7745 3B5A                        l7729 3A96  
                      l7497 3FAE                        l7489 3F82                        l6697 274A  
                      l6689 26FC                        l6769 4EDE                        l6793 4FFE  
                      l6785 4FD4                        l6777 4FAC                        l8561 1DAA  
                      l8553 1D36                        l8545 1C88                        l8537 1AB0  
                      l8529 1A20                        l8481 150E                        l8473 14E2  
                      l8465 14C8                        l8457 14BC                        l8449 14B4  
                      l6867 42C6                        l6859 4242                        l7843 4758  
                      l7835 474C                        l7827 4734                        l7819 472C  
                      l6891 4194                        l6883 4180                        l6875 40FC  
                      l7851 4F00                        l7595 47F0                        l7587 47B8  
                      l7579 4786                        l7907 5650                        l8387 2F2E  
                      l8395 2F76                        l8379 2EC8                        l8299 2CCE  
                      l6955 3556                        l6947 3518                        l6939 34FC  
                      l7931 4DEC                        l7923 4DB8                        l7915 4D84  
                      l7659 55AC                        l7691 4906                        l7683 48E4  
                      l7675 48C0                        l7667 486C                        l7763 3C06  
                      l7755 3BBE                        l7747 3B5C                        l7739 3B14  
                      l7499 3FB2                        l6795 500C                        l6787 4FDC  
                      l6779 4FBA                        l8571 1E0E                        l8563 1DBC  
                      l8555 1D50                        l8547 1CBA                        l8539 1B5C  
                      l8491 1694                        l8483 151C                        l8475 14E8  
                      l8467 14CE                        l8459 14BE                        l7909 56BC  
                      l6869 42C8                        l7845 4758                        l7837 474C  
                      l7829 4736                        l6893 419C                        l6885 4188  
                      l6877 4104                        l7853 4F0A                        l7861 4F44  
                      l7597 47FA                        l7589 47CE                        l7941 51A8  
                      l8397 2F90                        l8389 2F3A                        l7781 52D6  
                      l7773 56C8                        l6981 35DA                        l6973 358A  
                      l6965 3576                        l6957 355A                        l6949 3540  
                      l7933 4DFE                        l7925 4DCA                        l7917 4D96  
                      l7693 4910                        l7677 48C2                        l7669 4882  
                      l7765 3C16                        l7757 3BDC                        l7749 3B68  
                      l6797 5022                        l6789 4FEE                        l8581 1EC6  
                      l8573 1E20                        l8565 1DD0                        l8557 1D74  
                      l8549 1CCC                        l8493 16B0                        l8485 1538  
                      l8477 14F8                        l8469 14DA                        l7839 4752  
                      l7791 4650                        l6887 418A                        l6879 4106  
                      l7863 4F4E                        l7855 4F14                        l7847 4EF2  
                      l7599 4818                        l7871 4B80                        l7943 520E  
                      l8399 2FA6                        l7775 52C2                        l6895 4404  
                      l6991 35FE                        l6983 35DC                        l6975 35A6  
                      l6967 3586                        l6959 355E                        l7935 4E06  
                      l7927 4DD2                        l7919 4D9E                        l7679 48D2  
                      l7767 3C24                        l7759 3BDE                        l6799 502A  
                      l7951 070C                        l8583 1EE2                        l8567 1DE2  
                      l8575 1E6A                        l8559 1D86                        l8495 16E2  
                      l8487 1680                        l8479 14FC                        l7793 4668  
                      l6889 4192                        l7865 4F72                        l7849 4EF6  
                      l7881 4B8E                        l7873 4B82                        l7945 5226  
                      l7777 52C6                        l7785 52DE                        l6897 4408  
                      l6993 361A                        l6985 35DE                        l6977 35AE  
                      l7937 4E18                        l7929 4DE4                        l7689 48FC  
                      l7769 3C26                        l7961 073A                        l7953 0718  
                      l8585 1EEA                        l8577 1E7C                        l8569 1DFA  
                      l8497 16F6                        l8489 1686                        l7795 46BC  
                      l7867 4F76                        l7859 4F1E                        l7891 4C18  
                      l7883 4BD8                        l7875 4B84                        l7787 530C  
                      l7779 52CE                        l6899 4424                        l6995 3622  
                      l6987 35F0                        l6979 35B2                        l7939 4E20  
                      l7699 4924                        l7971 07C0                        l7963 0752  
                      l7955 0720                        l7947 06EC                        l8587 1F2A  
                      l8579 1E98                        l8499 1708                        l7893 4C20  
                      l7885 4BE8                        l7877 4B86                        l7869 4B7C  
                      l6997 3626                        l6989 35F6                        l7981 0812  
                      l7973 07C4                        l7965 0770                        l7957 0734  
                      l7949 06FA                        l7895 4C40                        l7887 4BEC  
                      l7879 4B8C                        l6999 364E                        l7991 0888  
                      l7983 082E                        l7967 077A                        l7975 07E2  
                      l7897 4C60                        l7889 4BF4                        l7993 088E  
                      l7985 0858                        l7977 07FE                        l7969 0796  
                      l7899 4C68                        l7987 085C                        l7979 0806  
                      l7997 0894                        l7989 087E                        l7999 08CE  
                      STR_1 06DC                        STR_2 06B3                        STR_3 06CA  
                      STR_4 06D3                        STR_5 0691                        STR_6 06BF  
                      STR_7 06E4                        STR_8 06A5                        _LATA 000F89  
                      _LATB 000F8A                        _LATC 000F8B                        _LATD 000F8C  
                      _LATE 000F8D                        _PIE1 000F9D                        u7000 26EA  
                      u7001 26E6                        u7010 270A                        u7011 2706  
                      u7020 271C                        u7100 4E3E                        u7021 2718  
                      u7101 4E3A                        u7030 274A                        u7110 4E58  
                      u7031 2746                        u7111 4E54                        u8000 54F0  
                      u7040 2760                        u7120 4E7E                        u7200 5022  
                      u8001 54EC                        u7041 275C                        u7121 4E7A  
                      u7201 501E                        u8010 5128                        u7050 2774  
                      u7130 4E9C                        u7210 5046                        u8011 5124  
                      u7051 2770                        u7131 4E98                        u7211 5042  
                      u8020 514A                        u6500 4CEA                        u8100 5086  
                      u7060 278E                        u7220 53D0                        u7140 4EB8  
                      u8021 5146                        u6501 4CE6                        u8101 5082  
                      u7061 278A                        u7221 53CC                        u7141 4EB4  
                      u8030 5172                        u6510 4D22                        u8110 50C4  
                      u7070 27D6                        u7230 53EE                        u7150 4EDE  
                      u8031 516E                        u6511 4D1E                        u8111 50C0  
                      u7071 27D2                        u7231 53EA                        u7151 4EDA  
                      u8040 4772                        u7400 3572                        u8120 50F8  
                      u6600 2072                        u6520 1F8C                        u8200 48B6  
                      u7080 2804                        u7240 540A                        u7160 4FBA  
                      u9000 1238                        u7305 41FA                        u8041 476E  
                      u7401 356E                        u8121 50F4                        u6601 206E  
                      u6521 1F88                        u7081 2800                        u7241 5406  
                      u7161 4FB6                        u9001 1234                        u8050 4794  
                      u7410 3586                        u8130 4AA6                        u6610 20E0  
                      u6530 1F9E                        u8210 48E4                        u7090 283E  
                      u7250 5514                        u7170 4FD4                        u9010 124C  
                      u7315 4086                        u8051 4790                        u7411 3582  
                      u8131 4AA2                        u6611 20DC                        u6531 1F9A  
                      u8211 48E0                        u7091 283A                        u7251 5510  
                      u7171 4FD0                        u9011 1248                        u8060 47CE  
                      u7340 444E                        u7420 35A6                        u7500 3324  
                      u8140 4AE4                        u6700 21BE                        u6620 20F8  
                      u6540 1FAE                        u8220 48F8                        u8300 3AA4  
                      u7260 5532                        u7180 4FEE                        u9100 1388  
                      u9020 126A                        u7325 40A0                        u8061 47CA  
                      u7341 444A                        u7421 35A2                        u7501 3320  
                      u8141 4AE0                        u6701 21BA                        u6621 20F2  
                      u6541 1FAA                        u8221 48F4                        u8205 48AC  
                      u8301 3AA0                        u7261 552E                        u7181 4FEA  
                      u9101 1384                        u9021 1266                        u8070 47F0  
                      u7350 447E                        u7510 3346                        u8150 4B02  
                      u6710 21DC                        u6630 20FA                        u6550 1FF0  
                      u8230 4920                        u8310 3B00                        u7270 5548  
                      u7190 500C                        u9110 143E                        u9030 12A2  
                      u7335 40C6                        u8071 47EC                        u7351 447A  
                      u7511 3342                        u8151 4AFE                        u6711 21D8  
                      u6551 1FEC                        u8231 491C                        u8311 3AFC  
                      u7271 5544                        u7191 5008                        u9111 143A  
                      u9031 129E                        u8080 4818                        u9200 2D8A  
                      u7360 44B6                        u6480 563C                        u7440 35F0  
                      u7600 34C8                        u7520 335A                        u8160 4B22  
                      u6800 231A                        u6720 2214                        u6640 2122  
                      u6560 2006                        u8240 4940                        u8320 3B56  
                      u9120 1460                        u9040 12C4                        u8081 4814  
                      u9201 2D86                        u7361 44B2                        u6481 5638  
                      u7441 35EC                        u7601 34C4                        u7521 3356  
                      u8161 4B1E                        u6801 2316                        u6721 2210  
                      u6641 211E                        u6561 2002                        u8241 493C  
                      u8321 3B52                        u9121 145C                        u9041 12C0  
                      u8410 470C                        u8090 484A                        u9210 2E00  
                      u9130 2C82                        u7370 44FA                        u6490 4CBA  
                      u7450 361A                        u7434 35C4                        u7530 337A  
                      u7610 377E                        u8170 4B72                        u6810 2330  
                      u6730 225A                        u6650 2140                        u6570 2018  
                      u8250 4950                        u8330 3BA0                        u9050 12E2  
                      u8411 4708                        u8091 4846                        u9211 2DFC  
                      u9131 2C7E                        u7371 44F6                        u6475 544E  
                      u6491 4CB6                        u7451 3616                        u7435 35C0  
                      u7531 3376                        u7611 377A                        u8171 4B6E  
                      u6811 232C                        u6731 2256                        u6651 213C  
                      u6571 2014                        u8251 494C                        u8331 3B9C  
                      u9051 12DE                        u8420 4F6E                        u8500 5670  
                      u9300 2F1A                        u9220 2E22                        u9140 2C94  
                      u7380 4524                        u7620 3834                        u7700 4620  
                      u8180 55C2                        u6900 241E                        u6820 2346  
                      u6740 2290                        u6660 2160                        u6580 2028  
                      u8260 524E                        u8340 3BBE                        u9060 1304  
                      u7285 41BA                        u8501 566C                        u9301 2F16  
                      u9221 2E1E                        u9141 2C90                        u8405 5314  
                      u7381 4520                        u7621 3830                        u7701 461C  
                      u8181 55BE                        u6901 241A                        u6821 2342  
                      u6741 228C                        u6661 215C                        u6581 2024  
                      u8261 524A                        u8341 3BBA                        u9061 1300  
                      u8430 4F96                        u9310 2F2E                        u9230 2E4C  
                      u9150 2CA4                        u7470 3664                        u7390 3550  
                      u7550 33C4                        u7630 3886                        u7710 4648  
                      u8510 4D70                        u6830 235A                        u6750 22A0  
                      u6670 216E                        u6590 2064                        u8190 4882  
                      u8270 5270                        u8350 3BCE                        u6910 244C  
                      u9070 132C                        u7295 41D4                        u9311 2F2A  
                      u9231 2E48                        u9151 2CA0                        u7471 3660  
                      u7391 354C                        u7551 33C0                        u7631 3882  
                      u7711 4644                        u8511 4D6C                        u6831 2356  
                      u6751 229C                        u6671 216A                        u6591 2060  
                      u8191 487E                        u8271 526C                        u8351 3BCA  
                      u6911 2448                        u9071 1328                        u8440 4FA6  
                      u9320 2F48                        u9240 2E70                        u9160 2CE8  
                      u7480 36B6                        u7464 3638                        u7560 33EE  
                      u7544 3398                        u7640 38B8                        u7720 4A48  
                      u8520 4D84                        u6840 2374                        u6760 22CC  
                      u6680 217E                        u8280 528E                        u8360 3BDC  
                      u6920 245E                        u7800 2BA6                        u9080 1342  
                      u8600 0770                        u9400 1694                        u8441 4FA2  
                      u9321 2F44                        u9241 2E6C                        u9161 2CE4  
                      u7481 36B2                        u7465 3634                        u7561 33EA  
                      u7545 3394                        u7641 38B4                        u7721 4A44  
                      u8521 4D80                        u6841 2370                        u6761 22C8  
                      u6681 217A                        u8281 528A                        u8361 3BD8  
                      u6921 245A                        u7801 2BA2                        u9081 133E  
                      u8601 076C                        u9401 1690                        u9330 2F90  
                      u9250 2E86                        u9170 2CFA                        u7490 36F4  
                      u7650 3942                        u7730 4A70                        u8530 4D96  
                      u6850 23AE                        u6770 22DC                        u6690 21B0  
                      u8370 3C16                        u8290 3A96                        u6930 246E  
                      u7810 55FA                        u9090 136A                        u8610 07E2  
                      u9410 16AA                        u8427 4F64                        u9331 2F8C  
                      u9251 2E82                        u9171 2CF6                        u7491 36F0  
                      u7651 393E                        u7731 4A6C                        u8531 4D92  
                      u6851 23AA                        u6771 22D8                        u6691 21AC  
                      u8371 3C12                        u8291 3A92                        u6931 246A  
                      u7811 55F6                        u9091 1366                        u8611 07DE  
                      u9411 16A4                        u8460 4BE8                        u9340 2FC0  
                      u9260 2EA4                        u9180 2D0A                        u7580 3438  
                      u7660 39F8                        u8540 4DB0                        u6860 23C0  
                      u6780 22F8                        u8380 3C24                        u7900 3EFA  
                      u6940 24AE                        u7740 3014                        u7820 560A  
                      u8700 0AA8                        u8620 07FE                        u9500 1DD0  
                      u9420 16AC                        u8437 4F8C                        u8461 4BE4  
                      u9341 2FBC                        u9261 2EA0                        u9181 2D06  
                      u7581 3434                        u7661 39F4                        u8541 4DAC  
                      u6861 23BC                        u6781 22F4                        u8381 3C20  
                      u7901 3EF6                        u6941 24AA                        u7741 3010  
                      u7821 5606                        u8701 0AA4                        u8621 07FA  
                      u9501 1DCC                        u8470 4C18                        u9350 2FEE  
                      u9270 2EC4                        u9190 2D4A                        u8390 530C  
                      u7590 348A                        u7574 340C                        u7670 3A4A  
                      u8550 4DCA                        u6870 23D0                        u6790 2308  
                      u7910 3F1A                        u6950 24C0                        u7750 317E  
                      u8710 0ACC                        u8630 087A                        u9510 1DE2  
                      u9430 16F6                        u8471 4C14                        u8455 4BAC  
                      u9351 2FEA                        u9271 2EC0                        u9191 2D46  
                      u8391 5308                        u7591 3486                        u7575 3408  
                      u7671 3A46                        u8551 4DC6                        u6871 23CC  
                      u6791 2304                        u7911 3F16                        u7831 3DE6  
                      u6951 24BC                        u7751 317A                        u8711 0AC8  
                      u8631 0876                        u9511 1DDE                        u9431 16F2  
                      u9280 2ED6                        u7680 3A7C                        u8560 4DE4  
                      u6880 23F0                        u7920 3F42                        u7840 3DFA  
                      u6960 24D0                        u7760 286C                        u8800 0D64  
                      u8720 0B24                        u8640 08E0                        u9440 1708  
                      u9281 2ED2                        u7681 3A78                        u8561 4DE0  
                      u6881 23EC                        u7921 3F3E                        u7841 3DF6  
                      u6961 24CC                        u7761 2868                        u8801 0D60  
                      u8721 0B20                        u8641 08DC                        u9441 1704  
                      u8490 5660                        u9290 2F04                        u7690 45B2  
                      u8570 4DFE                        u6890 2402                        u7930 3F6C  
                      u6970 2506                        u7770 2882                        u8810 0D78  
                      u8730 0B56                        u8650 08EE                        u9450 1A08  
                      u9370 14F8                        u8491 565C                        u9291 2F00  
                      u7691 45AE                        u8571 4DFA                        u6891 23FE  
                      u7931 3F68                        u7851 3E1E                        u6971 2502  
                      u7771 287E                        u8811 0D74                        u8731 0B52  
                      u8651 08EA                        u9451 1A04                        u9371 14F4  
                      u8580 4E18                        u7940 3FDA                        u7860 3E32  
                      u6980 2516                        u7780 29A8                        u8900 10C0  
                      u8820 0D96                        u8740 0B80                        u8660 0924  
                      u9460 1A20                        u9380 150E                        u8485 4C50  
                      u8581 4E14                        u7941 3FD6                        u7861 3E2E  
                      u6981 2512                        u7781 29A4                        u8901 10BC  
                      u8821 0D92                        u8741 0B7C                        u8661 0920  
                      u9461 1A1C                        u9381 150A                        u7950 400A  
                      u7870 3E94                        u6990 2690                        u7790 2A80  
                      u8910 10EC                        u8830 0DDA                        u8750 0B9E  
                      u8670 0988                        u8590 070C                        u9470 1A52  
                      u9390 1538                        u9607 468A                        u9527 40FE  
                      u7951 4006                        u7871 3E90                        u7791 2A7C  
                      u8911 10E8                        u8831 0DD6                        u8751 0B9A  
                      u8671 0984                        u8591 0708                        u9471 1A4E  
                      u9391 1534                        u7960 401E                        u7880 3EBE  
                      u8920 1120                        u8840 0E0E                        u8760 0BD0  
                      u8680 09E6                        u9480 1C76                        u9617 4698  
                      u9537 4108                        u7961 401A                        u7881 3EBA  
                      u8921 111C                        u8841 0E0A                        u8761 0BCC  
                      u8681 09E2                        u9481 1C72                        u7970 4046  
                      u7890 3ED2                        u8930 1146                        u8850 0E2C  
                      u8770 0CFA                        u8690 0A6A                        u9490 1CBA  
                      u9707 42B6                        u9627 46A6                        u9547 4182  
                      u7971 4042                        u7891 3ECE                        u6995 2686  
                      u8931 1142                        u8851 0E28                        u8771 0CF6  
                      u8691 0A66                        u9491 1CB6                        u7980 4066  
                      u8940 115C                        u8860 0EE6                        u8780 0D12  
                      u9717 42C0                        u9637 46B4                        u9557 418C  
                      u7981 4062                        u8941 1158                        u8861 0EE2  
                      u8781 0D0E                        u7990 54B6                        u8950 119A  
                      u8870 0F1A                        u8790 0D40                        u9727 42CE  
                      u9647 46DA                        u9567 4196                        u7991 54B2  
                      u8951 1196                        u8871 0F16                        u8791 0D3C  
                      u8960 11B2                        u8880 0F36                        u9657 46F2  
                      u9577 41A2                        u8961 11AE                        u8881 0F32  
                      u8970 11D6                        u8890 0F5A                        u9667 4726  
                      u9587 466E                        u8971 11D2                        u8891 0F56  
                      u8980 1202                        u9677 473E                        u9597 467C  
                      u8981 11FE                        u8990 121A                        u9687 4232  
                      u8991 1216                        u9697 423C              generateCRC@crc 0016  
                      _main 146E                        fsr1h 000FE2                        fsr2h 000FDA  
                      indf1 000FE7                        indf2 000FDF                        fsr1l 000FE1  
                      fsr2l 000FD9                        btemp 0077                        prodh 000FF4  
                      prodl 000FF3                        start 000E             ___fldiv@new_exp 004B  
           __end_of_Lcd_Cmd 42D8                _sprintf$2478 00B2             __end_of_Lcd_Out 4FA8  
              ___param_bank 000000                  _Lcd_Chr_CP 4078                       ??_isr 0004  
      _valPotenciometroHeat 0094        _valPotenciometroVent 0090               ___fltol@sign1 005B  
           __end_of___aldiv 486C             __end_of___fladd 2432                       ?_main 0001  
           __end_of___fldiv 3002             __end_of___awdiv 4EF0             __end_of___flneg 55E4  
           __end_of___awmod 5058             __end_of___flmul 285C             __end_of___flsub 55AC  
           __end_of___fltol 4972             __end_of___lldiv 51A6             ___awdiv@divisor 000E  
           __end_of___llmod 52C0              clearResponse@i 000B             __end_of___lwdiv 542A  
           __end_of___lwmod 5566                       i2l250 3D5C                       i2l148 4402  
                     i2l252 3DCA                       i2l247 3D5E                       i2l347 56DA  
                     i2l528 56AE             ___awdiv@counter 0010                       _RCREG 000FAE  
                     _RCSTA 000FAB   writeReg@wr_valToWriteHigh 001E                       _TMR0H 000FD7  
                     _TMR0L 000FD6                       _SPBRG 000FAF                       _PORTA 000F80  
                     _PORTB 000F81                       _PORTC 000F82                       _PORTD 000F83  
                     _PORTE 000F84                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94                       _TRISD 000F95                       _TRISE 000F96  
                     _TXREG 000FAD                       _TXSTA 000FAC         writeCoil@wc_Address 0024  
       ___lmul@multiplicand 000A          __size_of_PWM1_Init 00F2                 ?_PWM1_Start 0001  
        __size_ofi2_Lcd_Cmd 012C                       _coils 027D             __end_of_dpowers 0691  
           __end_of_readReg 38C0                       _scale 285C             __end_of_isdigit 5616  
     writeReg@wr_AddressLow 0018                       tablat 000FF5                       ttemp5 0078  
                     ttemp6 007B                       ttemp7 007F                       status 000FD8  
                     wtemp8 0078             __end_of_sprintf 146E            __end_of_ClsUSART 56BC  
              ?_modbusDelay 0001            __end_of_Lcd_Init 4760              checkCRC@crcLow 000D  
 writeCoil@wc_valToWriteLow 001C             __initialization 533C                __end_of_main 1F72  
          __end_of_OpnUSART 5498  _valPotenciometroVentToDuty 009C                      ??_main 006F  
          __end_of_OpenTmr0 56B0               __activetblptr 000002        __size_of__tdiv_to_l_ 0156  
             ?_readInputReg 0001       __end_of_clearResponse 5646    __end_of_ConfigInterrupts 56C8  
    __size_of_readInputCoil 022C                      _ADCON0 000FC2                      _ADCON1 000FC1  
          ___llmod@dividend 001F                      ?_scale 003A                      _ADRESH 000FC4  
                    _ADRESL 000FC3                      _CCPR1L 000FBE            ___awdiv@dividend 000C  
               readCoil@crc 001E            __end_of_adc_init 56D2                 readCoil@lsb 0025  
                    i2l6021 42DA                      i2l6031 436E                      i2l6023 42DE  
                    i2l6041 43F4                      i2l6033 43E0                      i2l6025 435C  
                    i2l6035 43E8                      i2l6027 4364                      i2l6037 43EA  
                    i2l6029 4366                      i2l6221 3C74                      i2l6213 3C42  
                    i2l6039 43F2                      i2l6231 3CB6                      i2l6223 3C82  
                    i2l6215 3C50                      i2l6241 3CEC                      i2l6233 3CB8  
                    i2l6225 3C84                      i2l6217 3C52                      i2l6251 3D20  
                    i2l6243 3CFA                      i2l6235 3CBE                      i2l6227 3CA2  
                    i2l6219 3C58                      i2l6261 3D48                      i2l6253 3D24  
                    i2l6245 3D0A                      i2l6237 3CCC                      i2l6229 3CA8  
                    i2l6271 3D6C                      i2l6263 3D4C                      i2l6255 3D32  
                    i2l6247 3D0C                      i2l6239 3CDC                      _INTCON 000FF2  
                    i2l6281 3D92                      i2l6273 3D70                      i2l6265 3D50  
                    i2l6257 3D42                      i2l6249 3D10                      i2l6291 3DC2  
                    i2l6283 3D9A                      i2l6275 3D72                      i2l6267 3D54  
                    i2l6259 3D44                      i2l6285 3DAA                      i2l6277 3D82  
                    i2l6293 3DC8                      i2l6287 3DAC                      i2l6279 3D8A  
                    i2l6289 3DBE                      i2l5871 5698                      i2l5873 56A0  
                    i2l5881 56D2                      i2l5875 56A8                      i2l5877 56AA  
                    i2l5879 56AC                   ??_Lcd_Cmd 0006                   ??_Lcd_Out 000C  
          __end_of_checkCRC 452E            __end_of_decodeIt 4E2C            __end_of___xxtofl 3C38  
    writeCoil@wc_valToWrite 0020        __size_of_generateCRC 00F0            __end_of__powers_ 0635  
                    ___flge 4A78                      ___fleq 5058           __end_of_PWM1_Init 4C6E  
                    ___lmul 5498                 ?_Lcd_Chr_CP 0001           __end_ofi2_Lcd_Cmd 4404  
                 ??___aldiv 000E                   ??___fladd 004F                      ___wmul 5672  
                 ??___fldiv 0042                   ??___awdiv 0010                   ??___flneg 000A  
       __size_of_PWM1_Start 002C                   ??___awmod 000A                   ??___flmul 0029  
                 ??___flsub 005F                   ??___fltol 0057                   ??___lldiv 001A  
                 ??___llmod 0027                   ??___lwdiv 0010                   ??___lwmod 000A  
          __end_of_readCoil 36FC                      _pidSum 008C                      _fround 3002  
                    clear_0 5374                      clear_1 5380                      clear_2 538C  
                    clear_3 5398            ___awdiv@quotient 0012             ___awmod@divisor 0008  
           ___awmod@counter 000A      writeReg@wr_AddressHigh 001A             readInputReg@crc 001A  
                 ??_readReg 0018                __pdataCOMRAM 0076                   ??_isdigit 0006  
            ??_readInputReg 0018                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                   ??_sprintf 006B  
          __end_of_writeReg 4A78                  ___flge@ff1 0021                  ___flge@ff2 0025  
              ___xxtofl@arg 001D                ___xxtofl@exp 001C                ___xxtofl@val 0013  
                ___fleq@ff1 0006                  ___fleq@ff2 000A                  __accesstop 0080  
   __end_of__initialization 53A8    writeReg@wr_valToWriteLow 001C                  ___flneg@f1 0006  
    _origemParametrosManual 00DB               ___rparam_used 000001             checkCRC@crcHigh 000B  
                ___fltol@f1 0053               _readInputCoil 32A4              __pcstackCOMRAM 0001  
     __end_of_PWM1_Set_Duty 5238                __pidataBANK0 56DC               __end_of_scale 2C68  
                __div_to_l_ 3F2C                   ?_ClsUSART 0001                   ?_Lcd_Init 0001  
            _ligarAquecedor 00A4                _endOfMessage 0075             __div_to_l_@exp1 0013  
           __div_to_l_@cntr 0012                     ??_scale 003E             __div_to_l_@quot 000E  
              sprintf@width 00C4         __size_of_Lcd_Chr_CP 0134   readInputCoil@howManyBytes 0021  
                __pbssBANK0 0080                  __pbssBANK1 0100                  __pbssBANK2 0200  
                __pbssBANK3 0300                   ?_OpnUSART 0001               __div_to_l_@f1 0006  
             __div_to_l_@f2 000A                   ?_OpenTmr0 0001              ?_readInputCoil 0001  
                   ?___flge 0021        __size_of_modbusDelay 000A                     ?___fleq 0006  
                   ?___lmul 0006                     ?___wmul 0006               ??_adc_amostra 0008  
                   _CCP1CON 000FBD                     ?_fround 003A              ___lmul@product 000E  
                 ?_adc_init 0001                   ?_checkCRC 0001                     _INTCON2 000FF1  
                 ?_decodeIt 0001                   ?___xxtofl 0013                  ??_ClsUSART 0006  
              ??_PWM1_Start 0006                  ??_Lcd_Init 0009                     _Lcd_Cmd 41AC  
                 ?_readCoil 0001                     _Lcd_Out 4EF0                  ??_OpnUSART 0006  
        __size_of_writeCoil 0122           readReg@rr_Address 001C                  ??_OpenTmr0 0001  
         __end_of__npowers_ 0669                     __Hparam 0000                  _scale$2477 003E  
                   __Lparam 0000        __end_of_readInputReg 3A84                  _holdingReg 017D  
                   ___aldiv 4760             __size_of___flge 0104             __size_of___fleq 00AA  
                   ___fladd 1F72                     ___fldiv 2C68                     ___awdiv 4E2C  
                   ___flneg 55AC             __size_of___lmul 006A           generateCRC@crcLow 000E  
                   ___awmod 4FA8                     ___flmul 2432                     ___flsub 5566  
                   ___fltol 486C                     ___lldiv 5102             __size_of___wmul 0026  
                   ___llmod 5238                     ___lwdiv 53B6                     ___lwmod 5502  
        __end_of_PWM1_Start 5672                __psmallconst 0600                  _newMessage 0076  
                _pidVentVal 0084                     __pcinit 533C               _messageLength 0073  
           __size_of_fround 02A2                     __ramtop 0600                  ??_adc_init 0006  
                   __ptext0 146E                     __ptext1 06EC                     __ptext2 285C  
                   __ptext3 4FA8                     __ptext4 4E2C                     __ptext5 55E4  
                   __ptext6 3002                     __ptext7 5502                     __ptext8 53B6  
                   __ptext9 2432                   ?_writeReg 0001                   _T0CONbits 000FD5  
               ?__div_to_l_ 0006                     _lastErr 0088                  ??_checkCRC 0006  
                   _dpowers 0669                   _T2CONbits 000FCA                     _readReg 36FC  
       __end_of_adc_amostra 533C                     _isdigit 55E4                __size_of_isr 3DCE  
                ??_decodeIt 0029                  ??___xxtofl 0017            ___awmod@dividend 0006  
          ___aldiv@dividend 0006            readInputCoil@crc 001E                     _strLcd1 0300  
                   _strLcd2 02AF            readInputCoil@lsb 0025           ?_ConfigInterrupts 0001  
                   _sprintf 06EC              __pintcode_body 3C38        end_of_initialization 53A8  
        ??_ConfigInterrupts 0006           readReg@rr_numRegs 001E                  ??_readCoil 0018  
             __Lmediumconst 0000                     int_func 3C38               i2Lcd_Cmd@data 0003  
           ??_readInputCoil 0018               _modbusMessage 0072             ___lldiv@divisor 0016  
           ___lldiv@counter 001E                writeCoil@crc 0022                   _RCSTAbits 000FAB  
          ___aldiv@quotient 0010                ??_Lcd_Chr_CP 0006                     postdec1 000FE5  
                   postdec2 000FDD                     postinc0 000FEE                     postinc1 000FE6  
                   postinc2 000FDE              __tdiv_to_l_@f1 0006              __tdiv_to_l_@f2 000A  
                _timerCount 0074               ??__tdiv_to_l_ 000E                   _PWM1_Init 4B7C  
                 i2_Lcd_Cmd 42D8                   _PORTBbits 000F81                  ??_writeReg 0018  
                 _PORTCbits 000F82                   _PORTDbits 000F83                   _PORTEbits 000F84  
         readCoil@remainder 0020           __end_of_writeCoil 4650                 ___fladd@grs 0056  
             ___xxtofl@sign 001B                   _TRISBbits 000F93                   _TRISCbits 000F94  
                 _TRISDbits 000F95                   _TRISEbits 000F96              PWM1_Set_Duty@d 0021  
               ___fldiv@grs 004D                 ___fldiv@rem 0046          __end_of_Lcd_Chr_CP 41AC  
             ??_generateCRC 0008                 ___flmul@grs 002F                   _TXSTAbits 000FAC  
       __size_of__div_to_l_ 014C       writeReg@wr_valToWrite 0022      __size_of_clearResponse 0030  
   writeCoil@wc_AddressHigh 001A              __end_of___flge 4B7C              __end_of___fleq 5102  
               _adc_amostra 52C0              __end_of___lmul 5502              __end_of___wmul 5698  
               _BAUDCONbits 000FB8               __pidataCOMRAM 56E4                  ?_PWM1_Init 0014  
                ?i2_Lcd_Cmd 0001              __end_of_fround 32A4         start_initialization 533C  
       __end_of__tdiv_to_l_ 3F2C                 __end_of_isr 3DD6           __size_of_ClsUSART 000C  
             Lcd_Out@buffer 000A           __size_of_Lcd_Init 0110       __size_of_readInputReg 01C4  
           ___llmod@divisor 0023             ___llmod@counter 0027                  readReg@crc 001A  
         __size_of_OpnUSART 006E         __end_of_generateCRC 4D5E                    ??___flge 0029  
                  ??___fleq 000E           __size_of_OpenTmr0 0018                    ??___lmul 000E  
                  ??___wmul 000A              readInputCoil@i 0026              readInputCoil@j 0027  
            readInputCoil@k 0028              readInputCoil@l 0024                 __pdataBANK0 00D5  
                  ??_fround 003E               sprintf@tmpval 00B8                   ___fladd@a 004B  
                 ___fladd@b 0047                  fround@prec 0046                   ___fldiv@a 003E  
                 ___fldiv@b 003A           __size_of_adc_init 000A                   ___flmul@a 0025  
                 ___flmul@b 0021                 __pbssCOMRAM 0071                   ___flsub@a 005B  
                 ___flsub@b 0057                   _adcResult 00AC               __pcstackBANK0 00B2  
              _readInputReg 38C0           __size_of_checkCRC 012A           __size_of_decodeIt 00CE  
             _clearResponse 5616           __size_of___xxtofl 01B4                _isdigit$2278 0007  
    __size_of_PWM1_Set_Duty 0092              _timerHeatCount 00A6                    ?_Lcd_Cmd 0001  
               sprintf@flag 00C2                    ?_Lcd_Out 0009                 sprintf@eexp 00C0  
               sprintf@fval 00C6                 sprintf@prec 00CA           _voltPotenciometro 00AE  
             ??_modbusDelay 0001           __size_of_readCoil 022C                   _main$2473 00CD  
                 _main$2474 00D1            ___lwdiv@dividend 000C                   __pintcode 0008  
                  ?___aldiv 0006                    ?___fladd 0047                    ?___fldiv 003A  
                  ?___awdiv 000C                    ?___flneg 0006                    ?___awmod 0006  
                  ?___flmul 0021                    ?___flsub 0057                    ?___fltol 0053  
                  ?___lldiv 0012                    ?___llmod 001F                   __npowers_ 0635  
                  ?___lwdiv 000C                    ?___lwmod 0006                 ??_PWM1_Init 0016  
               ??i2_Lcd_Cmd 0001                 __tdiv_to_l_ 3DD6                ??__div_to_l_ 000E  
               __smallconst 0600                   checkCRC@i 0013                   checkCRC@j 000F  
                  ?_readReg 0001                    ?_isdigit 0001           __size_of_writeReg 0106  
            ?_clearResponse 0001            ___lwdiv@quotient 0011                    ?_sprintf 005F  
            __size_of_scale 040C        readCoil@howManyBytes 0021                _modoOperacao 00AA  
                PWM1_Init@f 0014             ___aldiv@divisor 000A             ___aldiv@counter 000E  
               _generateCRC 4C6E              ___wmul@product 000A                    _LATBbits 000F8A  
             PWM1_Init@temp 001A                    _PIE1bits 000F9D                    _PIR1bits 000F9E  
        __end_of__div_to_l_ 4078                    i2u613_45 42E6                    i2u614_45 4300  
                  i2u615_45 4326                    i2u640_40 3CEC                    i2u632_40 3C50  
                  i2u640_41 3CE8                    i2u632_41 3C4C                    i2u641_40 3CFA  
                  i2u633_40 3C6E                    i2u641_41 3CF6                    i2u633_41 3C68  
                  i2u642_40 3D20                    i2u634_40 3C70                    i2u642_41 3D1C  
                  i2u643_40 3D32                    i2u635_40 3C82                    i2u643_41 3D2E  
                  i2u635_41 3C7E                    i2u644_40 3D6C                    i2u636_40 3CA2  
                  i2u644_41 3D68                    i2u636_41 3C9E                    i2u645_40 3D82  
                  i2u637_40 3CB6                    i2u645_41 3D7E                    i2u637_41 3CB2  
                  i2u646_40 3DBE                    i2u638_40 3CCC                    i2u646_41 3DBA  
                  i2u638_41 3CC8   __size_of_ConfigInterrupts 000C                    i2u639_40 3CDC  
                  i2u639_41 3CD8                    i2u973_47 435E                    i2u974_47 4368  
                  _RCONbits 000FD0                    i2u975_47 43E2                    i2u976_47 43EC  
                  i2u977_47 43FA                    Lcd_Out@x 0009                    Lcd_Out@y 000C  
             _PWM1_Set_Duty 51A6                 writeReg@crc 0024         __end_of_modbusDelay 56DC  
              Lcd_Init@data 000A                  _ADCON0bits 000FC2           ___wmul@multiplier 0006  
                  _ClsUSART 56B0                 checkCRC@crc 0011                    _Lcd_Init 4650  
                 _writeCoil 452E      writeCoil@wc_AddressLow 0018           ___lmul@multiplier 0006  
               _INTCON2bits 000FF1                 _INTCON3bits 000FF0                   copy_data0 5350  
             OpnUSART@spbrg 0007            __size_of_Lcd_Cmd 012C                    _OpnUSART 542A  
          __size_of_Lcd_Out 00B8                   readCoil@i 0026                   readCoil@j 0027  
                 readCoil@k 0028                   readCoil@l 0024                    _OpenTmr0 5698  
                  __Hrparam 0000       __end_of_readInputCoil 34D0                    __Lrparam 0000  
            ?_PWM1_Set_Duty 0001               readInputReg@i 0020               readInputReg@j 0022  
              ?_adc_amostra 0006            __size_of___aldiv 010C            __size_of___fladd 04C0  
          __size_of___fldiv 039A            __size_of___awdiv 00C4            __size_of___flneg 0038  
          __size_of___awmod 00B0            __size_of___flmul 042A            __size_of___flsub 0046  
          __size_of___fltol 0106            __size_of___lldiv 00A4          generateCRC@crcHigh 0010  
          __size_of___llmod 0088            __size_of___lwdiv 0074            __size_of___lwmod 0064  
               _fround$2475 0042                 _fround$2476 003E                    _adc_init 56C8  
                  _checkCRC 4404             ??_clearResponse 000B                  sprintf@val 00BC  
                  _decodeIt 4D5E                    ___xxtofl 3A84            __size_of_readReg 01C4  
          __size_of_isdigit 0032              Lcd_Chr_CP@data 0008             ___lwdiv@divisor 000E  
           ___lwdiv@counter 0010                    __ptext10 3DD6                    __ptext11 3F2C  
                  __ptext20 5058                    __ptext12 3A84                    __ptext21 4D5E  
                  __ptext13 5672                    __ptext30 542A                    __ptext22 4972  
                  __ptext14 5238                    __ptext31 56B0                    __ptext23 452E  
                  __ptext15 486C                    __ptext40 4B7C                    __ptext32 4404  
                  __ptext24 36FC                    __ptext16 5566                    __ptext41 4760  
                  __ptext33 56C8                    __ptext25 38C0                    __ptext17 1F72  
                  __ptext50 5698                    __ptext42 4EF0                    __ptext34 52C0  
                  __ptext26 32A4                    __ptext18 55AC                    __ptext43 4078  
                  __ptext35 2C68                    __ptext27 34D0                    __ptext19 4A78  
                  __ptext44 4650                    __ptext36 5646                    __ptext28 4C6E  
                  __ptext45 41AC                    __ptext37 51A6                    __ptext29 5616  
                  __ptext46 56BC                    __ptext38 5498                    __ptext39 5102  
                  __ptext48 42D8                    __ptext49 56D2                  ?_writeCoil 0001  
                  __powers_ 0601            __size_of_sprintf 0D82  writeCoil@wc_valToWriteHigh 001E  
               Lcd_Cmd@data 0008                    _readCoil 34D0               __size_of_main 0B04  
                  _received 0200                 _modbusDelay 56D2                  writeCoil@i 0026  
              _tempSetpoint 00D5                    _response 0100                    int$flags 0077  
  generateCRC@messageLength 000D                    _writeReg 4972                 Lcd_Out@data 000D  
                _INTCONbits 000FF2      readInputReg@rr_Address 001C          readCoil@rc_Address 001C  
                  readReg@i 0020                    readReg@j 0022     readInputCoil@rc_Address 001C  
       readCoil@rc_numCoils 0022                    isdigit@c 0008                    scale@scl 0042  
  readInputCoil@rc_numCoils 0022                    intlevel2 0000                   sprintf@ap 00B6  
          __tdiv_to_l_@exp1 0016                   sprintf@sp 005F            __tdiv_to_l_@cntr 0015  
          __tdiv_to_l_@quot 0011            ___lwmod@dividend 0006            ___lldiv@dividend 0012  
           ??_PWM1_Set_Duty 001F            _ConfigInterrupts 56BC                   writeReg@i 0026  
    readInputReg@rr_numRegs 001E                ?__tdiv_to_l_ 0006                 _temperatura 00A0  
                  sprintf@c 00CC                    sprintf@f 0061            ___lldiv@quotient 001A  
           ___lwmod@divisor 0008             ___lwmod@counter 000A            adc_amostra@canal 000C  
              ___aldiv@sign 000F                  _PWM1_Start 5646                 ??_writeCoil 0018  
             ___fladd@signs 0053                ___fladd@aexp 0054                ___fladd@bexp 0055  
              ?_generateCRC 0006      readInputCoil@remainder 0020  
